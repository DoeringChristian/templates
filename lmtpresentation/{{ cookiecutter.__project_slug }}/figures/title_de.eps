%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: title_de.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: %%CreationDate: 05.03.2009%%BoundingBox: 0 0 1134 850%%HiResBoundingBox: 0 0 1133.8584 849.3526%%CropBox: 0 0 1133.8584 849.3526%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x199 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">bg</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2009-03-05T18:30:45+01:00</xap:CreateDate>
         <xap:ModifyDate>2009-03-05T18:30:45+01:00</xap:ModifyDate>
         <xap:MetadataDate>2009-03-05T18:30:45+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>192</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlPmXzXoHlnT01DXLr6paPIIUk9O&#xA;SWrlWenGJXb7KMenbL9Ppp5jwwFmr6D72nNqIYhczQJpJ9J/NjyBq4vjp+qGYadaSX96Tb3KenbR&#xA;AF5PjiWuzDYVJ7DLZ6DNCrH1EDmOvLq1Y9dhnfDLkCevIc0E355flaDT9NVPIKALW8O53HSHv28c&#xA;tPZOoHOP+yj+tqHamn/nfYf1Ms0LXdK17S4dV0mf6zp9wXEM4V0Dem7Rt8LhW2dCOmYWXFLHIxkK&#xA;kHMxZY5IiUeRR+VtjsVY/wCc5WjtLHhqkulyPdrGjwwS3LS84ZVMfpwkHZSZOTVVSvJhQZlaQWT6&#xA;eLbvArcd/wAvi4uqOw9XDv3X0Pd8/g8ksrKyuEkgg8/6vPBdQi7muUtLuJjwa2siWX1Emmact6aU&#xA;RxXlX4l33s5kbnDAEGucf6Uu6hXPmPtdMIiV1llR35HvA77N8uqNa28uW8K+YtT893EllcXUbW3O&#xA;3vRW3s5DOYFR5ZJWCORSWnwmo6lsr4shPhxxCwO+PM7Xyr4dWfDj2mcpokdJdN6538ei+wtNO0rT&#xA;0trL8wbyFbhPqGkBba8kCT2j29yTHC0jo/KNVRFVQro9F5FjyE5SnKzhG28t48jY518fIjp0lj4Y&#xA;ChlO+w2PMUeXu2HeD1SXVH0u/vI9Mu/P2pNJdGPT0sLm0vGMctswtVuSFuERjJPAakhjyforAsuR&#xA;jEojiGGO29gx6719PQHy5fOnJwzPCckt9qqXTrzrp9vyXWXS5I29D8yNXuJDAsb6gtvfFLZUh9d5&#xA;CTIq8pEtmFBVutQSCwjUhzwQG/K47713eaOKJ5ZpHzqW3Xv8l89xoESz28n5h3UM97LbR3h+r3Zr&#xA;6MNxYu0qyzOSLhwC2548U2C8SoEcho+CPTdbjqRLbbp+vqzJgAR4p9XkegIN79fx5Szyb598o+Xf&#xA;KMNlNq11qU9vG9wkLWtwLr0mDyrGUJlQCNENCHCBOJ6EFsHV6LLlykiIiDtzFd3l+u7cvTazFixA&#xA;GRka7jff5/fT0iwv7TULG3vrOT1bW6jWaCShXkjgMp4sAw2PQiuaicDGRieYdrCYkBIcir5Fk7FX&#xA;Yq7FXYq7FXYq7FXYqp3NxHbW8txLy9OFGkfgrSNxUVPFEDMx22Cgk9sMY2aCJGhbEIvzg8hTxQzW&#xA;t9LcwSTm2kljtbnjCyxmQtNyjUovFep9z0ViM89l5wSCKNXzG/u3/HycL+UcPQ/Yfx+PItR/nB5E&#xA;lhkkt7uadlWZ4oktrjnKtvEJZSoZBxCq25k4/dvhPZecHcAcuo6mvxVo/lPDRok8+h6C/wAWjbH8&#xA;zPI99ZveWuqLJBHT1GEctVJtzdUI4V/uVY/MEfa2yqfZ+aJox3+HfX3tg12Ii+L8Vf6Evg/Oj8t5&#xA;pHQat6ZUpQyQXCclkZUVhWPYc24/FSnXpvlsuydQP4ftH62uPaeA/wAX2Fc/5x+QECSG+mNtJD64&#xA;uVtblkCiUwHkqxmRD6gp8SjriOys/dvdcx3X3r/KWHv29x9yJk/NTyJFE7y6nwaOCK6mh9Gd5Uhm&#xA;WB43aNEZgGF3FT5n+VqQHZ2cnaPWuY5i/wDiT+CGw67EBZPS/nX6wpyfm15FR7cfXZTHPIkbT/Vr&#xA;hY4jIrtGZWdF4h/T+H2o32fiwjszOb25eY+z8eXNge0sIrf7D+Px3KWq+cfLXmfyL5obQr764LfT&#xA;LgT+mrxsvrWrvHT1VTcr9x2O4ww0uTDmhxirkO7oUZ9TjyYcnCbqJ+4vPLu7srOW3W7uRbvc/lwL&#xA;a29aVEeSZukcVSFaVqdO/bvmzxwkYmgTWovv7+f4p1MssYjcxH+DD3fjuHvSL8qyH88/l6RQU0m9&#xA;b4Bx63OpA1rTavbx6bVzO7U2w5v+GR/3MPx97HRis2H3S/3/AOPdz3et/kdX/lVmhk1qVuDvTvdS&#xA;nam1PD2zQdritTP3/odv2X/i8f8AO/3RZ1mtdghvT1L/AH/D/wAiX/6q5O49x+f7GFS7x8v2qc1l&#xA;dTlDM1tKYm5xc7ctxbiV5LWTY8WIr4HCJgcr+f7EGBPOvl+1K/8ABOhcDH+itJ4EsSn6PjoS1OW3&#xA;LvxFcv8Azk/50/8ATNP5SH82H+lVG8paU9sLV9P0trYUpAbBCm3Knw86beo33nxyP5qV3c7/AKyf&#xA;y0aqo1/VQtn+X/l60R0h03TSJHlkdpbT1mLT19X4pZHajBiKVpTbplktdklzlL51y+DCOjgOQj8r&#xA;/Srf4J0L1TN+itJ9Zm5tJ+j4+RYGvInlWtd8j+cnVcU/9My/KQu+GH+lWp5F8vxmqaRpCHgY6rp0&#xA;Y+A1BXZvs79MTrMn86f+mX8pD+bD/SqjeTdGdeL6ZpTKTyIOnxkVDM9ft/zOzfMnxwDVz/nT/wBM&#xA;k6WB/hh/pVh8kaCeNdJ0g8Psf7jo9t2O3xeMjH6T44fzk/50/wDTI/Kw/mw/0qawWl3bwpBbvbQw&#xA;RKFjijt2VFUbAKoloAMolIE2bv3/ALG4RIFCq937VT09S/3/AA/8iX/6q4Lj3H5/sTUu8fL9rvT1&#xA;L/f8P/Il/wDqrjce4/P9i1LvHy/a709S/wB/w/8AIl/+quNx7j8/2LUu8fL9rvT1L/f8P/Il/wDq&#xA;rjce4/P9i1LvHy/a709S/wB/w/8AIl/+quNx7j8/2LUu8fL9rvT1L/f8P/Il/wDqrjce4/P9i1Lv&#xA;Hy/a709S/wB/w/8AIl/+quNx7j8/2LUu8fL9rvT1L/f8P/Il/wDqrjce4/P9i1LvHy/a709S/wB/&#xA;w/8AIl/+quNx7j8/2LUu8fL9rRi1EggzwEHYgwtSn/I3G49x+f7FqXePl+1Kk8m6MnHhpmlLw9Qp&#xA;TT0FDKvCSlH/AG12bxHXLzq5n+Kf+maRpYD+GH+lWnyVoZ4E6XpJMZYx/wC4+P4S44tT4tuQ2OH8&#xA;3P8AnT/0yPysP5sP9KqL5T0tYFt10/TBAsiTLCLFAgljXgkgXnTkq/CD1AyP5mV3c7/rJ/LRqqjX&#xA;9VpPKGkoKJp2lqKg0Fgg3BDA/b/mUH6BhOqn/On/AKZfysf5sP8ASqZ8kaCURDpWkFI2Dov6Pjor&#xA;AkhgOWxqx+/D+cn/ADp/6ZH5WH82H+lXSeS9ElVlk0vSXV444XVtPjIMUIAjQ1fdU4jiOg7YBq5j&#xA;+Kf+mSdNHuj/AKVs+TtHaUTHTdKMoCKJDYJy4xiiCvOtFHTwx/NTquKf+mX8rHuj/pVa38tWVtBc&#xA;W9vaadDb3iCK7hjslVJYwpQJIocB1CHjQ9tsjLOZEEmRr+l+xlHAIggCIv8AoqF35L0S9WFbzS9J&#xA;uVt4kt7cTafHII4Y6+nGnJjxROR4qNhhjqJRujIXz9SJaeJqxE1/RVbbyrp1rPbXFrY6bBPZoY7S&#xA;WKxVHhQ86rGyuCgPqvsP5j4nGeolIEEyN/0ljp4xIIEQR/RRVhpb6daR2enrZ2dpFX0ra3tvSjXk&#xA;xZuKJIFFWJJ98rnkEjcrJ9/7GcYGIoUB7v2oj09S/wB/w/8AIl/+quRuPcfn+xlUu8fL9qJyDN2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2Kv/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F2A35D130B4511DE85FA9966B6E97B38</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F2A35D140B4511DE85FA9966B6E97B38</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:F2A35D120B4511DE85FA9966B6E97B38</stRef:instanceID>
            <stRef:documentID>uuid:F2A35D110B4511DE85FA9966B6E97B38</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -849.353 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 849.353 li1133.86 849.353 li1133.86 0 licpclp[1 0 0 1 0 0 ] concat1132.47 849.353 mo0 849.353 li0 0 li1132.47 0 li1132.47 849.353 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0 0 cmykfgsave % PSGState979.819 26.0391 mo1073.26 26.0391 li1073.26 75.4171 li979.819 75.4171 licpclp[1.74194 0 0 -1.74194 495.176 816.181 ] gset[] set_spot_normalization_ary%%BeginDocument: /Users/flow-c/Promotion/Dokumente/Templates/MTG_Presentation_LaTeX/figures/TUMLogo_oZ_Vollfl_blau_CMYK.eps%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Florian) ()
%%Title: (TUMLogo_oZ_Vollfl_blau_CMYK.eps)
%%CreationDate: 7/1/2008 3:42 PM
%%BoundingBox: 278 425 332 454
%%HiResBoundingBox: 278.2202 425.252 331.8613 453.5986
%%DocumentProcessColors: Cyan Magenta
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 0.952941 0.701961 0.023529 0 (PANTONE 300 C)
%%CMYKProcessColor: 1 1 1 1 ([Passermarken])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 26.3999 -11.0801 585.8398 804.1997
%AI3_DocumentPreview: PC_ColorTIFF
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -32.5 629.5 2 1415 1097 282 1 1 67 73 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:22 3
%AI7_GridSettings: 72 8 72 8 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
15 Bn
%AI5_BeginGradient: (Chrom)
(Chrom) 0 6 Bd
[
<
202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B
1B1B1B1B1A1A1A1A1A1A1A1A19191919191919191818181818181818171717171717171716161616
16161616151515151515151514141414141414141313131313131313121212121212121211111111
1111111110101010101010100F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C
0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909080808080808080807070707
07070707060606060606060605050505050505050404040404040404030303030303030302020202
02020202010101010101010100000000
>
<
60605F5F5E5E5E5D5D5D5C5C5B5B5B5A5A5A59595858585757575656555555545454535352525251
515150504F4F4F4E4E4E4D4D4C4C4C4B4B4B4A4A4949494848484747464646454545444443434342
424241414040403F3F3E3E3E3D3D3D3C3C3B3B3B3A3A3A3939383838373737363635353534343433
3332323231313130302F2F2F2E2E2E2D2D2C2C2C2B2B2B2A2A292929282828272726262625252524
2423232322222221212020201F1F1E1E1E1D1D1D1C1C1B1B1B1A1A1A191918181817171716161515
15141414131312121211111110100F0F0F0E0E0E0D0D0C0C0C0B0B0B0A0A09090908080807070606
06050505040403030302020201010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3D3C3B3A393837363534
333231302F2E2D2C2B2A29282726252423222120
>
<
86858584838382818180807F7E7E7D7C7C7B7A7A7978787777767575747373727171706F6F6E6E6D
6C6C6B6A6A696868676666656564636362616160
>
1
<
2F2E2D2D2C2B2A292928272625252423222121201F1E1D1D1C1B1A19191817161615141312121110
0F0E0E0D0C0B0A0A090807060605040302020100
>
1 %_Br
<
0000010101020203030304040405050506060607070808080909090A0A0A0B0B0C0C0C0D0D0D0E0E
0E0F0F101010111111121212131313141415151516161617171718181919191A1A1A1B1B1B1C1C1D
1D1D1E1E1E1F1F1F202020212122222223232324242425252626262727272828282929292A2A2B2B
2B2C2C2C2D2D2D2E2E2F2F2F30303031313132323333333434343535353636363737383838393939
3A3A3A3B3B3C3C3C3D3D3D3E3E3E3F3F3F4040414141424242434343444445454546464647474748
484949494A4A4A4B4B4B4C4C4C4D4D4E4E4E4F4F4F50505051515252525353535454545555565656
5757575858585959595A5A5B5B5B5C5C
>
<
000101020203030404050506060707080809090A0B0B0C0C0D0D0E0E0F0F10101111121213131414
1516161717181819191A1A1B1B1C1C1D1D1E1E1F202021212222232324242525262627272828292A
2A2B2B2C2C2D2D2E2E2F2F303031313232333334353536363737383839393A3A3B3B3C3C3D3D3E3F
3F404041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5050515152535354
54555556565757585859595A5A5B5B5C5C5D5E5E5F5F606061616262636364646565666667686869
696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7A7B7B7C7D7D7E
7E7F7F80808181828283838484858586
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000001010101010102020202020303030303040404040404050505050506060606060607070707
0708080808080809090909090A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0E0E0E0E0E0F
0F0F0F0F0F1010101010111111111112121212121213131313131414141414141515151515161616
161616171717171718181818181919191919191A1A1A1A1A1B1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D
1D1E1E1E1E1E1F1F1F1F1F2020202020202121212121222222222222232323232324242424242425
25252525262626262627272727272728282828282929292929292A2A2A2A2A2B2B2B2B2B2B2C2C2C
2C2C2D2D2D2D2D2E2E2E2E2E2E2F2F2F
>
1 %_Br
1
0 %_Br
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBC
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
858484838382818180807F7F7E7D7D7C7C7B7A7A79797878777676757574737372727170706F6F6E
6E6D6C6C6B6B6A6969686867676665656464636262616160605F5E5E5D5D5C5B5B5A5A5958585757
5656555454535352515150504F4F4E4D4D4C4C4B4A4A49494847474646454544434342424140403F
3F3E3E3D3C3C3B3B3A39393838373636353534343332323131302F2F2E2E2D2D2C2B2B2A2A292828
27272625252424232322212120201F1E1E1D1D1C1C1B1A1A19191817171616151514131312121110
100F0F0E0D0D0C0C0B0B0A0909080807060605050404030202010100
>
<
10101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A0A0A0A0A0A0A090909090909090909090909090908080808080808080808080808
08070707070707070707070707070706060606060606060606060606060505050505050505050505
05050505040404040404040404040404040403030303030303030303030303030202020202020202
02020202020201010101010101010101010101010000000000000000
>
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0.12549 0.376471 1 0 1 50 59 %_BS
%_0.12549 0.376471 1 0 1 50 59 Bs
0.360784 0.52549 1 0.184314 1 50 50 %_BS
%_0.360784 0.52549 1 0.184314 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
0.890196 0.521569 0.062745 0 1 50 0 %_BS
%_0.890196 0.521569 0.062745 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gelb & Blau Kreis)
(Gelb & Blau Kreis) 1 2 Bd
[
<
060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D
2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
<
060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D
2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
<
CDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B3B3
B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A999898
9796969594949392929190908F8E8E8D8C8C8B8A8A89888887868585848383828181807F7F7E7D7D
7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6A6A696868676666656464636262
6160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4D4D4C4B4B4A4949484747
464545444343424141403F3F3E3D3D3C3B3B3A3939383737363535343332323130302F2E2E2D2C2C
2B2A2A29282827262625
>
<
00000001010101010102020202020203030303030404040404040505050505050606060606070707
07070708080808080809090909090A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0E0E0E
0E0E0E0F0F0F0F0F1010101010101111111111111212121212131313131313141414141414151515
151516161616161617171717171818181818181919191919191A1A1A1A1A1B1B1B1B1B1B1C1C1C1C
1C1C1D1D1D1D1D1E1E1E1E1E1E1F1F1F1F1F1F202020202021212121212122222222222223232323
23242424242424252525252525262626262627272727272728282828282829292929292A2A2A2A2A
2A2B2B2B2B2B2B2C2C2C
>
1 %_Br
[
0.023529 0.023529 0.803922 0 1 50 14 %_BS
%_0.023529 0.023529 0.803922 0 1 50 14 Bs
1 1 0.145098 0.172549 1 50 100 %_BS
%_1 1 0.145098 0.172549 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gelb, Lila, Orange, Blau)
(Gelb, Lila, Orange, Blau) 0 4 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
C6C6C6C7C7C7C7C7C8C8C8C8C8C9C9C9C9CACACACACACBCBCBCBCBCCCCCCCCCCCDCDCDCDCDCECECE
CECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D4D4D4D4D4D5D5D5D5D5D6D6D6D6D6
D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDFDF
DFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7
E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDEDEDEDEEEEEEEEEFEFEFEFEF
F0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8
F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFB
>
<
FFFEFDFCFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEEEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E1E0DFDEDD
DCDBDADAD9D8D7D6D5D4D3D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBFBEBDBCBBBA
B9B8B8B7B6B5B4B3B2B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9D9C9B9A999897
9796959493929190908F8E8D8C8B8A8989888786858483838281807F7E7D7C7C7B7A797877767575
74737271706F6E6E6D6C6B6A6968686766656463626161605F5E5D5C5B5A5A595857565554535352
51504F4E4D4D4C4B4A49484746464544434241403F3F3E3D3C3B3A3939383736353433323231302F
2E2D2C2B2B2A29282726252424232221
>
<
00000000000001010101010101010101010102020202020202020202020303030303030303030303
03040404040404040404040404050505050505050505050506060606060606060606060607070707
070707070707070808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A
0A0A0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E
0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F1010101010101010101010101111111111111111
11111112121212121212121212121213131313131313131313131314141414141414141414141515
15151515151515151515161616161616
>
1 %_Br
<
BBBAB9B8B8B7B6B5B4B3B3B2B1B0AFAEADADACABAAA9A8A7A7A6A5A4A3A2A2A1A09F9E9D9C9C9B9A
9998979696959493929191908F8E8D8C8B8B8A89888786858584838281807F7F7E7D7C7B7A7A7978
7776757474737271706F6E6E6D6C6B6A6969686766656463636261605F5E5E5D5C5B5A5958585756
555453525251504F4E4D4D4C4B4A4948474746454443424141403F3E3D3C3B3B3A39383736363534
33323130302F2E2D2C2B2B2A29282726252524232221201F1F1E1D1C1B1A1A191817161514141312
11100F0E0E0D0C0B0A090908070605040303020100
>
<
FFFFFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F7F7F7F7F6F6F6F6F5F5F5
F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEB
EAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0
E0E0DFDFDFDFDEDEDEDEDDDDDDDDDCDCDCDCDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6
D6D5D5D5D5D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCCCCCCCCCB
CBCBCBCACACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6
>
<
232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A
4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172
737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A
9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2
C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EA
EBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090909080808
08080808080808080808080808080707070707070707070707070707070707060606060606060606
06060606060606050505050505050505050505050505050504040404040404040404040404040404
04030303030303030303030303030303030302020202020202020202020202020202020101010101
010101010101010101010101000000000000000000
>
1 %_Br
<
191A1A1B1C1C1D1D1E1F1F2021212223232424252626272828292A2A2B2B2C2D2D2E2F2F30313132
3233343435363637373839393A3B3B3C3D3D3E3E3F404041424243444445454647474849494A4B4B
4C4C4D4E4E4F505051525253535455555657575859595A5A5B5C5C5D5E5E5F606061616263636465
656667676868696A6A6B6C6C6D6D6E6F6F7071717273737474757676777878797A7A7B7B7C7D7D7E
7F7F808181828283848485868687888889898A8B8B8C8D8D8E8F8F90909192929394949596969797
9899999A9B9B9C9D9D9E9E9FA0A0A1A2A2A3A3A4A5A5A6A7A7A8A9A9AAAAABACACADAEAEAFB0B0B1
B1B2B3B3B4B5B5B6B7B7B8B8B9BABABB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
F1F0EFEFEEEDECEBEBEAE9E8E7E6E6E5E4E3E2E2E1E0DFDEDEDDDCDBDADAD9D8D7D6D6D5D4D3D2D1
D1D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1
B0B0AFAEADACACABAAA9A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9B9A9998979796959493929291
908F8E8E8D8C8B8A8A8988878686858483828281807F7E7D7D7C7B7A797978777675757473727171
706F6E6D6D6C6B6A696868676665646463626160605F5E5D5C5C5B5A595858575655545353525150
4F4F4E4D4C4B4B4A4948474746454443434241403F3E3E3D3C3B3A3A393837363635343332323130
2F2E2E2D2C2B2A292928272625252423
>
<
00000000000000000000010101010101010101010101010101010101010102020202020202020202
02020202020202020202030303030303030303030303030303030303030404040404040404040404
04040404040404040405050505050505050505050505050505050505060606060606060606060606
06060606060606060707070707070707070707070707070707070707080808080808080808080808
0808080808080809090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D
>
1 %_Br
[
1 0.984314 0.129412 0.086275 1 50 95 %_BS
%_1 0.984314 0.129412 0.086275 1 50 95 Bs
0 0.776471 1 0 1 50 65 %_BS
%_0 0.776471 1 0 1 50 65 Bs
0.733333 1 0.137255 0.05098 1 50 35 %_BS
%_0.733333 1 0.137255 0.05098 1 50 35 Bs
0.098039 0 0.945098 0 1 50 5 %_BS
%_0.098039 0 0.945098 0 1 50 5 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gelb, Orange-Radial)
(Gelb, Orange-Radial) 1 2 Bd
[
<
101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D
0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A09
09090909090909090909090808080808080808080808070707070707070707070706060606060606
06060606050505050505050505050504040404040404040404040303030303030303030303020202
02020202020202020101010101010101010101000000000000
>
<
0001010203040505060708090A0A0B0C0D0E0F1011111213141516171819191A1B1C1D1E1F202122
23232425262728292A2B2C2D2E2F2F303132333435363738393A3B3C3D3E3E3F4041424344454647
48494A4B4C4D4E4F50515252535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E
6F70717273737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE
>
<
F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
>
0
1 %_Br
[
0.062745 0 0.964706 0 1 52 19 %_BS
%_0.062745 0 0.964706 0 1 52 19 Bs
0 0.682353 1 0 1 50 100 %_BS
%_0 0.682353 1 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gelb, Violett-Radial)
(Gelb, Violett-Radial) 1 2 Bd
[
<
060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D
2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
<
060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D
2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
<
CDCCCCCBCACAC9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B3B3
B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A999898
9796969594949392929190908F8E8E8D8C8C8B8A8A89888887868585848383828181807F7F7E7D7D
7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6A6A696868676666656464636262
6160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4D4D4C4B4B4A4949484747
464545444343424141403F3F3E3D3D3C3B3B3A3939383737363535343332323130302F2E2E2D2C2C
2B2A2A29282827262625
>
<
00000001010101010102020202020203030303030404040404040505050505050606060606070707
07070708080808080809090909090A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0E0E0E
0E0E0E0F0F0F0F0F1010101010101111111111111212121212131313131313141414141414151515
151516161616161617171717171818181818181919191919191A1A1A1A1A1B1B1B1B1B1B1C1C1C1C
1C1C1D1D1D1D1D1E1E1E1E1E1E1F1F1F1F1F1F202020202021212121212122222222222223232323
23242424242424252525252525262626262627272727272728282828282829292929292A2A2A2A2A
2A2B2B2B2B2B2B2C2C2C
>
1 %_Br
[
0.023529 0.023529 0.803922 0 1 50 14 %_BS
%_0.023529 0.023529 0.803922 0 1 50 14 Bs
1 1 0.145098 0.172549 1 50 100 %_BS
%_1 1 0.145098 0.172549 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gr\637nblau)
(Gr\637nblau) 0 2 Bd
[
<
A4A4A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAABABABACACACADADAEAEAEAFAFB0B0B0B1B1B1B2B2B3B3
B3B4B4B5B5B5B6B6B7B7B7B8B8B8B9B9BABABABBBBBCBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C2
C3C3C4C4C4C5C5C6C6C6C7C7C7C8C8C9C9C9CACACBCBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2
D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D8D9D9DADADADBDBDCDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1
E2E2E2E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEBEBEBECECECEDEDEEEEEEEFEFF0F0F0F1
F1F2F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F8F9F9FAFAFAFBFBFCFCFCFDFDFDFEFEFFFF
>
<
060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D
2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5
A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCD
CECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A898887868584838281807F7E7D7C7B7A79797877767574737271706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A59585756555453535251504F4E4D4C4B4A494847464544434241403F3E3D
3C3B3A393837363534333231302F2E2D2C2C2B2A292827262524232221201F1E1D1C1B1A19
>
<
00000000000000000000000000000101010101010101010101010101010101010101010101010101
02020202020202020202020202020202020202020202020202020303030303030303030303030303
03030303030303030303030304040404040404040404040404040404040404040404040404040405
05050505050505050505050505050505050505050505050505060606060606060606060606060606
06060606060606060606060707070707070707070707070707070707070707070707070707080808
08080808080808080808080808080808080808080808080909090909090909090909090909
>
1 %_Br
[
1 0.94902 0.098039 0.035294 1 50 100 %_BS
%_1 0.94902 0.098039 0.035294 1 50 100 Bs
0.643137 0.023529 1 0 1 50 0 %_BS
%_0.643137 0.023529 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Orange, Gr\637n, Lila)
(Orange, Gr\637n, Lila) 0 3 Bd
[
<
DFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDCDBDBDBDBDBDBDADADADADADAD9D9D9D9D9D9
D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6D6D5D5D5D5D5D5D4D4D4D4D4D4D3D3D3D3D3D3D2D2D2
D2D2D2D1D1D1D1D1D1D0D0D0D0D0D0CFCFCFCFCFCFCECECECECECECDCDCDCDCDCDCDCCCCCCCCCCCC
CBCBCBCBCBCBCACACACACACAC9C9C9C9C9C9C8C8C8C8C8C8C7C7C7C7C7C7C6C6C6C6C6C6C5C5C5C5
C5C5C4C4C4C4C4C4C4C3C3C3C3C3C3C2C2C2C2C2C2C1C1C1C1C1C1C0C0C0C0C0C0BFBFBFBFBFBFBE
BEBEBEBEBEBDBDBDBDBDBDBCBCBCBCBCBCBBBBBBBB
>
<
5C5D5D5E5F60606162636364656666676869696A6B6C6C6D6E6F6F70717172737474757677777879
7A7A7B7C7D7D7E7F80808182838384858586878888898A8B8B8C8D8E8E8F90919192939494959697
979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A8A9AAABABACADADAEAFB0B0B1B2B3B3B4
B5B6B6B7B8B9B9BABBBCBCBDBEBFBFC0C1C2C2C3C4C4C5C6C7C7C8C9CACACBCCCDCDCECFD0D0D1D2
D3D3D4D5D6D6D7D8D8D9DADBDBDCDDDEDEDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEAEBECECEDEEEFEF
F0F1F2F2F3F4F5F5F6F7F8F8F9FAFBFBFCFDFEFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726252423
>
<
51515050504F4F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4B4A4A4A494949484848474747464646464545
45444444434343424242424141414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A3A393939
38383837373736363635353535343434333333323232313131313030302F2F2F2E2E2E2D2D2D2D2C
2C2C2B2B2B2A2A2A2929292928282827272726262625252524242424232323222222212121202020
201F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1919191818181817171716161615151514141413
1313131212121111111010100F0F0F0F0E0E0E0D0D
>
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF
>
<
C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3
B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9A9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0
A09F9F9F9E9E9D9D9C9C9B9B9A9A9999989897979696969595949493939292919190908F8F8E8E8D
8D8C8C8C8B8B8A8A8989888887878686858584848383838282818180807F7F7E7E7D7D7C7C7B7B7A
7A7979797878777776767575747473737272717170706F6F6F6E6E6D6D6C6C6B6B6A6A6969686867
676666666565646463636262616160605F5F5E5E5D5D5C5C
>
1
<
0000010101020203030304040405050506060707070808080909090A0A0B0B0B0C0C0C0D0D0D0E0E
0F0F0F101010111111121213131314141415151516161717171818181919191A1A1B1B1B1C1C1C1D
1D1D1E1E1F1F1F202020212121222223232324242425252526262727272828282929292A2A2A2B2B
2C2C2C2D2D2D2E2E2E2F2F303030313131323232333334343435353536363637373838383939393A
3A3A3B3B3C3C3C3D3D3D3E3E3E3F3F40404041414142424243434444444545454646464747484848
4949494A4A4A4B4B4C4C4C4D4D4D4E4E4E4F4F5050505151
>
1 %_Br
[
0.733333 1 0.137255 0.05098 1 50 100 %_BS
%_0.733333 1 0.137255 0.05098 1 50 100 Bs
0.87451 0.360784 1 0.317647 1 50 50 %_BS
%_0.87451 0.360784 1 0.317647 1 50 50 Bs
0 0.776471 1 0 1 50 0 %_BS
%_0 0.776471 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Regenbogen)
(Regenbogen) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
>
<
25252525252525252525252525252525252525252525252525252424242424242424242424242424
24242424242424242424242424242424242424242424242424242424242424242424242424232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
23232323232323232222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222212121212121212121212121212121212121212121
21212121212121212121212121212121212121212121212121212121212120202020202020202020
20202020202020202020202020202020
>
<
2C2C2C2B2B2B2B2B2B2A2A2A2A2A2A29292929292928282828282827272727272626262626262525
2525252524242424242423232323232322222222222121212121212020202020201F1F1F1F1F1F1E
1E1E1E1E1E1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A191919191919181818181817
17171717171616161616161515151515151414141414131313131313121212121212111111111111
1010101010100F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A
09090909090908080808080807070707070706060606060605050505050404040404040303030303
03020202020202010101010101000000
>
1 %_Br
<
C7C7C8C8C8C8C9C9C9CACACACACBCBCBCCCCCCCCCDCDCDCDCECECECFCFCFCFD0D0D0D1D1D1D1D2D2
D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6D6D7D7D7D8D8D8D8D9D9D9DADADADADBDBDBDCDCDCDCDDDDDD
DEDEDEDEDFDFDFDFE0E0E0E1E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E5E6E6E6E7E7E7E7E8E8E8E8
E9E9E9EAEAEAEAEBEBEBECECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F0F1F1F1F1F2F2F2F3F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F7F8F8F8F9F9F9F9FAFAFAFAFBFBFBFCFCFCFCFDFDFDFEFEFEFEFFFF
>
<
38393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384858687
88898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
21212121212121212121212121212121212121212121212121222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222323232323
23232323232323232323232323232323232323232323232323232323232323232323232323232323
23232323232424242424242424242424242424242424242424242424242424242424242424242424
24242424242424242424242424242425252525252525252525252525252525252525252525252525
>
<
00000001010101020202020203030303040404040405050505060606060607070707080808080809
0909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0D0E0E0E0E0F0F0F0F0F101010101111111111
1212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A
1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202021212121212222222222232323
232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B2B2C2C2C
>
1 %_Br
<
DEDEDEDEDEDDDDDDDDDDDDDDDDDDDDDCDCDCDCDCDCDCDCDCDCDBDBDBDBDBDBDBDBDBDADADADADADA
DADADADAD9D9D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6
D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2
D2D1D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCFCFCECECECECECECECECECE
CDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCBCACACACACACACACACAC9C9
C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C8C7C7C7C7C7
>
0.219608
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221
>
<
15151515151514141414141414141414131313131313131313131312121212121212121212111111
111111111111111110101010101010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E
0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A
0A0A0909090909090909090909080808080808080808080707070707070707070707060606060606
06060606050505050505050505050504040404040404040404030303030303030303030302020202
0202020202020201010101010101010101000000000000
>
1 %_Br
<
101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334353637
38393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384858687
88898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDE
>
<
00000101010102020202030303040404040505050506060607070707080808080909090A0A0A0A0B
0B0B0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10101011111111121212121313131414141415151515
16161617171717181818181919191A1A1A1A1B1B1B1B1C1C1C1D1D1D1D1E1E1E1E1F1F1F20202020
2121212122222223232323242424242525252626262627272727282828292929292A2A2A2A2B2B2B
2B2C2C2C2D2D2D2D2E2E2E2E2F2F2F30303030313131313232323333333334343434353535363636
36373737373838
>
<
F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFF
FFFFFFFFFFFFFF
>
<
00000000000101010101010101010102020202020202020202030303030303030303030404040404
04040404040505050505050505050606060606060606060607070707070707070707080808080808
08080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F10101010101010
10101111111111111111111112121212121212121212131313131313131313131414141414141414
14141515151515
>
1 %_Br
<
00000000000000000101010101010101010101010101010102020202020202020202020202020202
03030303030303030303030303030303040404040404040404040404040404040505050505050505
05050505050505060606060606060606060606060606060707070707070707070707070707070708
080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D
0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F1010101010101010
>
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
ADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E
5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F6F6F6F6F6F6
>
0
1 %_Br
[
0 0.988235 0.12549 0 1 50 100 %_BS
%_0 0.988235 0.12549 0 1 50 100 Bs
1 1 0.145098 0.172549 1 50 80 %_BS
%_1 1 0.145098 0.172549 1 50 80 Bs
0.780392 0.219608 0.129412 0 1 50 60 %_BS
%_0.780392 0.219608 0.129412 0 1 50 60 Bs
0.870588 0.219608 1 0.082353 1 50 40 %_BS
%_0.870588 0.219608 1 0.082353 1 50 40 Bs
0.062745 0 0.964706 0 1 50 20 %_BS
%_0.062745 0 0.964706 0 1 50 20 Bs
0 0.992157 1 0 1 50 0 %_BS
%_0 0.992157 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rosa, Gelb, Gr\637n )
(Rosa, Gelb, Gr\637n ) 0 3 Bd
[
<
0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233
3435363738393A3B3C3D3E3F4041424344464748494A4B4C4D4E4F505152535455565758595A5B5C
5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D
>
0
<
DDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDFE0E0E0E0E0E0E0E0
E0E0E0E0E1E1E1E1E1E1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3
E3E4E4E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6
>
0
1 %_Br
<
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C
>
<
D4D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCCCBCACAC9C9C8C8C7C7C6C5C5C4C4C3C2C2C1C1
C0BFBFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1B0B0AFAEAEADACACABAAA9A9A8A7A7A6
A5A4A4A3A2A1A1A09F9F9E9D9C9C9B9A999998979696959493929291908F8F8E8D8C8B8B8A898888
878685848483828180807F7E7D7C7B7B7A7978777776757473727271706F6E6D6D6C6B6A69686767
66656463626261605F5E5D5C5C5B5A59585756555554535251504F4E4E4D4C4B4A49484746464544
434241403F3E3E3D3C3B3A39383736353434333231302F2E2D2C2B2A29292827262524232221201F
1E1D1C1C1B1A191817161514131211100F0E0D0C0B0B0A09080706050403020100
>
<
000001010102020203030404050506060707080809090A0B0B0C0C0D0D0E0F0F1010111212131414
15151617171819191A1B1B1C1D1D1E1F1F20212222232424252627272829292A2B2C2C2D2E2F2F30
3132323334353536373839393A3B3C3C3D3E3F404041424344444546474848494A4B4C4C4D4E4F50
51515253545556565758595A5B5B5C5D5E5F6061616263646566676768696A6B6C6D6E6E6F707172
73747576767778797A7B7C7D7E7E7F80818283848586878888898A8B8C8D8E8F9091929394949596
9798999A9B9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDD
>
0
1 %_Br
[
0.490196 0 0.901961 0 1 50 100 %_BS
%_0.490196 0 0.901961 0 1 50 100 Bs
0.047059 0 0.866667 0 1 50 64 %_BS
%_0.047059 0 0.866667 0 1 50 64 Bs
0.043137 0.831372 0 0 1 57 0 %_BS
%_0.043137 0.831372 0 0 1 57 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rot & Gelb)
(Rot & Gelb) 0 2 Bd
[
<
10101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E
0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090909090909
08080808080808080808080808080808070707070707070707070707070707070606060606060606
06060606060606060505050505050505050505050505050504040404040404040404040404040404
03030303030303030303030303030303020202020202020202020202020202020101010101010101
01010101010101010000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F0F0
F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEB
EAEAEAEAEAEAEAE9E9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E7E7E6E6E6E6E6E6E6E5E5E5E5E5E5
E5E4E4E4E4E4E4E4E3E3E3E3E3E3E3E2E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0E0DFDFDFDF
DFDFDEDEDEDEDEDEDEDDDDDDDDDDDDDDDCDCDCDCDCDCDCDBDBDBDBDBDBDBDADADADADADADAD9D9D9
D9D9D9D9D8D8D8D8D8D8D8D7D7D7D7D7D7D7D6D6D6D6D6D6D5D5D5D5D5D5D5D4D4D4D4D4D4D4D3D3
D3D3D3D3D3D2D2D2D2D2D2D2D1D1D1D1
>
0
1 %_Br
[
0 1 0.819608 0 1 50 100 %_BS
%_0 1 0.819608 0 1 50 100 Bs
0.062745 0 0.964706 0 1 50 0 %_BS
%_0.062745 0 0.964706 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Schwarz & Wei\647)
(Schwarz & Wei\647) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Schwarz, Wei\647)
(Schwarz, Wei\647) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Stahlgrau)
(Stahlgrau) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 70 %_BS
%_1 0 50 70 Bs
0 0 50 0 %_BS
%_0 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Violett, Rot, Gelb)
(Violett, Rot, Gelb) 0 3 Bd
[
<
00000000000000000000000001010101010101010101010101010101010101010101010202020202
02020202020202020202020202020202020203030303030303030303030303030303030303030303
03030404040404040404040404040404040404040404040404050505050505050505050505050505
05050505050505050606060606060606060606060606060606060606060606070707070707070707
07070707070707070707070707070808080808080808080808080808080808080808080808080909
0909090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEDEDEDEDEDEDEDEDEDED
>
0
1 %_Br
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
ADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E
5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403020100
>
1
<
1E1F2021212223242526272828292A2B2C2D2E2F2F30313233343536363738393A3B3C3D3D3E3F40
414243444445464748494A4B4B4C4D4E4F5051525253545556575859595A5B5C5D5E5F6060616263
646566676768696A6B6C6D6D6E6F70717273747475767778797A7B7B7C7D7E7F8081828283848586
878889898A8B8C8D8E8F9090919293949596979798999A9B9C9D9E9E9FA0A1A2A3A4A5A5A6A7A8A9
AAABACACADAEAFB0B1B2B2B3B4B5B6B7B8B9B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C7C8C9CACBCC
CDCECECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDCDDDEDFE0E1E2E3E3E4E5E6E7E8E9EAEAEBECEDEEEF
F0F1F1F2F3F4F5F6F7F8F8F9FAFB
>
<
14141414141414131313131313131313131313121212121212121212121212121111111111111111
11111111111010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E
0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B
0B0A0A0A0A0A0A0A0A0A0A0A0A090909090909090909090909090808080808080808080808080807
07070707070707070707070606060606060606060606060605050505050505050505050505040404
04040404040404040403030303030303030303030303020202020202020202020202020101010101
0101010101010100000000000000
>
1 %_Br
[
0.043137 0 0.929412 0 1 50 100 %_BS
%_0.043137 0 0.929412 0 1 50 100 Bs
0 1 0.984314 0 1 50 50 %_BS
%_0 1 0.984314 0 1 50 50 Bs
0.992157 1 0.117647 0.078431 1 50 0 %_BS
%_0.992157 1 0.117647 0.078431 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Wei\647-Rot-Radial)
(Wei\647-Rot-Radial) 1 18 Bd
[
0
0.992157
1
0
1 %_Br
0
0.992157
1
0
1 %_Br
0
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
1
0 %_Br
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F3F404142434445464748494A4B4C4D4E
4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBEBFC0C1C2C3C4C5
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
EEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1 %_Br
0
0.992157
1
0
1 %_Br
0
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
1
0 %_Br
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F3F404142434445464748494A4B4C4D4E
4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBEBFC0C1C2C3C4C5
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
EEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1 %_Br
0
0.992157
1
0
1 %_Br
0
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
1
0 %_Br
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F3F404142434445464748494A4B4C4D4E
4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBEBFC0C1C2C3C4C5
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
EEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1 %_Br
0
0.992157
1
0
1 %_Br
0
<
FDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
1
0 %_Br
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F3F404142434445464748494A4B4C4D4E
4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBEBFC0C1C2C3C4C5
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
EEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFD
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1 %_Br
[
0 0.992157 1 0 1 50 0 %_BS
%_0 0.992157 1 0 1 50 0 Bs
0 0.992157 1 0 1 50 0.005 %_BS
%_0 0.992157 1 0 1 50 0 Bs
0 0.992157 1 0 1 50 12.4975 %_BS
%_0 0.992157 1 0 1 50 12.5 Bs
0 0 0 0 1 50 12.5025 %_BS
%_0 0 0 0 1 50 12.5 Bs
0 0 0 0 1 50 24.9975 %_BS
%_0 0 0 0 1 50 25 Bs
0 0.992157 1 0 1 50 25.0025 %_BS
%_0 0.992157 1 0 1 50 25 Bs
0 0.992157 1 0 1 50 37.4975 %_BS
%_0 0.992157 1 0 1 50 37.5 Bs
0 0 0 0 1 50 37.5025 %_BS
%_0 0 0 0 1 50 37.5 Bs
0 0 0 0 1 50 49.9975 %_BS
%_0 0 0 0 1 50 50 Bs
0 0.992157 1 0 1 50 50.0025 %_BS
%_0 0.992157 1 0 1 50 50 Bs
0 0.992157 1 0 1 50 62.4975 %_BS
%_0 0.992157 1 0 1 50 62.5 Bs
0 0 0 0 1 50 62.5025 %_BS
%_0 0 0 0 1 50 62.5 Bs
0 0 0 0 1 50 74.9975 %_BS
%_0 0 0 0 1 50 75 Bs
0 0.992157 1 0 1 50 75.0025 %_BS
%_0 0.992157 1 0 1 50 75 Bs
0 0.992157 1 0 1 50 87.4975 %_BS
%_0 0.992157 1 0 1 50 87.5 Bs
0 0 0 0 1 50 87.5025 %_BS
%_0 0 0 0 1 50 87.5 Bs
0 0 0 0 1 50 99.995 %_BS
%_0 0 0 0 1 50 100 Bs
0 0.992157 1 0 1 50 100 %_BS
%_0 0.992157 1 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Backsteine)
(Backsteine) 1.6 1.6 73.6 73.6 [
%AI3_Tile
(0 O 0 R 0.207843 0.980392 1 0.121569 k
 0.207843 0.980392 1 0.121569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1.6 1.6 m
1.6 73.6 L
73.6 73.6 L
73.6 1.6 L
1.6 1.6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1.6 70.01 m
73.6 70.01 l
S
1.6 62.809 m
73.6 62.809 L
S
1.6 55.609 m
73.6 55.609 L
S
1.6 48.408 m
73.6 48.408 L
S
1.6 41.208 m
73.6 41.208 L
S
1.6 34.007 m
73.6 34.007 L
S
1.6 26.807 m
73.6 26.807 L
S
1.6 19.606 m
73.6 19.606 L
S
1.6 12.406 m
73.6 12.406 L
S
1.6 5.206 m
73.6 5.206 L
S
70.01 70.01 m
70.01 62.822 l
S
55.61 70.01 m
55.61 62.822 L
S
41.21 70.01 m
41.21 62.822 L
S
26.81 70.01 m
26.81 62.822 L
S
12.41 70.01 m
12.41 62.822 L
S
70.01 55.572 m
70.01 48.385 l
S
55.61 55.572 m
55.61 48.385 L
S
41.21 55.572 m
41.21 48.385 L
S
26.81 55.572 m
26.81 48.385 L
S
12.41 55.572 m
12.41 48.385 L
S
70.01 41.197 m
70.01 34.01 l
S
55.61 41.197 m
55.61 34.01 L
S
41.21 41.197 m
41.21 34.01 L
S
26.81 41.197 m
26.81 34.01 L
S
12.41 41.197 m
12.41 34.01 L
S
70.01 26.822 m
70.01 19.635 l
S
55.61 26.822 m
55.61 19.635 L
S
41.21 26.822 m
41.21 19.635 L
S
26.81 26.822 m
26.81 19.635 L
S
12.41 26.822 m
12.41 19.635 L
S
70.01 12.385 m
70.01 5.197 l
S
55.61 12.385 m
55.61 5.197 L
S
41.21 12.385 m
41.21 5.197 L
S
26.81 12.385 m
26.81 5.197 L
S
12.41 12.385 m
12.41 5.197 L
S
62.797 5.197 m
62.797 1.6 L
S
48.397 5.197 m
48.397 1.6 L
S
33.997 5.197 m
33.997 1.6 L
S
19.597 5.197 m
19.597 1.6 L
S
5.197 5.197 m
5.197 1.6 l
S
62.797 19.635 m
62.797 12.447 L
S
48.397 19.635 m
48.397 12.447 L
S
33.997 19.635 m
33.997 12.447 L
S
19.597 19.635 m
19.597 12.447 L
S
5.197 19.635 m
5.197 12.447 l
S
62.797 34.01 m
62.797 26.822 L
S
48.397 34.01 m
48.397 26.822 L
S
19.597 34.01 m
19.597 26.822 L
S
5.197 34.01 m
5.197 26.822 l
S
62.797 48.385 m
62.797 41.197 L
S
48.397 48.385 m
48.397 41.197 L
S
33.997 48.385 m
33.997 41.197 L
S
19.597 48.385 m
19.597 41.197 L
S
5.197 48.385 m
5.197 41.197 l
S
62.797 62.822 m
62.797 55.635 L
S
48.397 62.822 m
48.397 55.635 L
S
33.997 62.822 m
33.997 55.635 L
S
19.597 62.822 m
19.597 55.635 L
S
5.197 62.822 m
5.197 55.635 l
S
62.797 73.5589 m
62.797 70.072 L
S
48.397 73.5589 m
48.397 70.072 L
S
33.997 73.5589 m
33.997 70.072 L
S
19.597 73.5589 m
19.597 70.072 L
S
5.197 73.5589 m
5.197 70.072 l
S
33.997 34.01 m
33.997 26.822 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Bl\612tter)
(Bl\612tter) 1 1 52.733 89.816 [
%AI3_Tile
(0 O 0 R 0.062745 0.196078 1 0 k
 0.062745 0.196078 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
52.733 89.816 m
52.733 1 L
1 1 L
1 89.816 L
52.733 89.816 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.807843 0.133333 1 0.019608 k
 0.807843 0.133333 1 0.019608 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
25.317 2.083 m
25.994 2.283 26.284 2.435 V
24.815 5.147 29.266 9.428 30.186 10.168 C
30.787 9.943 30.907 7.41 30.23 6.073 C
31.073 6.196 33.262 4.818 34.02 3.529 C
34.085 4.217 35.655 7.158 36.481 7.535 C
35.561 7.933 34.896 9.406 34.134 10.854 C
35.156 11.021 36.555 10.1 38.026 9.195 C
38.541 9.996 39.915 10.968 41.174 11.484 C
40.086 12.171 39.591 12.912 39.094 14.372 C
38.052 13.806 35.865 13.657 35.336 13.944 C
35.85 15.057 38.096 15.6 38.827 15.547 C
38.573 16.409 38.425 18.562 38.598 21.155 C
36.939 19.839 35.393 18.522 33.734 18.58 C
34.003 17.158 33.367 15.353 32.99 14.86 C
32.417 15.604 32.006 16.431 32.361 18.408 C
30.908 18.893 29.671 19.439 28.297 20.697 C
28.297 18.866 27.725 17.664 26.857 16.388 C
28.117 15.9 29.389 14.697 29.385 13.658 C
28.537 13.81 26.845 14.554 26.352 15.547 C
25.634 14.8 23.95 13.491 22.346 13.487 C
23.534 12.632 24.454 11.598 24.549 9.686 C
25.802 10.657 28.255 11.272 29.635 10.674 C
24.794 6.438 25.262 3.405 25.317 2.083 C
f
12.412 33.743 m
11.887 33.272 11.691 33.01 V
14.182 31.192 11.928 25.366 11.415 24.303 C
10.776 24.247 9.369 26.988 9.405 28.486 C
8.273 27.73 6.608 27.851 5.006 28.137 C
5.578 27.049 5.177 25.104 4.376 24.303 C
5.378 24.339 6.729 23.624 8.038 22.643 C
7.203 21.823 5.376 21.984 3.46 22.643 C
3.46 21.27 2.638 19.533 1.801 18.351 C
3.117 18.408 4.262 17.722 5.12 16.691 C
5.785 18.26 7.819 19.373 8.725 19.324 C
8.742 17.959 7.169 15.869 6.147 15.47 C
6.747 14.801 7.766 13.27 8.725 10.854 C
9.524 12.78 10.694 14.022 11.927 14.955 C
10.785 16.517 10.959 17.388 11.358 18.866 C
12.101 18.325 13.132 17.893 13.303 15.89 C
15.02 16.176 16.156 16.104 17.653 15.203 C
17.198 16.865 17.195 18.466 17.515 20.166 C
15.665 20.026 14.105 20.239 13.075 21.728 C
13.905 21.955 16.165 22.014 17.039 21.082 C
17.366 22.064 18.261 23.47 19.707 24.164 C
18.267 24.424 17.282 25.523 16.373 27.209 C
15.66 25.793 13.433 24.128 11.93 24.073 C
13.933 28.137 13.933 31.055 12.412 33.743 C
f
31.125 30.5 m
31.445 31.128 31.648 31.385 V
34.045 29.444 38.851 32.752 39.746 33.521 C
39.636 34.153 37.511 35.29 35.794 34.26 C
36.234 35.549 35.332 37.51 34.134 38.552 C
35.873 38.451 38.019 39.813 38.541 40.555 C
38.763 39.577 39.946 38.307 41.231 37.293 C
41.582 38.266 40.887 40.384 39.971 41.986 C
41.206 42.487 42.318 43.417 42.776 44.676 C
43.233 43.359 44.236 42.685 45.58 41.929 C
44.421 40.502 43.64 38.328 43.92 37.465 C
45.243 37.8 46.814 40.518 46.937 41.607 C
47.812 40.841 49.366 40.154 51.947 39.848 C
50.246 38.77 49.884 36.778 49.3 35.347 C
48.152 35.794 45.983 35.853 45.008 35.29 C
45.721 34.711 47.061 34.16 49.071 34.146 C
49.071 32.601 49.534 31.469 50.788 30.254 C
49.065 30.267 46.965 29.781 45.469 29.389 C
45.221 30.718 44.378 32.314 43.233 32.715 C
43.227 31.854 43.493 29.605 44.378 28.938 C
43.513 28.37 42.26 26.993 41.803 25.276 C
41.181 26.601 40.32 27.906 38.457 28.35 C
39.642 29.403 40.477 31.42 40.143 32.887 C
35.091 28.905 32.414 30.203 31.125 30.5 C
f
25.317 46.491 m
25.994 46.691 26.284 46.843 V
24.815 49.556 29.266 53.837 30.186 54.576 C
30.787 54.351 30.907 51.818 30.23 50.482 C
31.073 50.605 33.262 49.227 34.02 47.938 C
34.085 48.625 35.655 51.566 36.481 51.944 C
35.561 52.341 34.896 53.814 34.134 55.263 C
35.156 55.43 36.555 54.508 38.026 53.603 C
38.541 54.404 39.915 55.377 41.174 55.892 C
40.086 56.579 39.591 57.321 39.094 58.78 C
38.052 58.215 35.865 58.065 35.336 58.353 C
35.85 59.465 38.096 60.008 38.827 59.955 C
38.573 60.817 38.425 62.97 38.598 65.563 C
36.939 64.247 35.393 62.931 33.734 62.988 C
34.003 61.567 33.367 59.761 32.99 59.268 C
32.417 60.012 32.006 60.839 32.361 62.817 C
30.908 63.302 29.671 63.847 28.297 65.106 C
28.297 63.274 27.725 62.073 26.857 60.796 C
28.117 60.308 29.389 59.106 29.385 58.067 C
28.537 58.219 26.845 58.963 26.352 59.955 C
25.634 59.209 23.95 57.899 22.346 57.895 C
23.534 57.041 24.454 56.006 24.549 54.094 C
25.802 55.065 28.255 55.68 29.635 55.083 C
24.794 50.846 25.262 47.814 25.317 46.491 C
f
12.412 78.151 m
11.887 77.68 11.691 77.418 V
14.182 75.601 11.928 69.774 11.415 68.711 C
10.776 68.655 9.369 71.396 9.405 72.894 C
8.273 72.138 6.608 72.259 5.006 72.545 C
5.578 71.458 5.177 69.512 4.376 68.711 C
5.378 68.747 6.729 68.032 8.038 67.052 C
7.203 66.231 5.376 66.393 3.46 67.052 C
3.46 65.678 2.638 63.941 1.801 62.759 C
3.117 62.817 4.262 62.13 5.12 61.1 C
5.785 62.669 7.819 63.781 8.725 63.732 C
8.742 62.367 7.169 60.277 6.147 59.878 C
6.747 59.209 7.766 57.678 8.725 55.263 C
9.524 57.189 10.694 58.431 11.927 59.364 C
10.785 60.925 10.959 61.796 11.358 63.274 C
12.101 62.734 13.132 62.301 13.303 60.298 C
15.02 60.584 16.156 60.512 17.653 59.612 C
17.198 61.273 17.195 62.874 17.515 64.574 C
15.665 64.434 14.105 64.648 13.075 66.136 C
13.905 66.363 16.165 66.422 17.039 65.49 C
17.366 66.472 18.261 67.878 19.707 68.572 C
18.267 68.832 17.282 69.931 16.373 71.617 C
15.66 70.202 13.433 68.536 11.93 68.482 C
13.933 72.545 13.933 75.464 12.412 78.151 C
f
31.125 74.908 m
31.445 75.537 31.648 75.794 V
34.045 73.853 38.851 77.161 39.746 77.929 C
39.636 78.562 37.511 79.698 35.794 78.668 C
36.234 79.957 35.332 81.918 34.134 82.96 C
35.873 82.86 38.019 84.221 38.541 84.963 C
38.763 83.986 39.946 82.716 41.231 81.701 C
41.582 82.675 40.887 84.792 39.971 86.394 C
41.206 86.895 42.318 87.825 42.776 89.084 C
43.233 87.768 44.236 87.093 45.58 86.337 C
44.421 84.91 43.64 82.736 43.92 81.873 C
45.243 82.208 46.814 84.926 46.937 86.016 C
47.812 85.249 49.366 84.563 51.947 84.257 C
50.246 83.179 49.884 81.187 49.3 79.756 C
48.152 80.203 45.983 80.262 45.008 79.698 C
45.721 79.119 47.061 78.569 49.071 78.554 C
49.071 77.009 49.534 75.877 50.788 74.663 C
49.065 74.675 46.965 74.189 45.469 73.798 C
45.221 75.126 44.378 76.723 43.233 77.123 C
43.227 76.262 43.493 74.013 44.378 73.347 C
43.513 72.779 42.26 71.401 41.803 69.684 C
41.181 71.009 40.32 72.314 38.457 72.759 C
39.642 73.812 40.477 75.829 40.143 77.295 C
35.091 73.313 32.414 74.611 31.125 74.908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Dpllinie1.2.Au\647en)
(Dpllinie1.2.Au\647en) 1 1.0003 39.2706 39.271 [
%AI3_Tile
(0 O 0 R 0.835294 0.345098 0.192157 0.003922 k
 0.835294 0.345098 0.192157 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
39.2708 26.6602 m
13.6111 26.6602 L
13.6111 1.0005 L
22.1751 1 L
22.1751 18.096 L
39.2708 18.096 L
39.2708 26.6602 L
f
39.2708 15.578 m
24.6928 15.578 L
24.6928 1 L
25.367 1 L
25.367 14.9038 L
39.2708 14.9038 L
39.2708 15.578 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Dpllinie1.2.Innen)
(Dpllinie1.2.Innen) 1 1 39.2705 39.2706 [
%AI3_Tile
(0 O 0 R 0.835294 0.345098 0.192157 0.003922 k
 0.835294 0.345098 0.192157 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
39.2702 22.175 m
39.2702 13.6108 L
26.66 13.6108 L
26.66 1.0003 L
18.0958 1.0003 L
18.0948 22.175 L
18.0958 22.175 L
18.0958 22.1752 L
39.2702 22.175 L
f
39.2708 24.6929 m
15.5779 24.6929 L
15.5779 1.0003 L
14.9037 1.0003 L
14.9032 25.3675 L
39.2708 25.3675 L
39.2708 24.6929 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Dpllinie1.2.Kante)
(Dpllinie1.2.Kante) 1 1 39.2706 39.2706 [
%AI3_Tile
(0 O 0 R 0.835294 0.345098 0.192157 0.003922 k
 0.835294 0.345098 0.192157 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
39.2704 18.0958 m
39.2704 26.6598 L
1.0001 26.6598 L
1.0001 18.0958 L
39.2704 18.0958 L
f
39.2704 14.9037 m
39.2704 15.5776 L
1.0001 15.5776 L
1.0001 14.9037 L
39.2704 14.9037 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Ecke.Au\647en)
(Ecke.Au\647en) 1 1.0004 31.6124 31.6127 [
%AI3_Tile
(0 O 0 R 0.305882 0.243137 0.247059 0 k
 0.305882 0.243137 0.247059 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6118 5.4917 m
27.1221 5.4917 L
27.1205 1.0011 L
27.8031 1.0011 L
27.8031 4.8091 L
31.6118 4.8091 L
31.6118 5.4917 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.192157 0.14902 0.156863 0 k
 0.192157 0.14902 0.156863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6149 9.5062 m
23.1111 9.5062 L
23.1111 1.0015 L
27.1205 1.0015 L
27.1205 5.493 L
31.6144 5.493 L
31.6149 9.5062 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.427451 0.34902 0.352941 0.011765 k
 0.427451 0.34902 0.352941 0.011765 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6124 10.485 m
22.1297 10.485 L
22.1292 1.0015 L
23.1084 1.0015 L
23.1084 9.5049 L
31.6124 9.5049 L
31.6124 10.485 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.305882 0.243137 0.247059 0 k
 0.305882 0.243137 0.247059 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6129 17.2066 m
15.4064 17.2085 L
15.4064 1 L
22.1301 1 L
22.1301 10.4868 L
31.6129 10.4868 L
31.6129 17.2066 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.517647 0.435294 0.435294 0.078431 k
 0.517647 0.435294 0.435294 0.078431 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6149 18.3658 m
14.2517 18.3658 L
14.2515 1.0009 L
15.4043 1.0009 L
15.4043 17.2093 L
31.6149 17.2093 L
31.6149 18.3658 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.427451 0.34902 0.352941 0.011765 k
 0.427451 0.34902 0.352941 0.011765 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
31.6124 30.4755 m
2.1395 30.4755 L
2.1395 1.0015 L
14.249 1 L
14.249 18.366 L
31.6149 18.366 L
31.6124 30.4755 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.596078 0.513725 0.505882 0.2 k
 0.596078 0.513725 0.505882 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
15.4066 16.847 m
14.2778 18.3257 l
15.4066 17.2057 l
15.4066 16.847 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.517647 0.435294 0.435294 0.078431 k
 0.517647 0.435294 0.435294 0.078431 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
23.1095 9.1906 m
22.1759 10.4392 l
23.1082 9.505 l
23.1095 9.1906 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.427451 0.34902 0.352941 0.011765 k
 0.427451 0.34902 0.352941 0.011765 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.8039 4.6026 m
27.1619 5.4533 l
27.8029 4.8093 l
27.8039 4.6026 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Gelbe Streifen)
(Gelbe Streifen) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.47451 1 0 k
 0 0.47451 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Konfetti)
(Konfetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Kreise)
(Kreise) 4.365 3.849 51.13 57.85 [
%AI3_Tile
(0 O 0 R 0.011765 0.086275 0.584314 0 k
 0.011765 0.086275 0.584314 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
4.365 3.849 m
4.365 57.85 L
51.13 57.85 L
51.13 3.849 L
4.365 3.849 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.266667 0.819608 1 0.235294 k
 0.266667 0.819608 1 0.235294 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
45.429 36.274 m
45.843 36.991 45.598 37.908 44.88 38.323 c
44.163 38.737 43.245 38.491 42.831 37.774 c
42.417 37.056 42.663 36.139 43.38 35.725 c
44.098 35.31 45.015 35.556 45.429 36.274 c
s
44.179 27.926 m
43.765 28.643 42.848 28.889 42.13 28.475 c
41.413 28.06 41.167 27.143 41.581 26.425 c
41.995 25.708 42.913 25.462 43.63 25.876 c
44.348 26.291 44.593 27.208 44.179 27.926 c
s
35.929 41.024 m
35.515 41.741 34.598 41.987 33.88 41.573 c
33.163 41.158 32.917 40.241 33.331 39.524 c
33.745 38.806 34.663 38.56 35.38 38.975 c
36.098 39.389 36.343 40.306 35.929 41.024 c
s
28.38 34.225 m
28.794 34.942 28.549 35.859 27.831 36.274 c
27.114 36.688 26.196 36.442 25.782 35.725 c
25.368 35.007 25.614 34.09 26.331 33.675 c
27.049 33.261 27.966 33.507 28.38 34.225 c
s
31.179 28.024 m
30.765 28.741 29.848 28.987 29.13 28.573 c
28.413 28.158 28.167 27.241 28.581 26.524 c
28.995 25.806 29.913 25.56 30.63 25.975 c
31.348 26.389 31.593 27.306 31.179 28.024 c
s
36.792 23.349 m
35.963 23.349 35.292 22.678 35.292 21.849 c
35.292 21.021 35.963 20.349 36.792 20.349 c
37.62 20.349 38.292 21.021 38.292 21.849 c
38.292 22.678 37.62 23.349 36.792 23.349 c
s
10.888 34.175 m
10.474 34.893 10.72 35.81 11.437 36.225 c
12.155 36.639 13.072 36.393 13.486 35.675 c
13.901 34.958 13.655 34.041 12.937 33.626 c
12.22 33.212 11.303 33.458 10.888 34.175 c
s
11.517 26.601 m
11.931 27.318 12.848 27.564 13.566 27.15 c
14.283 26.735 14.529 25.818 14.115 25.1 c
13.701 24.383 12.783 24.137 12.066 24.551 c
11.348 24.966 11.103 25.883 11.517 26.601 c
s
16.782 41.426 m
17.196 42.143 18.114 42.389 18.831 41.975 c
19.549 41.56 19.794 40.643 19.38 39.926 c
18.966 39.208 18.049 38.962 17.331 39.377 c
16.614 39.791 16.368 40.708 16.782 41.426 c
s
22.365 24.35 m
23.194 24.35 23.865 23.678 23.865 22.85 c
23.865 22.021 23.194 21.35 22.365 21.35 c
21.537 21.35 20.865 22.021 20.865 22.85 c
20.865 23.678 21.537 24.35 22.365 24.35 c
s
45.385 7.849 m
44.971 7.132 44.053 6.886 43.336 7.3 c
42.619 7.714 42.373 8.632 42.787 9.349 c
43.201 10.067 44.119 10.312 44.836 9.898 c
45.553 9.484 45.799 8.567 45.385 7.849 c
s
29.679 7.774 m
29.265 7.056 28.348 6.81 27.63 7.225 c
26.913 7.639 26.667 8.556 27.081 9.274 c
27.495 9.991 28.413 10.237 29.13 9.823 c
29.848 9.408 30.093 8.491 29.679 7.774 c
s
35.542 11.349 m
34.713 11.349 34.042 12.021 34.042 12.849 c
34.042 13.678 34.713 14.349 35.542 14.349 c
36.37 14.349 37.042 13.678 37.042 12.849 c
37.042 12.021 36.37 11.349 35.542 11.349 c
s
10.13 7.475 m
10.544 6.757 11.462 6.511 12.179 6.926 c
12.897 7.34 13.142 8.257 12.728 8.975 c
12.314 9.692 11.397 9.938 10.679 9.524 c
9.962 9.109 9.716 8.192 10.13 7.475 c
s
20.203 13.349 m
21.031 13.349 21.703 14.021 21.703 14.849 c
21.703 15.678 21.031 16.349 20.203 16.349 c
19.375 16.349 18.703 15.678 18.703 14.849 c
18.703 14.021 19.375 13.349 20.203 13.349 c
s
44.635 54.1 m
45.049 53.382 44.803 52.465 44.086 52.051 c
43.369 51.636 42.451 51.882 42.037 52.6 c
41.623 53.317 41.869 54.234 42.586 54.649 c
43.303 55.063 44.221 54.817 44.635 54.1 c
s
36.841 48.1 m
36.427 47.382 35.509 47.136 34.792 47.551 c
34.074 47.965 33.828 48.882 34.243 49.6 c
34.657 50.317 35.574 50.563 36.292 50.149 c
37.009 49.734 37.255 48.817 36.841 48.1 c
s
29.728 54.725 m
30.143 54.007 29.897 53.09 29.179 52.675 c
28.462 52.261 27.544 52.507 27.13 53.225 c
26.716 53.942 26.962 54.859 27.679 55.274 c
28.397 55.688 29.314 55.442 29.728 54.725 c
s
10.86 54.1 m
10.446 53.382 10.691 52.465 11.409 52.051 c
12.126 51.636 13.044 51.882 13.458 52.6 c
13.872 53.317 13.626 54.234 12.909 54.649 c
12.191 55.063 11.274 54.817 10.86 54.1 c
s
19.154 49.1 m
19.568 48.382 20.486 48.136 21.203 48.551 c
21.92 48.965 22.166 49.882 21.752 50.6 c
21.338 51.317 20.42 51.563 19.703 51.149 c
18.986 50.734 18.74 49.817 19.154 49.1 c
s
51.88 38.85 m
51.052 38.85 50.38 39.521 50.38 40.35 c
50.38 41.178 51.052 41.85 51.88 41.85 c
52.709 41.85 53.38 41.178 53.38 40.35 c
53.38 39.521 52.709 38.85 51.88 38.85 c
s
51.865 11.349 m
52.693 11.349 53.365 12.021 53.365 12.849 c
53.365 13.678 52.693 14.349 51.865 14.349 c
51.036 14.349 50.365 13.678 50.365 12.849 c
50.365 12.021 51.036 11.349 51.865 11.349 c
s
30.179 18.524 m
29.765 19.241 28.848 19.487 28.13 19.073 c
27.413 18.658 27.167 17.741 27.581 17.024 c
27.995 16.306 28.913 16.06 29.63 16.475 c
30.348 16.889 30.593 17.806 30.179 18.524 c
s
21.679 31.524 m
21.265 32.241 20.348 32.487 19.63 32.073 c
18.913 31.658 18.667 30.741 19.081 30.024 c
19.495 29.306 20.413 29.06 21.13 29.475 c
21.848 29.889 22.093 30.806 21.679 31.524 c
s
37.914 33.399 m
37.5 34.116 36.583 34.362 35.865 33.948 c
35.148 33.533 34.902 32.616 35.316 31.899 c
35.73 31.181 36.648 30.935 37.365 31.35 c
38.083 31.764 38.328 32.681 37.914 33.399 c
s
28.929 45.024 m
28.515 45.741 27.598 45.987 26.88 45.573 c
26.163 45.158 25.917 44.241 26.331 43.524 c
26.745 42.806 27.663 42.56 28.38 42.975 c
29.098 43.389 29.343 44.306 28.929 45.024 c
s
12.429 45.524 m
12.015 46.241 11.098 46.487 10.38 46.073 c
9.663 45.658 9.417 44.741 9.831 44.024 c
10.245 43.306 11.163 43.06 11.88 43.475 c
12.598 43.889 12.843 44.806 12.429 45.524 c
s
44.49 45.6 m
44.075 46.317 43.158 46.563 42.441 46.149 c
41.723 45.734 41.477 44.817 41.891 44.1 c
42.306 43.382 43.223 43.136 43.941 43.55 c
44.658 43.965 44.904 44.882 44.49 45.6 c
s
12.679 18.524 m
12.265 19.241 11.348 19.487 10.63 19.073 c
9.913 18.658 9.667 17.741 10.081 17.024 c
10.495 16.306 11.413 16.06 12.13 16.475 c
12.848 16.889 13.093 17.806 12.679 18.524 c
s
21.179 5.774 m
20.765 6.491 19.848 6.737 19.13 6.323 c
18.413 5.908 18.167 4.991 18.581 4.274 c
18.995 3.557 19.913 3.311 20.63 3.725 c
21.348 4.139 21.593 5.056 21.179 5.774 c
s
38.929 5.274 m
38.515 5.991 37.598 6.237 36.88 5.823 c
36.163 5.408 35.917 4.491 36.331 3.774 c
36.745 3.057 37.663 2.811 38.38 3.225 c
39.098 3.639 39.343 4.556 38.929 5.274 c
s
43.865 18.1 m
44.694 18.1 45.365 17.429 45.365 16.6 c
45.365 15.772 44.694 15.1 43.865 15.1 c
43.037 15.1 42.365 15.772 42.365 16.6 c
42.365 17.429 43.037 18.1 43.865 18.1 c
s
51.13 4.6 m
50.302 4.6 49.63 3.928 49.63 3.1 c
49.63 2.272 50.302 1.6 51.13 1.6 c
51.959 1.6 52.63 2.272 52.63 3.1 c
52.63 3.928 51.959 4.6 51.13 4.6 c
s
52.163 31.649 m
51.748 32.366 50.831 32.612 50.114 32.198 c
49.396 31.783 49.15 30.866 49.565 30.149 c
49.979 29.431 50.896 29.185 51.614 29.6 c
52.331 30.014 52.577 30.931 52.163 31.649 c
s
51.85 51.35 m
51.021 51.35 50.35 50.678 50.35 49.85 c
50.35 49.021 51.021 48.35 51.85 48.35 c
52.678 48.35 53.35 49.021 53.35 49.85 c
53.35 50.678 52.678 51.35 51.85 51.35 c
s
49.85 23.1 m
50.679 23.1 51.35 22.428 51.35 21.6 c
51.35 20.771 50.679 20.1 49.85 20.1 c
49.022 20.1 48.35 20.771 48.35 21.6 c
48.35 22.428 49.022 23.1 49.85 23.1 c
s
5.13 38.85 m
4.302 38.85 3.63 39.521 3.63 40.35 c
3.63 41.178 4.302 41.85 5.13 41.85 c
5.959 41.85 6.63 41.178 6.63 40.35 c
6.63 39.521 5.959 38.85 5.13 38.85 c
s
5.115 11.349 m
5.943 11.349 6.615 12.021 6.615 12.849 c
6.615 13.678 5.943 14.349 5.115 14.349 c
4.286 14.349 3.615 13.678 3.615 12.849 c
3.615 12.021 4.286 11.349 5.115 11.349 c
s
4.38 4.6 m
3.552 4.6 2.88 3.928 2.88 3.1 c
2.88 2.272 3.552 1.6 4.38 1.6 c
5.209 1.6 5.88 2.272 5.88 3.1 c
5.88 3.928 5.209 4.6 4.38 4.6 c
s
5.413 31.649 m
4.998 32.366 4.081 32.612 3.364 32.198 c
2.646 31.783 2.4 30.866 2.815 30.149 c
3.229 29.431 4.146 29.185 4.864 29.6 c
5.581 30.014 5.827 30.931 5.413 31.649 c
s
5.1 51.35 m
4.271 51.35 3.6 50.678 3.6 49.85 c
3.6 49.021 4.271 48.35 5.1 48.35 c
5.928 48.35 6.6 49.021 6.6 49.85 c
6.6 50.678 5.928 51.35 5.1 51.35 c
s
3.1 23.1 m
3.929 23.1 4.6 22.428 4.6 21.6 c
4.6 20.771 3.929 20.1 3.1 20.1 c
2.272 20.1 1.6 20.771 1.6 21.6 c
1.6 22.428 2.272 23.1 3.1 23.1 c
s
21.194 59.775 m
20.78 60.492 19.863 60.738 19.145 60.324 c
18.428 59.909 18.182 58.992 18.596 58.275 c
19.01 57.558 19.928 57.312 20.645 57.726 c
21.363 58.14 21.608 59.057 21.194 59.775 c
s
38.944 59.275 m
38.53 59.992 37.613 60.238 36.895 59.824 c
36.178 59.409 35.932 58.492 36.346 57.775 c
36.76 57.058 37.678 56.812 38.395 57.226 c
39.113 57.64 39.358 58.557 38.944 59.275 c
s
51.145 58.601 m
50.317 58.601 49.645 57.929 49.645 57.101 c
49.645 56.273 50.317 55.601 51.145 55.601 c
51.974 55.601 52.645 56.273 52.645 57.101 c
52.645 57.929 51.974 58.601 51.145 58.601 c
s
4.395 58.601 m
3.567 58.601 2.895 57.929 2.895 57.101 c
2.895 56.273 3.567 55.601 4.395 55.601 c
5.224 55.601 5.895 56.273 5.895 57.101 c
5.895 57.929 5.224 58.601 4.395 58.601 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Lorbeer.Au\647en)
(Lorbeer.Au\647en) 1 1.3751 28.5393 28.9143 [
%AI3_Tile
(0 O 0 R 0.082353 0.729412 1 0.007843 k
 0.082353 0.729412 1 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
14.2395 10.6375 m
14.2395 1 L
15.3645 1 L
15.3645 10.6375 L
14.2395 10.6375 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.219608 0.768627 1 0.121569 k
 0.219608 0.768627 1 0.121569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.5769 15.124 m
11.6906 16.8438 15.1198 18.5429 19.503 18.5429 c
23.8844 18.5429 27.3874 16.8935 28.428 15.1262 C
28.428 15.1259 L
27.3874 13.3995 23.8844 11.7023 19.503 11.7023 c
15.1249 11.7023 11.676 13.4382 10.5769 15.124 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Lorbeer.Innen)
(Lorbeer.Innen) 1 1 28.5392 28.5392 [
%AI3_Tile
(0 O 0 R 0.082353 0.729412 1 0.007843 k
 0.082353 0.729412 1 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
19.2768 15.3585 m
28.9144 15.3585 L
28.9144 14.2335 L
19.2768 14.2335 L
19.2768 15.3585 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.219608 0.768627 1 0.121569 k
 0.219608 0.768627 1 0.121569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
14.7461 18.9624 m
13.0264 17.8486 11.3273 14.4193 11.3273 10.0362 c
11.3273 5.6547 12.9768 2.1518 14.744 1.1112 C
14.7443 1.1112 L
16.4707 2.1518 18.1679 5.6547 18.1679 10.0362 c
18.1679 14.4143 16.432 17.8633 14.7461 18.9624 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Lorbeer.Kante)
(Lorbeer.Kante) 1.3972 1 28.9364 28.5392 [
%AI3_Tile
(0 O 0 R 0.082353 0.729412 1 0.007843 k
 0.082353 0.729412 1 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
29.1571 15.2998 m
1 15.2998 L
1 14.1748 L
29.1571 14.1748 L
29.1571 15.2998 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.219608 0.768627 1 0.121569 k
 0.219608 0.768627 1 0.121569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
2.0183 27.4787 m
1.5899 25.4751 2.8132 21.8488 5.9125 18.7494 c
9.0107 15.6513 12.654 14.3407 14.6395 14.8545 C
14.6398 14.8547 L
15.1246 16.8113 13.8478 20.4883 10.7496 23.5865 c
7.6538 26.6824 3.9876 27.8936 2.0183 27.4787 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.109804 0.529412 0.909804 0.003922 k
 0.109804 0.529412 0.909804 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
2.0183 2.0091 m
1.5899 4.0126 2.8132 7.6389 5.9125 10.7382 c
9.0107 13.8365 12.654 15.147 14.6395 14.6332 C
14.6398 14.633 L
15.1246 12.6765 13.8478 8.9993 10.7496 5.9011 c
7.6538 2.8054 3.9876 1.5941 2.0183 2.0091 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.219608 0.768627 1 0.121569 k
 0.219608 0.768627 1 0.121569 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
15.821 2.0091 m
15.3925 4.0126 16.6159 7.6389 19.7152 10.7382 c
22.8134 13.8365 26.4567 15.147 28.4422 14.6332 C
28.4424 14.633 L
28.9273 12.6765 27.6505 8.9993 24.5523 5.9011 c
21.4565 2.8054 17.7903 1.5941 15.821 2.0091 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.109804 0.529412 0.909804 0.003922 k
 0.109804 0.529412 0.909804 0.003922 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
15.821 27.4787 m
15.3925 25.4751 16.6159 21.8488 19.7152 18.7494 c
22.8134 15.6513 26.4567 14.3407 28.4422 14.8545 C
28.4424 14.8547 L
28.9273 16.8113 27.6505 20.4883 24.5523 23.5865 c
21.4565 26.6824 17.7903 27.8936 15.821 27.4787 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pfeil 1.2.Kante)
(Pfeil 1.2.Kante) 1 1 39.404 39.4039 [
%AI3_Tile
(0 O 0 R 0.823529 0.92549 0.329412 0.239216 k
 0.823529 0.92549 0.329412 0.239216 K
) @
(
%AI6_BeginPatternLayer
1 J 0 j 1 w 4 M []0 d0 XR
20.202 20.202 m
39.404 20.202 l
S
33.904 15.6187 m
39.4248 20.202 L
39.4248 20.202 L
33.887 24.6252 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pfeil 1.2.au\647en/innen)
(Pfeil 1.2.au\647en/innen) 1 1 39.4039 39.4039 [
%AI3_Tile
(0 O 0 R 0.823529 0.92549 0.329412 0.239216 k
 0.823529 0.92549 0.329412 0.239216 K
) @
(
%AI6_BeginPatternLayer
1 J 0 j 1 w 4 M []0 d0 XR
33.9039 15.6187 m
39.4247 20.202 L
39.4247 20.202 L
33.8869 24.6252 L
S
39.2997 20.202 m
24.5706 20.202 l
20.4039 20.4792 20.4039 16.8125 v
20.4039 13.1458 20.4039 12.5625 y
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Punkte)
(Punkte) 1 1 29.8 29.8 [
%AI3_Tile
(0 O 0 R 0.545098 1 0.066667 0.007843 k
 0.545098 1 0.066667 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1 1 m
1 29.8 L
29.8 29.8 L
29.8 1 L
1 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.07451 0.211765 0 0 k
 0.07451 0.211765 0 0 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
11.08 8.2 m
11.08 9.791 9.79 11.08 8.2 11.08 c
6.609 11.08 5.32 9.791 5.32 8.2 c
5.32 6.61 6.609 5.32 8.2 5.32 c
9.79 5.32 11.08 6.61 11.08 8.2 c
f
11.08 22.6 m
11.08 24.191 9.79 25.48 8.2 25.48 c
6.609 25.48 5.32 24.191 5.32 22.6 c
5.32 21.01 6.609 19.72 8.2 19.72 c
9.79 19.72 11.08 21.01 11.08 22.6 c
f
18.28 15.4 m
18.28 16.991 16.99 18.28 15.4 18.28 c
13.809 18.28 12.52 16.991 12.52 15.4 c
12.52 13.81 13.809 12.52 15.4 12.52 c
16.99 12.52 18.28 13.81 18.28 15.4 c
f
25.48 8.2 m
25.48 9.791 24.19 11.08 22.6 11.08 c
21.009 11.08 19.72 9.791 19.72 8.2 c
19.72 6.61 21.009 5.32 22.6 5.32 c
24.19 5.32 25.48 6.61 25.48 8.2 c
f
25.48 22.6 m
25.48 24.191 24.19 25.48 22.6 25.48 c
21.009 25.48 19.72 24.191 19.72 22.6 c
19.72 21.01 21.009 19.72 22.6 19.72 c
24.19 19.72 25.48 21.01 25.48 22.6 c
f
*U
26.92 1 m
29.8 1 L
29.8 3.88 L
28.209 3.88 26.92 2.591 26.92 1 C
f
15.4 3.88 m
13.809 3.88 12.52 2.591 12.52 1 C
18.28 1 L
18.28 2.591 16.99 3.88 15.4 3.88 c
f
1 3.88 m
1 1 L
3.88 1 L
3.88 2.591 2.59 3.88 1 3.88 C
f
26.92 15.4 m
26.92 13.81 28.209 12.52 29.8 12.52 C
29.8 18.28 L
28.209 18.28 26.92 16.991 26.92 15.4 c
f
15.4 18.28 m
13.809 18.28 12.52 16.991 12.52 15.4 c
12.52 13.81 13.809 12.52 15.4 12.52 c
16.99 12.52 18.28 13.81 18.28 15.4 c
18.28 16.991 16.99 18.28 15.4 18.28 c
f
3.88 15.4 m
3.88 16.991 2.59 18.28 1 18.28 C
1 12.52 L
2.59 12.52 3.88 13.81 3.88 15.4 c
f
29.8 26.92 m
29.8 29.8 L
26.92 29.8 L
26.92 28.21 28.209 26.92 29.8 26.92 C
f
15.4 26.92 m
16.99 26.92 18.28 28.21 18.28 29.8 C
12.52 29.8 L
12.52 28.21 13.809 26.92 15.4 26.92 c
f
3.88 29.8 m
1 29.8 L
1 26.92 L
2.59 26.92 3.88 28.21 3.88 29.8 C
f
8.2 11.08 m
6.609 11.08 5.32 9.791 5.32 8.2 c
5.32 6.61 6.609 5.32 8.2 5.32 c
9.79 5.32 11.08 6.61 11.08 8.2 c
11.08 9.791 9.79 11.08 8.2 11.08 c
f
22.6 11.08 m
21.009 11.08 19.72 9.791 19.72 8.2 c
19.72 6.61 21.009 5.32 22.6 5.32 c
24.19 5.32 25.48 6.61 25.48 8.2 c
25.48 9.791 24.19 11.08 22.6 11.08 c
f
8.2 25.48 m
6.609 25.48 5.32 24.191 5.32 22.6 c
5.32 21.01 6.609 19.72 8.2 19.72 c
9.79 19.72 11.08 21.01 11.08 22.6 c
11.08 24.191 9.79 25.48 8.2 25.48 c
f
22.6 25.48 m
21.009 25.48 19.72 24.191 19.72 22.6 c
19.72 21.01 21.009 19.72 22.6 19.72 c
24.19 19.72 25.48 21.01 25.48 22.6 c
25.48 24.191 24.19 25.48 22.6 25.48 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Punkte 1)
(Punkte 1) 1 1 29.8 29.8 [
%AI3_Tile
(0 O 0 R 0.545098 1 0.066667 0.007843 k
 0.545098 1 0.066667 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1 1 m
1 29.8 L
29.8 29.8 L
29.8 1 L
1 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.07451 0.211765 0 0 k
 0.07451 0.211765 0 0 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
11.08 8.2 m
11.08 9.791 9.79 11.08 8.2 11.08 c
6.609 11.08 5.32 9.791 5.32 8.2 c
5.32 6.61 6.609 5.32 8.2 5.32 c
9.79 5.32 11.08 6.61 11.08 8.2 c
f
11.08 22.6 m
11.08 24.191 9.79 25.48 8.2 25.48 c
6.609 25.48 5.32 24.191 5.32 22.6 c
5.32 21.01 6.609 19.72 8.2 19.72 c
9.79 19.72 11.08 21.01 11.08 22.6 c
f
18.28 15.4 m
18.28 16.991 16.99 18.28 15.4 18.28 c
13.809 18.28 12.52 16.991 12.52 15.4 c
12.52 13.81 13.809 12.52 15.4 12.52 c
16.99 12.52 18.28 13.81 18.28 15.4 c
f
25.48 8.2 m
25.48 9.791 24.19 11.08 22.6 11.08 c
21.009 11.08 19.72 9.791 19.72 8.2 c
19.72 6.61 21.009 5.32 22.6 5.32 c
24.19 5.32 25.48 6.61 25.48 8.2 c
f
25.48 22.6 m
25.48 24.191 24.19 25.48 22.6 25.48 c
21.009 25.48 19.72 24.191 19.72 22.6 c
19.72 21.01 21.009 19.72 22.6 19.72 c
24.19 19.72 25.48 21.01 25.48 22.6 c
f
*U
26.92 1 m
29.8 1 L
29.8 3.88 L
28.209 3.88 26.92 2.591 26.92 1 C
f
15.4 3.88 m
13.809 3.88 12.52 2.591 12.52 1 C
18.28 1 L
18.28 2.591 16.99 3.88 15.4 3.88 c
f
1 3.88 m
1 1 L
3.88 1 L
3.88 2.591 2.59 3.88 1 3.88 C
f
26.92 15.4 m
26.92 13.81 28.209 12.52 29.8 12.52 C
29.8 18.28 L
28.209 18.28 26.92 16.991 26.92 15.4 c
f
15.4 18.28 m
13.809 18.28 12.52 16.991 12.52 15.4 c
12.52 13.81 13.809 12.52 15.4 12.52 c
16.99 12.52 18.28 13.81 18.28 15.4 c
18.28 16.991 16.99 18.28 15.4 18.28 c
f
3.88 15.4 m
3.88 16.991 2.59 18.28 1 18.28 C
1 12.52 L
2.59 12.52 3.88 13.81 3.88 15.4 c
f
29.8 26.92 m
29.8 29.8 L
26.92 29.8 L
26.92 28.21 28.209 26.92 29.8 26.92 C
f
15.4 26.92 m
16.99 26.92 18.28 28.21 18.28 29.8 C
12.52 29.8 L
12.52 28.21 13.809 26.92 15.4 26.92 c
f
3.88 29.8 m
1 29.8 L
1 26.92 L
2.59 26.92 3.88 28.21 3.88 29.8 C
f
8.2 11.08 m
6.609 11.08 5.32 9.791 5.32 8.2 c
5.32 6.61 6.609 5.32 8.2 5.32 c
9.79 5.32 11.08 6.61 11.08 8.2 c
11.08 9.791 9.79 11.08 8.2 11.08 c
f
22.6 11.08 m
21.009 11.08 19.72 9.791 19.72 8.2 c
19.72 6.61 21.009 5.32 22.6 5.32 c
24.19 5.32 25.48 6.61 25.48 8.2 c
25.48 9.791 24.19 11.08 22.6 11.08 c
f
8.2 25.48 m
6.609 25.48 5.32 24.191 5.32 22.6 c
5.32 21.01 6.609 19.72 8.2 19.72 c
9.79 19.72 11.08 21.01 11.08 22.6 c
11.08 24.191 9.79 25.48 8.2 25.48 c
f
22.6 25.48 m
21.009 25.48 19.72 24.191 19.72 22.6 c
19.72 21.01 21.009 19.72 22.6 19.72 c
24.19 19.72 25.48 21.01 25.48 22.6 c
25.48 24.191 24.19 25.48 22.6 25.48 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Rauten)
(Rauten) 1 1 37.1865 41.9411 [
%AI3_Tile
(0 O 0 R 0.25098 0 1 0 k
 0.25098 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1.0002 1.0004 m
1.0002 41.9411 L
37.1865 41.9411 L
37.1865 1.0004 L
1.0002 1.0004 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.0936 41.9408 m
19.0929 41.9408 L
19.0933 41.9402 L
19.0936 41.9408 L
f
7.0311 41.9408 m
7.0304 41.9408 L
7.0308 41.9402 L
7.0311 41.9408 L
f
31.1556 41.9408 m
31.1548 41.9408 L
31.1552 41.9402 L
31.1556 41.9408 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.87451 1 0.094118 0.047059 k
 0.87451 1 0.094118 0.047059 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
37.1865 1 m
37.1865 11.2349 L
31.1552 1 L
37.1865 1 L
f
19.0933 1 m
31.1552 1 L
25.124 11.2349 L
19.0933 1 L
f
7.0308 1 m
19.0933 1 L
13.062 11.2349 L
7.0308 1 L
f
1 1 m
7.0308 1 L
1 11.2349 L
1 1 L
f
37.1859 11.2349 m
37.1865 11.236 L
37.1865 31.7059 L
31.1552 21.4704 L
37.1859 11.2349 L
f
19.0933 21.4704 m
25.124 11.2349 L
31.1552 21.4704 L
25.124 31.7059 L
19.0933 21.4704 L
f
7.0308 21.4704 m
13.062 11.2349 L
19.0933 21.4704 L
13.062 31.7059 L
7.0308 21.4704 L
f
1 31.7059 m
1 11.2349 L
7.0308 21.4704 L
1 31.7059 L
f
37.1859 31.7059 m
37.1865 31.707 L
37.1865 41.9408 L
31.1556 41.9408 L
31.1552 41.9402 L
37.1859 31.7059 L
f
25.124 31.7059 m
31.1552 41.9402 L
31.1548 41.9408 L
19.0936 41.9408 L
19.0933 41.9402 L
25.124 31.7059 L
f
13.062 31.7059 m
19.0933 41.9402 L
19.0929 41.9408 L
7.0311 41.9408 L
7.0308 41.9402 L
13.062 31.7059 L
f
7.0304 41.9408 m
1 41.9408 L
1 31.7059 L
7.0308 41.9402 L
7.0304 41.9408 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Rauten 1)
(Rauten 1) 1 1 37.1865 41.9411 [
%AI3_Tile
(0 O 0 R 0.25098 0 1 0 k
 0.25098 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1.0002 1.0004 m
1.0002 41.9411 L
37.1865 41.9411 L
37.1865 1.0004 L
1.0002 1.0004 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.0936 41.9408 m
19.0929 41.9408 L
19.0933 41.9402 L
19.0936 41.9408 L
f
7.0311 41.9408 m
7.0304 41.9408 L
7.0308 41.9402 L
7.0311 41.9408 L
f
31.1556 41.9408 m
31.1548 41.9408 L
31.1552 41.9402 L
31.1556 41.9408 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.87451 1 0.094118 0.047059 k
 0.87451 1 0.094118 0.047059 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
37.1865 1 m
37.1865 11.2349 L
31.1552 1 L
37.1865 1 L
f
19.0933 1 m
31.1552 1 L
25.124 11.2349 L
19.0933 1 L
f
7.0308 1 m
19.0933 1 L
13.062 11.2349 L
7.0308 1 L
f
1 1 m
7.0308 1 L
1 11.2349 L
1 1 L
f
37.1859 11.2349 m
37.1865 11.236 L
37.1865 31.7059 L
31.1552 21.4704 L
37.1859 11.2349 L
f
19.0933 21.4704 m
25.124 11.2349 L
31.1552 21.4704 L
25.124 31.7059 L
19.0933 21.4704 L
f
7.0308 21.4704 m
13.062 11.2349 L
19.0933 21.4704 L
13.062 31.7059 L
7.0308 21.4704 L
f
1 31.7059 m
1 11.2349 L
7.0308 21.4704 L
1 31.7059 L
f
37.1859 31.7059 m
37.1865 31.707 L
37.1865 41.9408 L
31.1556 41.9408 L
31.1552 41.9402 L
37.1859 31.7059 L
f
25.124 31.7059 m
31.1552 41.9402 L
31.1548 41.9408 L
19.0936 41.9408 L
19.0933 41.9402 L
25.124 31.7059 L
f
13.062 31.7059 m
19.0933 41.9402 L
19.0929 41.9408 L
7.0311 41.9408 L
7.0308 41.9402 L
13.062 31.7059 L
f
7.0304 41.9408 m
1 41.9408 L
1 31.7059 L
7.0308 41.9402 L
7.0304 41.9408 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Schachbrettmuster)
(Schachbrettmuster) 1 1 31.3995 31.3995 [
%AI3_Tile
(0 O 0 R 0 0.968627 1 0 k
 0 0.968627 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.9995 4.8 m
27.5995 4.8 L
27.5995 12.3995 L
19.9995 12.3995 L
19.9995 4.8 L
f
31.3995 27.5995 m
31.3995 31.3995 L
27.5995 31.3995 L
27.5995 27.5995 L
31.3995 27.5995 L
f
19.9995 27.5995 m
19.9995 19.9995 L
27.5995 19.9995 L
27.5995 27.5995 L
19.9995 27.5995 L
f
12.3995 12.3995 m
19.9995 12.3995 L
19.9995 19.9995 L
12.3995 19.9995 L
12.3995 12.3995 L
f
12.3995 27.5995 m
4.8 27.5995 L
4.8 19.9995 L
12.3995 19.9995 L
12.3995 27.5995 L
f
4.8 12.3995 m
4.8 4.8 L
12.3995 4.8 L
12.3995 12.3995 L
4.8 12.3995 L
f
19.9995 27.5995 m
19.9995 31.3995 L
12.3995 31.3995 L
12.3995 27.5995 L
19.9995 27.5995 L
f
12.3995 4.8 m
12.3995 1 L
19.9995 1 L
19.9995 4.8 L
12.3995 4.8 L
f
4.8 19.9995 m
1 19.9995 L
1 12.3995 L
4.8 12.3995 L
4.8 19.9995 L
f
27.5995 19.9995 m
27.5995 12.3995 L
31.3995 12.3995 L
31.3995 19.9995 L
27.5995 19.9995 L
f
4.8 31.3995 m
1 31.3995 L
1 27.5995 L
4.8 27.5995 L
4.8 31.3995 L
f
27.5995 1 m
31.3995 1 L
31.3995 4.8 L
27.5995 4.8 L
27.5995 1 L
f
1 4.8 m
1 1 L
4.8 1 L
4.8 4.8 L
1 4.8 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.031373 0.25098 0 k
 0.003922 0.031373 0.25098 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.8 4.8 m
4.8 1 L
12.3995 1 L
12.3995 4.8 L
4.8 4.8 L
f
4.8 12.3995 m
1 12.3995 L
1 4.8 L
4.8 4.8 L
4.8 12.3995 L
f
19.9995 4.8 m
19.9995 1 L
27.5995 1 L
27.5995 4.8 L
19.9995 4.8 L
f
12.3995 12.3995 m
12.3995 4.8 L
19.9995 4.8 L
19.9995 12.3995 L
12.3995 12.3995 L
f
27.5995 4.8 m
31.3995 4.8 L
31.3995 12.3995 L
27.5995 12.3995 L
27.5995 4.8 L
f
12.3995 19.9995 m
4.8 19.9995 L
4.8 12.3995 L
12.3995 12.3995 L
12.3995 19.9995 L
f
4.8 27.5995 m
1 27.5995 L
1 19.9995 L
4.8 19.9995 L
4.8 27.5995 L
f
19.9995 12.3995 m
27.5995 12.3995 L
27.5995 19.9995 L
19.9995 19.9995 L
19.9995 12.3995 L
f
19.9995 19.9995 m
19.9995 27.5995 L
12.3995 27.5995 L
12.3995 19.9995 L
19.9995 19.9995 L
f
27.5995 19.9995 m
31.3995 19.9995 L
31.3995 27.5995 L
27.5995 27.5995 L
27.5995 19.9995 L
f
12.3995 27.5995 m
12.3995 31.3995 L
4.8 31.3995 L
4.8 27.5995 L
12.3995 27.5995 L
f
27.5995 27.5995 m
27.5995 31.3995 L
19.9995 31.3995 L
19.9995 27.5995 L
27.5995 27.5995 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Schachbrettmuster 1)
(Schachbrettmuster 1) 1 1 31.3995 31.3995 [
%AI3_Tile
(0 O 0 R 0 0.968627 1 0 k
 0 0.968627 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.9995 4.8 m
27.5995 4.8 L
27.5995 12.3995 L
19.9995 12.3995 L
19.9995 4.8 L
f
31.3995 27.5995 m
31.3995 31.3995 L
27.5995 31.3995 L
27.5995 27.5995 L
31.3995 27.5995 L
f
19.9995 27.5995 m
19.9995 19.9995 L
27.5995 19.9995 L
27.5995 27.5995 L
19.9995 27.5995 L
f
12.3995 12.3995 m
19.9995 12.3995 L
19.9995 19.9995 L
12.3995 19.9995 L
12.3995 12.3995 L
f
12.3995 27.5995 m
4.8 27.5995 L
4.8 19.9995 L
12.3995 19.9995 L
12.3995 27.5995 L
f
4.8 12.3995 m
4.8 4.8 L
12.3995 4.8 L
12.3995 12.3995 L
4.8 12.3995 L
f
19.9995 27.5995 m
19.9995 31.3995 L
12.3995 31.3995 L
12.3995 27.5995 L
19.9995 27.5995 L
f
12.3995 4.8 m
12.3995 1 L
19.9995 1 L
19.9995 4.8 L
12.3995 4.8 L
f
4.8 19.9995 m
1 19.9995 L
1 12.3995 L
4.8 12.3995 L
4.8 19.9995 L
f
27.5995 19.9995 m
27.5995 12.3995 L
31.3995 12.3995 L
31.3995 19.9995 L
27.5995 19.9995 L
f
4.8 31.3995 m
1 31.3995 L
1 27.5995 L
4.8 27.5995 L
4.8 31.3995 L
f
27.5995 1 m
31.3995 1 L
31.3995 4.8 L
27.5995 4.8 L
27.5995 1 L
f
1 4.8 m
1 1 L
4.8 1 L
4.8 4.8 L
1 4.8 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.031373 0.25098 0 k
 0.003922 0.031373 0.25098 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.8 4.8 m
4.8 1 L
12.3995 1 L
12.3995 4.8 L
4.8 4.8 L
f
4.8 12.3995 m
1 12.3995 L
1 4.8 L
4.8 4.8 L
4.8 12.3995 L
f
19.9995 4.8 m
19.9995 1 L
27.5995 1 L
27.5995 4.8 L
19.9995 4.8 L
f
12.3995 12.3995 m
12.3995 4.8 L
19.9995 4.8 L
19.9995 12.3995 L
12.3995 12.3995 L
f
27.5995 4.8 m
31.3995 4.8 L
31.3995 12.3995 L
27.5995 12.3995 L
27.5995 4.8 L
f
12.3995 19.9995 m
4.8 19.9995 L
4.8 12.3995 L
12.3995 12.3995 L
12.3995 19.9995 L
f
4.8 27.5995 m
1 27.5995 L
1 19.9995 L
4.8 19.9995 L
4.8 27.5995 L
f
19.9995 12.3995 m
27.5995 12.3995 L
27.5995 19.9995 L
19.9995 19.9995 L
19.9995 12.3995 L
f
19.9995 19.9995 m
19.9995 27.5995 L
12.3995 27.5995 L
12.3995 19.9995 L
19.9995 19.9995 L
f
27.5995 19.9995 m
31.3995 19.9995 L
31.3995 27.5995 L
27.5995 27.5995 L
27.5995 19.9995 L
f
12.3995 27.5995 m
12.3995 31.3995 L
4.8 31.3995 L
4.8 27.5995 L
12.3995 27.5995 L
f
27.5995 27.5995 m
27.5995 31.3995 L
19.9995 31.3995 L
19.9995 27.5995 L
27.5995 27.5995 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Schuppen)
(Schuppen) 1.6 9.3475 48.088 55.8355 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1.6 9.3475 m
1.6 55.8355 L
48.088 55.8355 L
48.088 9.3475 L
1.6 9.3475 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
17.0956 9.3475 m
12.8162 9.3475 9.3475 5.8787 9.3475 1.6 C
9.3475 5.8787 5.8787 9.3475 1.6 9.3475 C
1.6 13.6262 5.0687 17.095 9.3475 17.095 c
13.6268 17.095 17.0956 13.6262 17.0956 9.3475 C
s
32.5918 9.3475 m
28.3125 9.3475 24.8437 5.8787 24.8437 1.6 C
24.8437 5.8787 21.3743 9.3475 17.0956 9.3475 C
17.0956 13.6262 20.5644 17.095 24.8437 17.095 c
29.1224 17.095 32.5918 13.6262 32.5918 9.3475 C
s
48.088 9.3475 m
43.8087 9.3475 40.3399 5.8787 40.3399 1.6 C
40.3399 5.8787 36.8705 9.3475 32.5918 9.3475 C
32.5918 13.6262 36.0606 17.095 40.3399 17.095 c
44.6186 17.095 48.088 13.6262 48.088 9.3475 C
s
17.0956 40.3393 m
12.8162 40.3393 9.3475 36.8699 9.3475 32.5912 C
9.3475 36.8699 5.8787 40.3393 1.6 40.3393 C
1.6 44.6181 5.0687 48.0874 9.3475 48.0874 c
13.6268 48.0874 17.0956 44.6181 17.0956 40.3393 C
s
17.0956 24.8431 m
12.8162 24.8431 9.3475 21.3743 9.3475 17.095 C
9.3475 21.3743 5.8787 24.8431 1.6 24.8431 C
1.6 29.1218 5.0687 32.5912 9.3475 32.5912 c
13.6268 32.5912 17.0956 29.1218 17.0956 24.8431 C
s
32.5918 24.8431 m
28.3125 24.8431 24.8437 21.3743 24.8437 17.095 C
24.8437 21.3743 21.3743 24.8431 17.0956 24.8431 C
17.0956 29.1218 20.5644 32.5912 24.8437 32.5912 c
29.1224 32.5912 32.5918 29.1218 32.5918 24.8431 C
s
48.088 24.8431 m
43.8087 24.8431 40.3399 21.3743 40.3399 17.095 C
40.3399 21.3743 36.8705 24.8431 32.5918 24.8431 C
32.5918 29.1218 36.0606 32.5912 40.3399 32.5912 c
44.6186 32.5912 48.088 29.1218 48.088 24.8431 C
s
32.5918 40.3393 m
28.3125 40.3393 24.8437 36.8699 24.8437 32.5912 C
24.8437 36.8699 21.3743 40.3393 17.0956 40.3393 C
17.0956 44.6181 20.5644 48.0874 24.8437 48.0874 c
29.1224 48.0874 32.5918 44.6181 32.5918 40.3393 C
s
48.088 40.3393 m
43.8087 40.3393 40.3399 36.8699 40.3399 32.5912 C
40.3399 36.8699 36.8705 40.3393 32.5918 40.3393 C
32.5918 44.6181 36.0606 48.0874 40.3399 48.0874 c
44.6186 48.0874 48.088 44.6181 48.088 40.3393 C
s
17.0956 55.8355 m
12.8162 55.8355 9.3475 52.3662 9.3475 48.0874 C
9.3475 52.3662 5.8787 55.8355 1.6 55.8355 C
1.6 60.1143 5.0687 63.5836 9.3475 63.5836 c
13.6268 63.5836 17.0956 60.1143 17.0956 55.8355 C
s
32.5918 55.8355 m
28.3125 55.8355 24.8437 52.3662 24.8437 48.0874 C
24.8437 52.3662 21.3743 55.8355 17.0956 55.8355 C
17.0956 60.1143 20.5644 63.5836 24.8437 63.5836 c
29.1224 63.5836 32.5918 60.1143 32.5918 55.8355 C
s
48.088 55.8355 m
43.8087 55.8355 40.3399 52.3662 40.3399 48.0874 C
40.3399 52.3662 36.8705 55.8355 32.5918 55.8355 C
32.5918 60.1143 36.0606 63.5836 40.3399 63.5836 c
44.6186 63.5836 48.088 60.1143 48.088 55.8355 C
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Sechseck)
(Sechseck) 4 1.6 70.151 77.983 [
%AI3_Tile
(0 O 0 R 0 1 0.560784 0 k
 0 1 0.560784 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
70.151 77.983 m
70.151 1.6 L
4 1.6 L
4 77.983 L
70.151 77.983 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0.141176 0.172549 k
 1 1 0.141176 0.172549 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
20.538 30.244 m
S
26.05 20.696 m
15.025 20.696 L
9.513 30.244 L
15.025 39.792 L
26.05 39.792 L
31.564 30.244 L
26.05 20.696 L
s
20.537 11.148 m
S
26.05 1.6 m
15.024 1.6 L
9.512 11.148 L
15.024 20.696 L
26.05 20.696 L
31.563 11.148 L
26.05 1.6 L
s
53.614 30.244 m
S
59.126 20.696 m
48.101 20.696 L
42.589 30.244 L
48.101 39.792 L
59.126 39.792 L
64.639 30.244 L
59.126 20.696 L
s
53.614 11.148 m
S
59.126 1.6 m
48.101 1.6 L
42.588 11.148 L
48.101 20.696 L
59.126 20.696 L
64.638 11.148 L
59.126 1.6 L
s
20.538 68.436 m
S
26.051 58.888 m
15.025 58.888 L
9.513 68.436 L
15.025 77.984 L
26.051 77.984 L
31.564 68.436 L
26.051 58.888 L
s
20.538 49.34 m
S
26.051 39.792 m
15.025 39.792 L
9.513 49.34 L
15.025 58.888 L
26.05 58.888 L
31.564 49.34 L
26.051 39.792 L
s
53.614 68.436 m
S
59.127 58.888 m
48.102 58.888 L
42.589 68.436 L
48.101 77.985 L
59.127 77.985 L
64.639 68.436 L
59.127 58.888 L
s
53.614 49.34 m
S
59.127 39.792 m
48.101 39.792 L
42.589 49.34 L
48.101 58.888 L
59.127 58.888 L
64.639 49.341 L
59.127 39.792 L
s
4 20.696 m
S
3.876 30.244 m
9.512 30.244 L
15.024 20.696 L
9.512 11.147 L
3.876 11.147 L
S
37.075 20.696 m
S
42.588 11.148 m
31.563 11.148 L
26.05 20.696 L
31.563 30.244 L
42.589 30.244 L
48.101 20.696 L
42.588 11.148 L
s
37.076 58.888 m
S
42.589 49.34 m
31.564 49.34 L
26.05 58.888 L
31.564 68.436 L
42.589 68.436 L
48.101 58.888 L
42.589 49.34 L
s
70.151 20.696 m
S
70.2094 11.147 m
64.639 11.147 L
59.127 20.696 L
64.639 30.244 L
70.2094 30.244 L
S
70.152 58.888 m
S
70.0427 49.34 m
64.639 49.34 L
59.127 58.888 L
64.639 68.436 L
70.0427 68.436 L
S
4 58.888 m
S
3.876 68.436 m
9.513 68.436 L
15.025 58.888 L
9.513 49.34 L
3.876 49.34 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Seil.Kante)
(Seil.Kante) 1 4.6 60.9998 33.3999 [
%AI3_Tile
(0 O 0 R 0.74902 0.678431 0.670588 0.901961 k
 0.74902 0.678431 0.670588 0.901961 K
) @
(
%AI6_BeginPatternLayer
1 J 1 j 0.6 w 4 M []0 d0 XR
24.9999 7 m
15.6521 4.663 8.125 8.6981 1 14.1407 C
S
36.9999 7 m
22.3477 3.337 12.168 15.3276 1 23.859 C
S
48.9999 7 m
29.3464 2.0866 17.7386 25.3332 1 30.6213 C
S
1 30.9999 m
24.9999 36.9999 36.9999 1 60.9998 7 C
S
13 30.9999 m
32.6534 35.9133 44.2611 12.6667 60.9998 7.3786 C
S
24.9999 30.9999 m
39.652 34.6629 49.8317 22.6722 60.9998 14.1407 C
S
36.9999 30.9999 m
46.3476 33.3369 53.8749 29.3018 60.9998 23.859 C
S
48.9999 30.9999 m
53.3464 32.0865 57.2978 31.7908 60.9998 30.6213 C
S
13 7 m
8.6535 5.9134 4.7019 6.2091 1 7.3786 C
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (SolidStar.side)
(SolidStar.side) 1 1 33.0117 33.0117 [
%AI3_Tile
(0 O 0 R 0.058824 0.196078 1 0 k
 0.058824 0.196078 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
7.9689 26.0458 m
14.5331 22.9874 l
17.0095 29.7904 L
19.4859 22.9874 l
26.0473 26.0458 l
22.9889 19.4815 l
29.792 17.0052 l
22.9889 14.5288 l
26.0473 7.9674 l
19.4859 11.0257 l
17.0095 4.2226 l
14.5305 11.0257 l
7.9689 7.9674 l
11.0273 14.5288 l
4.2242 17.0052 l
11.0273 19.4843 L
7.9689 26.0458 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stern)
(Stern) 1 1 63.384 84.766 [
%AI3_Tile
(0 O 0 R 1 0.988235 0.188235 0.172549 k
 1 0.988235 0.188235 0.172549 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1 1 m
1 84.766 L
63.384 84.766 L
63.384 1 L
1 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.266667 1 0 k
 0 0.266667 1 0 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
37.668 67.113 m
43.924 62.567 L
41.535 55.213 L
47.791 59.757 L
54.046 55.212 L
51.657 62.566 L
57.914 67.112 L
50.18 67.112 L
47.791 74.467 L
45.402 67.113 L
37.668 67.113 L
f
16.596 59.757 m
22.851 55.212 L
20.462 62.566 L
26.719 67.112 L
18.985 67.112 L
16.596 74.467 L
14.207 67.113 L
6.473 67.113 L
12.729 62.567 L
10.34 55.213 L
16.596 59.757 L
f
20.462 20.683 m
26.719 25.229 L
18.985 25.229 L
16.596 32.584 L
14.207 25.23 L
6.473 25.23 L
12.729 20.684 L
10.34 13.33 L
16.596 17.874 L
22.851 13.329 L
20.462 20.683 L
f
38.447 34.271 m
36.058 41.625 L
42.315 46.171 L
34.581 46.171 L
32.192 53.526 L
29.803 46.172 L
22.069 46.172 L
28.325 41.626 L
25.936 34.272 L
32.192 38.816 L
38.447 34.271 L
f
51.657 20.683 m
57.914 25.229 L
50.18 25.229 L
47.791 32.584 L
45.402 25.23 L
37.668 25.23 L
43.924 20.684 L
41.535 13.33 L
47.791 17.874 L
54.046 13.329 L
51.657 20.683 L
f
*U
34.581 4.288 m
32.192 11.643 L
29.803 4.289 L
22.069 4.289 L
26.5962 1 L
37.7885 1 L
42.315 4.288 L
34.581 4.288 L
f
53.261 4.289 m
57.7882 1 L
63.384 1 L
63.384 11.643 L
60.995 4.289 L
53.261 4.289 L
f
4.866 41.625 m
11.123 46.171 L
3.389 46.171 L
1 53.526 L
1 38.816 L
7.255 34.271 L
4.866 41.625 L
f
36.058 41.625 m
42.315 46.171 L
34.581 46.171 L
32.192 53.526 L
29.803 46.172 L
22.069 46.172 L
28.325 41.626 L
25.936 34.272 L
32.192 38.816 L
38.447 34.271 L
36.058 41.625 L
f
53.261 46.172 m
59.517 41.626 L
57.128 34.272 L
63.384 38.816 L
63.384 53.526 L
60.995 46.172 L
53.261 46.172 L
f
4.866 83.508 m
6.5974 84.766 L
1 84.766 L
1 80.699 L
7.255 76.154 L
4.866 83.508 L
f
25.936 76.155 m
32.192 80.699 L
38.447 76.154 L
36.058 83.508 L
37.7895 84.766 L
26.5951 84.766 L
28.325 83.509 L
25.936 76.155 L
f
22.851 55.212 m
20.462 62.566 L
26.719 67.112 L
18.985 67.112 L
16.596 74.467 L
14.207 67.113 L
6.473 67.113 L
12.729 62.567 L
10.34 55.213 L
16.596 59.757 L
22.851 55.212 L
f
41.535 55.213 m
47.791 59.757 L
54.046 55.212 L
51.657 62.566 L
57.914 67.112 L
50.18 67.112 L
47.791 74.467 L
45.402 67.113 L
37.668 67.113 L
43.924 62.567 L
41.535 55.213 L
f
50.18 25.229 m
47.791 32.584 L
45.402 25.23 L
37.668 25.23 L
43.924 20.684 L
41.535 13.33 L
47.791 17.874 L
54.046 13.329 L
51.657 20.683 L
57.914 25.229 L
50.18 25.229 L
f
18.985 25.229 m
16.596 32.584 L
14.207 25.23 L
6.473 25.23 L
12.729 20.684 L
10.34 13.33 L
16.596 17.874 L
22.851 13.329 L
20.462 20.683 L
26.719 25.229 L
18.985 25.229 L
f
3.388 4.289 m
1 11.643 L
1 1 L
6.5948 1 L
11.122 4.289 L
3.388 4.289 L
f
57.128 76.154 m
63.384 80.699 L
63.384 84.766 L
57.7855 84.766 L
59.517 83.508 L
57.128 76.154 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stern 1)
(Stern 1) 1 1 63.384 84.766 [
%AI3_Tile
(0 O 0 R 1 0.988235 0.188235 0.172549 k
 1 0.988235 0.188235 0.172549 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
1 1 m
1 84.766 L
63.384 84.766 L
63.384 1 L
1 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.266667 1 0 k
 0 0.266667 1 0 K
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
37.668 67.113 m
43.924 62.567 L
41.535 55.213 L
47.791 59.757 L
54.046 55.212 L
51.657 62.566 L
57.914 67.112 L
50.18 67.112 L
47.791 74.467 L
45.402 67.113 L
37.668 67.113 L
f
16.596 59.757 m
22.851 55.212 L
20.462 62.566 L
26.719 67.112 L
18.985 67.112 L
16.596 74.467 L
14.207 67.113 L
6.473 67.113 L
12.729 62.567 L
10.34 55.213 L
16.596 59.757 L
f
20.462 20.683 m
26.719 25.229 L
18.985 25.229 L
16.596 32.584 L
14.207 25.23 L
6.473 25.23 L
12.729 20.684 L
10.34 13.33 L
16.596 17.874 L
22.851 13.329 L
20.462 20.683 L
f
38.447 34.271 m
36.058 41.625 L
42.315 46.171 L
34.581 46.171 L
32.192 53.526 L
29.803 46.172 L
22.069 46.172 L
28.325 41.626 L
25.936 34.272 L
32.192 38.816 L
38.447 34.271 L
f
51.657 20.683 m
57.914 25.229 L
50.18 25.229 L
47.791 32.584 L
45.402 25.23 L
37.668 25.23 L
43.924 20.684 L
41.535 13.33 L
47.791 17.874 L
54.046 13.329 L
51.657 20.683 L
f
*U
34.581 4.288 m
32.192 11.643 L
29.803 4.289 L
22.069 4.289 L
26.5962 1 L
37.7885 1 L
42.315 4.288 L
34.581 4.288 L
f
53.261 4.289 m
57.7882 1 L
63.384 1 L
63.384 11.643 L
60.995 4.289 L
53.261 4.289 L
f
4.866 41.625 m
11.123 46.171 L
3.389 46.171 L
1 53.526 L
1 38.816 L
7.255 34.271 L
4.866 41.625 L
f
36.058 41.625 m
42.315 46.171 L
34.581 46.171 L
32.192 53.526 L
29.803 46.172 L
22.069 46.172 L
28.325 41.626 L
25.936 34.272 L
32.192 38.816 L
38.447 34.271 L
36.058 41.625 L
f
53.261 46.172 m
59.517 41.626 L
57.128 34.272 L
63.384 38.816 L
63.384 53.526 L
60.995 46.172 L
53.261 46.172 L
f
4.866 83.508 m
6.5974 84.766 L
1 84.766 L
1 80.699 L
7.255 76.154 L
4.866 83.508 L
f
25.936 76.155 m
32.192 80.699 L
38.447 76.154 L
36.058 83.508 L
37.7895 84.766 L
26.5951 84.766 L
28.325 83.509 L
25.936 76.155 L
f
22.851 55.212 m
20.462 62.566 L
26.719 67.112 L
18.985 67.112 L
16.596 74.467 L
14.207 67.113 L
6.473 67.113 L
12.729 62.567 L
10.34 55.213 L
16.596 59.757 L
22.851 55.212 L
f
41.535 55.213 m
47.791 59.757 L
54.046 55.212 L
51.657 62.566 L
57.914 67.112 L
50.18 67.112 L
47.791 74.467 L
45.402 67.113 L
37.668 67.113 L
43.924 62.567 L
41.535 55.213 L
f
50.18 25.229 m
47.791 32.584 L
45.402 25.23 L
37.668 25.23 L
43.924 20.684 L
41.535 13.33 L
47.791 17.874 L
54.046 13.329 L
51.657 20.683 L
57.914 25.229 L
50.18 25.229 L
f
18.985 25.229 m
16.596 32.584 L
14.207 25.23 L
6.473 25.23 L
12.729 20.684 L
10.34 13.33 L
16.596 17.874 L
22.851 13.329 L
20.462 20.683 L
26.719 25.229 L
18.985 25.229 L
f
3.388 4.289 m
1 11.643 L
1 1 L
6.5948 1 L
11.122 4.289 L
3.388 4.289 L
f
57.128 76.154 m
63.384 80.699 L
63.384 84.766 L
57.7855 84.766 L
59.517 83.508 L
57.128 76.154 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Streifen)
(Streifen) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 0.882353 0.258824 1 0.129412 k
 0.882353 0.258824 1 0.129412 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (TriBevel.side)
(TriBevel.side) 1.0006 1 29.0006 31.6124 [
%AI3_Tile
(0 O 0 R 0.305882 0.243137 0.247059 0 k
 0.305882 0.243137 0.247059 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29 4.8087 m
29 4.8087 L
29.0026 5.4927 L
1.0026 5.4927 L
1 4.8087 L
1 4.8087 L
29 4.8087 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.192157 0.14902 0.156863 0 k
 0.192157 0.14902 0.156863 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.0026 5.4927 m
29.0005 9.5045 L
1.0005 9.5045 L
1.0026 5.4927 L
29.0026 5.4927 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.427451 0.34902 0.352941 0.011765 k
 0.427451 0.34902 0.352941 0.011765 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.0005 9.5045 m
29.0011 10.4865 L
1.0011 10.4865 L
1.0005 9.5045 L
29.0005 9.5045 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.305882 0.243137 0.247059 0 k
 0.305882 0.243137 0.247059 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.0011 10.4865 m
29.003 17.209 L
1.003 17.209 L
1.0011 10.4865 L
29.0011 10.4865 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.517647 0.435294 0.435294 0.078431 k
 0.517647 0.435294 0.435294 0.078431 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.003 17.209 m
29.0031 18.3656 L
1.0031 18.3656 L
1.003 17.209 L
29.003 17.209 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.427451 0.34902 0.352941 0.011765 k
 0.427451 0.34902 0.352941 0.011765 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.0031 18.3656 m
29.0006 30.4752 L
1.0006 30.4752 L
1.0031 18.3656 L
29.0031 18.3656 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Wellen-transparent)
(Wellen-transparent) 17.926 10.516 68.663 69.012 [
%AI3_Tile
(0 O 0 R 0.815686 0.196078 0.411765 0.007843 k
 0.815686 0.196078 0.411765 0.007843 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.926 69.012 m
17.926 10.516 L
68.663 10.516 L
68.663 69.012 L
17.926 69.012 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.501961 0.011765 0.101961 0 k
 0.501961 0.011765 0.101961 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.75 w 4 M []0 d0 XR
65.335 70.465 m
65.881 68.746 67.444 68.168 68.663 69.012 C
67.538 69.668 68.011 71.255 69.686 70.933 c
72.124 70.464 71.894 67.213 70.53 65.589 c
68.561 63.245 64.565 60.995 53.241 71.117 C
S
39.964 70.465 m
40.511 68.746 42.074 68.168 43.293 69.012 C
42.168 69.668 42.64 71.255 44.316 70.933 c
46.753 70.464 46.524 67.213 45.16 65.589 c
43.191 63.245 39.195 60.995 27.87 71.117 c
S
14.594 70.465 m
15.141 68.746 16.704 68.168 17.923 69.012 C
16.798 69.668 17.27 71.255 18.945 70.933 c
21.382 70.464 21.153 67.213 19.789 65.589 c
17.821 63.245 13.825 60.995 2.5 71.117 c
S
10.959 51.619 m
22.282 41.497 26.278 43.747 28.247 46.09 c
29.611 47.715 29.841 50.965 27.403 51.434 c
25.728 51.757 25.255 50.169 26.38 49.513 C
25.161 48.669 23.599 49.248 23.052 50.966 c
22.723 51.997 23.38 53.966 24.872 54.903 c
27.267 56.406 31.371 56.05 36.328 51.619 c
47.653 41.497 51.649 43.746 53.618 46.09 c
54.982 47.715 55.212 50.965 52.774 51.434 c
51.099 51.757 50.626 50.169 51.751 49.513 C
50.532 48.669 48.97 49.248 48.423 50.966 c
48.094 51.997 48.751 53.966 50.243 54.903 c
52.638 56.406 56.742 56.05 61.699 51.619 C
73.024 41.497 77.02 43.747 78.988 46.09 c
S
70.156 32.12 m
65.199 36.551 61.095 36.907 58.7 35.404 c
57.208 34.468 56.552 32.499 56.88 31.468 c
57.427 29.749 58.99 29.171 60.208 30.015 C
59.083 30.671 59.556 32.258 61.231 31.936 c
63.669 31.467 63.439 28.216 62.075 26.592 c
60.106 24.248 56.11 21.998 44.786 32.12 C
39.829 36.551 35.725 36.907 33.33 35.404 c
31.838 34.468 31.182 32.499 31.51 31.468 c
32.056 29.749 33.619 29.171 34.838 30.015 C
33.713 30.671 34.186 32.258 35.861 31.936 c
38.299 31.467 38.069 28.216 36.705 26.592 c
34.737 24.248 30.74 21.998 19.415 32.12 c
14.458 36.551 10.354 36.907 7.96 35.404 c
S
19.792 7.094 m
21.157 8.719 21.386 11.968 18.949 12.437 c
17.274 12.76 16.801 11.172 17.926 10.516 C
16.708 9.673 15.145 10.252 14.598 11.969 c
14.27 13 14.926 14.969 16.418 15.906 c
18.812 17.409 22.916 17.053 27.874 12.622 c
39.199 2.5 43.195 4.75 45.163 7.094 c
46.528 8.719 46.757 11.968 44.32 12.437 c
42.644 12.76 42.172 11.172 43.297 10.516 C
42.078 9.673 40.515 10.252 39.968 11.969 c
39.64 13 40.297 14.969 41.788 15.906 c
44.183 17.409 48.287 17.053 53.245 12.622 C
64.569 2.5 68.565 4.75 70.534 7.094 c
71.898 8.719 72.127 11.968 69.69 12.437 c
68.014 12.76 67.542 11.172 68.667 10.516 C
67.448 9.673 65.885 10.252 65.338 11.969 c
65.011 13 65.667 14.969 67.159 15.906 c
69.553 17.409 73.657 17.053 78.615 12.622 c
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken])
Pc
Bb
2 (Schwarz, Wei\647) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Schwarz, Wei\647)
Pc
Bb
2 (Chrom) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrom)
Pc
Bb
2 (Gr\637nblau) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gr\637nblau)
Pc
Bb
2 (Orange, Gr\637n, Lila) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Orange, Gr\637n, Lila)
Pc
Bb
2 (Rosa, Gelb, Gr\637n ) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rosa, Gelb, Gr\637n )
Pc
Bb
2 (Violett, Rot, Gelb) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Violett, Rot, Gelb)
Pc
Bb
2 (Regenbogen) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Regenbogen)
Pc
Bb
2 (Stahlgrau) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Stahlgrau)
Pc
Bb
0 0 0 0 Bh
2 (Wei\647-Rot-Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Wei\647-Rot-Radial)
Pc
Bb
0 0 0 0 Bh
2 (Gelb, Orange-Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gelb, Orange-Radial)
Pc
Bb
0 0 0 0 Bh
2 (Gelb, Violett-Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gelb, Violett-Radial)
Pc
Bb
2 (Gelb, Lila, Orange, Blau) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gelb, Lila, Orange, Blau)
Pc
(Pfeil 1.2.au\647en/innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pfeil 1.2.au\647en/innen)
Pc
(Pfeil 1.2.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pfeil 1.2.Kante)
Pc
(Backsteine) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Backsteine)
Pc
(Schachbrettmuster) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Schachbrettmuster)
Pc
(Konfetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Konfetti)
Pc
(Dpllinie1.2.Innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Dpllinie1.2.Innen)
Pc
(Dpllinie1.2.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Dpllinie1.2.Au\647en)
Pc
(Dpllinie1.2.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Dpllinie1.2.Kante)
Pc
(Rauten) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Rauten)
Pc
(Sechseck) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Sechseck)
Pc
(Lorbeer.Innen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Lorbeer.Innen)
Pc
(Lorbeer.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Lorbeer.Au\647en)
Pc
(Lorbeer.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Lorbeer.Kante)
Pc
(Bl\612tter) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Bl\612tter)
Pc
(Punkte) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Punkte)
Pc
(Kreise) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Kreise)
Pc
(Seil.Kante) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Seil.Kante)
Pc
(Schuppen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Schuppen)
Pc
(SolidStar.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(SolidStar.side)
Pc
(Stern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stern)
Pc
(Streifen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Streifen)
Pc
(Ecke.Au\647en) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Ecke.Au\647en)
Pc
(TriBevel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(TriBevel.side)
Pc
(Wellen-transparent) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Wellen-transparent)
Pc
(Schachbrettmuster 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Schachbrettmuster 1)
Pc
(Rauten 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Rauten 1)
Pc
(Punkte 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Punkte 1)
Pc
(Stern 1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stern 1)
Pc
Bb
2 (Schwarz & Wei\647) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Schwarz & Wei\647)
Pc
Bb
2 (Rot & Gelb) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rot & Gelb)
Pc
Bb
0 0 0 0 Bh
2 (Gelb & Blau Kreis) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gelb & Blau Kreis)
Pc
(Gelbe Streifen) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Gelbe Streifen)
Pc
0.952941 0.701961 0.023529 0 0.0353 0.3529 0.651 (PANTONE 300 C) 0 1 Xx
(PANTONE 300 C)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Ebene 1) Ln
0 A
u
u
0 O
1 0.43 0 0 k
0 J 0 j 1 w 4 M []0 d0 XR
283.0273 448.5464 m
283.0273 425.252 l
288.0796 425.252 l
288.0796 448.5117 l
293.6909 448.5117 l
293.6909 425.252 l
309.7598 425.252 l
309.7598 448.2656 l
315.4766 448.2656 l
315.4766 425.2583 l
320.7754 425.2583 l
320.7754 448.2656 l
326.5635 448.2656 l
326.5635 425.2583 l
331.8613 425.2583 l
331.8613 453.5986 l
304.6729 453.5986 l
304.6729 430.4097 l
298.8491 430.4097 l
298.8491 453.564 l
278.2202 453.564 l
278.2202 448.5464 L
283.0273 448.5464 L
f
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
%%EndDocumentgclngrestore % PSGState0.890196 0.619608 0 0 cmyk%ADOBeginSubsetFont: Myriad-Roman Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Myriad-Roman def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def/Weight (Regular) def/ItalicAngle -0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 77 /M putdup 84 /T putdup 85 /U putdup 99 /c putdup 101 /e putdup 104 /h putdup 105 /i putdup 110 /n putdup 114 /r putdup 115 /s putdup 116 /t putdup 118 /v putdup 127 /adieresis putdup 128 /udieresis putdef/UniqueID 41987 def/FontBBox {-46 -250 1126 831} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 0 674 685 484 496 650 661 710 721] def/OtherBlues [261 266 -200 -194 -221 -212] def/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def/FamilyOtherBlues [261 266 -200 -194 -221 -212] def/BlueScale 0.0604583 def/BlueShift 7.1 def/StdHW [67] def/StdVW [88] def/StemSnapH [67 73] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings16 dict dup begin/space <1C60D8A8C9B896187A> |-/M <1C60D8A8C9B6D9EA7C52091B2F321DB670D36831ED5DA1B4F0A6AE1DBF5667523164FB9115813E3E6C4F0B3D109E88B7D969BB17EE6CC65952D424D238DD3D16926761EE8CF9691B77724AE414414C1A9563A0BF40A108CE7B2BD5A6A1BB273BB63CB0BA7DE0541C9602C90F4CF5524AE927CA6BF7AB> |-/T <1C60D8A8C9B7AA912E11D3ADAE9F125363B0C7D7C3939CEB5149931BCCF73F386B89BA0229689EED8CFA> |-/U <1C60D8A8C9B67A408EFD9054A9A79113DD1706E3745106EDB100631D8380ED383B15A85C80CD142FDA1B48EC379478A5A331278B1C9A39EFD3CDCAED53246D1DA0F22D8108> |-/c <1C60D8A8C9B77BBBEC320BF45033662E0846C6D7DAF600F43B542B038E208CBA971F48BE27B2158BB1E2C3D179B771A57E9F9ECF2E72DD7D02E301A82C166FDB33A21A23FED2727F41D73D06BBBFA1087DD1> |-/e <1C60D8A8C9B7A66FB4E9209DE48656974FCFF6918874F1136043F0EE8172F4D638772B3B7F4B5346ABF7A80D482099561C97EACC6F77A33F735C7F526F3AD9C6597D65CC687E05FF3F3D831F11A36D65E3B2668B0C94721274A694DE1BF94BC567A2314B6F8010DDBF586B4DD5CDAA4D122F00> |-/h <1C60D8A8C9B790A862F793CE5984292368D14C24D85F1154622C89385DE556F262FC00D8C56415CEE28ACD6F9EAAD20CA3762BD1E498E9A121822DBFB9C1635FF4F3E0F57899EE7BF7A1EBA8D09E28A17FFCA944FA184D7045> |-/i <1C60D8A8C9B880558B244CAC850BEB233B555EDA76BC260032590C4877AB0154B33DC5B1DD4601F9D82FFEA58A369847318C317AA33846ABE07FDE553738DFE267FA7A85BCC35C3AC59D6B3202B942> |-/n <1C60D8A8C9B790A862F793CE5984292368D14C25090F13C59AB6A5160615285F0ED3CBCE512383C3878835926BFD10B9FCC2427DAD50675BA10B8D3D6CCCCDC9457848353594E4269162567708094297D619E96D789F6B32D23000A67AC93D08E6B7F3B227> |-/r <1C60D8A8C9B825FA5220A9740606B50B33E010C4BCC4C01AD0977A1A669BFA1A38816F7F3AFEDC1C339BC9FE77C7DB80E163C95852F64B999476B735BD17BE5250D15A9BA973A020C54D1BE5E2686C3A86A44295463DE15129469ED396D6199BF1BFF0CA9745121C3A314D02EB3FCC22E2B5> |-/s <1C60D8A8C9B70FAD2F81CC8BBF4E6A0E18D42D6949A9CEA98F96BB91C9CEEEE4953B2FD83F05669F83DD630625A425EBBE7CE79373EE324743431698E23D247D1ABC2EF04C298E5A1B13987DC1A4A8FE49BE4106E5A1C884B4074CFD17B61C7D93D85F5BD451BA630B50AF> |-/t <1C60D8A8C9B821B336899C0A411A14A41B3F7FD72EC5319DCA4F19582C70AB43B5B25B037D9F70BCCAF41E05C288447E6D0303CAC78896DC7AF6BA8E289C923C2C4B8CB519AA426EAFE5402D54F959CF9B32FD990316D3D74F7DFBBA78A6DD8825> |-/v <1C60D8A8C9B75A17A037AA72CEE7B2AE5A83104902198B0D7DD4734E9CD90C4E924ED9997C39641DC3D364581B2F0E57D0F8BE1262A1F341DAF70D7826477D047E1A47B4EDA00641EC6D817A> |-/adieresis <1C60D8A8C9B7594608BD738707F0023E6289> |-/udieresis <1C60D8A8C9B794D347C6E62C13990C0F13C9AF8B> |-/a <1C60D8A8C9B759462DD3040289328E0F683F711B3894968D96516BD448677C9FAA746D5350AF3B117B4AC08A2D715CA85E807BE8FDCC75A5D4F542F38F550E802EEAE548F2FF8506F9AD572646E7A47C57311AB7620557585596A5F6F3A551832222EBEC5B08135E3A2160C305A55CF05AE83FFE02EF308999F5FC49FAB1E4709190FF594124A9626360300AD05498BBB95EF9BD55E7C80D9F3F68B61D3DCA5974A75DB1D3D3AE73A6A3AA> |-/u <1C60D8A8C9B794D31DB0E3F9489464903F451A543601831F7E66242BBBF0F4EE0ED002244C0773C95EF7695812DFE3E4919EA17472C0AEB14F2EE09B4097AA498C1E815A80FD775F9BDEB667A640A427FBCEED6CD9020699A8564C51425A7AC7936573DB14EC35F5> |-/dieresis <1C60D8A8C9B83E2DDA5977068C5944C391C4C2E0FCCFEE1F809BB788B7CDE77B685912F1E0D53EBAE362EA5444DFC8A4D1C46132CDA0C43F3F89BEEAC3771B39F8FFE8D44F> |-/.notdef <1C60D8A8C9B896187A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IELACN+Myriad-Roman /Myriad-Roman findfont def/IELACN+Myriad-Roman*1 [32{/.notdef}repeat /space 44{/.notdef}repeat /M 6{/.notdef}repeat /T /U 13{/.notdef}repeat /c /.notdef /e 2{/.notdef}repeat /h /i 4{/.notdef}repeat /n 3{/.notdef}repeat /r /s /t /.notdef /v 8{/.notdef}repeat /adieresis /udieresis 127{/.notdef}repeat] IELACN+Myriad-Roman nfntIELACN+Myriad-Roman*1  [19.9756 0 -0 -19.9756 0 0 ]mfnt sfnt704.139 74.9072 mov1.27759 -0 101 -1.27734 -0 (Tec) awsh731.747 74.9072 mov0.000366211 -0 115 -0.000366211 -0 (hnisc) awsh775.452 74.9072 mov0.000610352 -0 101 -0.000366211 -0 (he U) awsh813.684 74.9072 mov-0.218872 -0 118 -0.000366211 -0 (nive) awsh848.84 74.9072 mov-0.000366211 -0 115 0.000305176 -0 (rsi) awsh867.957 74.9072 mov0.000244141 -0 127 -0.000427246 -0 (t\177t M) awsh911.102 74.9072 mov-0.000793457 -0 110 0.000427246 -0 (\200nch) awsh953.23 74.9072 mov0.000244141 -0 (en) ash0 0 0 0 cmyk%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.24)systemdict beginIELACN+Myriad-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B8391559F1821741C613E91B4B8DDFEE52BE990936F426B6> |-/period <1C60D8A8C9B89DB75D5B8735E93D1994D05426F465DBCB298CF353AB931749A92D5FCFB5070125EF1BF1> |-/D <1C60D8A8C9B64FAD9BC690F52678A4AAC02DD6316ABFB810C919E970D7F7A5E455614A13B8B8FAD9069BFB2FE2A058D1FE3A325D332C212B8F258801D76512AEB16C1CDED0160D793096C9AFED70FB7CE3D486CA9D63CA080BC562AB4D0502CEC23D39AF71224A0C1394553A24> |-/E <1C60D8A8C9B7AFA9E19324CB088F5400D0CE0DC8B93C391C25CDCB6CF44B163B41E30DB5CEEB12C8AC1010FCF2155841073137A7213A9C19C357BE16> |-/I <1C60D8A8C9B87DE0736D2F06C496CF748FABE723262E97C313C70E0C559ACD15> |-/L <1C60D8A8C9B74383B83A0865BA98FADBEF057A578DC1081149AE01CED05908393756A8> |-/P <1C60D8A8C9B7876E544EA3FF0EFBC988D299654149CEDEE7EF8A501DF5A6B610A76FCC2A68DE43AAAD2367EF1B69766AEDC7F4E366D228E7A255CF2491770E01672060D5F7FDB3EF44F4677610ACC755DC168685A7FDF5357A797B64586FBD5027DF4E6218474AFED0> |-/S <1C60D8A8C9B7AED84059EE7383C85E038B766AD65219B41091316F33D40117AD7BBD71FD866ADEF24EE1D058FF481331D6FFAE5223E1F898254FAAC6DCF0E48B8E7BE292B9A0BDB804165944AB565D8B2BFC1364F65BCD00A69C5D19DFE4F8F2A720026141233106929D24FBA54B> |-/b <1C60D8A8C9B7E2CE04450FE67267486674AF8C0F70BF9FE7EBEF3CCBFD60FE21DD3835CA061B8556F5B08C11724582E14129531E0ADFE9B1341AA1586A74E953908F695DF17481D304283D3EC8B4FB105E0A182EB4B4B988C16515939A78A9BE5BF78590194367D3BEFBA6EAE7272EC593C249DD5CA5D2A9503802028F70CCADDFDC7FB8262DD25D4B1A63222F5A1ED774D199B349DF11160F7E12994460971E902615F09315> |-/d <1C60D8A8C9B7E7C1E9415B382C0EF9C60E6021BB1E95C03A2DD89F360B5663D6551C4C39C5506F0B5916330D8761AFD7B1B7AFD2B01F3C1D7C981BD3EEF9982FF295D03CBFC77917EEBB4B17167D69AC6077ECAAE3BA44137709C4EEBB4C2CD3A2B93DCED388AD49D33DBB886AABFB9E38F70AFD27773BBB85AE81FFFF3FF60B6F91C615C0CD7E0629A20701802295AB92AB907BAA81A72F666D01972B6C079C75CFEFD41DFFB9EA> |-/f <1C60D8A8C9B8469E9C20DEE2402EB10462FB8ED343E7E5BE065243383879665ADDD6BD67BF0A0B4DBFC88F5348981127AD1490FB5098B3D38CB08864D3DC89FE62BDAED0207BC14B2CD94B9353002C84DC26FD739AB67D> |-/g <1C60D8A8C9B7ECD907F624365D438F0401F823B73EA66C47C7E6F281CDBD29E1DF24F38B45400CB92D1773CBC7D50FCB7995F10368A24D5E58E4D952E59FC7474F76DA6B34C3DA78B95EC1EF9CF6F4F63352FB906DDA03E2A5E4C969C169E59D202129BB858FF2389396F4B948C04E75496FBEB13EFD11C93AA00D90D16733338CEB82FA27143EC77B2C20532B0E3472C981FFF7D331E2727D5298A3DEB554E7B9520D81862C9F7096CAAEF2A0777B1B46BAC159DF161C1CC74E3EBE289F453E0E8DD297E3F240E1B2> |-/k <1C60D8A8C9B746F488E038704064F2AD549380C04A6A0FE30990DAA5BC31572B703DADE05B4968C05BBD5EB0BD369703B503C309CF17E928BABAEEFB6C6C0C57E0A03F1717417777731465> |-/l <1C60D8A8C9B880558B244CAC850BEAD7A1E96744C48B1E144A6FA6A2C9> |-/o <1C60D8A8C9B79676B23EC03A282945F6B9BA3FC96B94A352EA6965D03C46300E822E9400A32C57489C384C0BBF14085A1FE36254CC88C2F26DA80FE4BE81E3FBC64BBB1CE4A5FCE6AEF371492E9D8504035C> |-systemdict /gcheck known {setglobal} if end {end} ifendIELACN+Myriad-Roman /Encoding getdup 45 /hyphen putdup 46 /period putdup 68 /D putdup 69 /E putdup 73 /I putdup 76 /L putdup 80 /P putdup 83 /S putdup 98 /b putdup 100 /d putdup 102 /f putdup 103 /g putdup 107 /k putdup 108 /l putdup 111 /o putpop%ADOEndSubsetFont
/IELACN+Myriad-Roman*1 [32{/.notdef}repeat /space 12{/.notdef}repeat /hyphen /period 21{/.notdef}repeat /D /E 3{/.notdef}repeat /I 2{/.notdef}repeat /L /M 2{/.notdef}repeat /P 2{/.notdef}repeat /S /T /U 11{/.notdef}repeat /a /b /c /d /e /f /g /h /i /.notdef /k /l /.notdef /n /o 2{/.notdef}repeat /r /s /t /u /v 8{/.notdef}repeat /adieresis /udieresis 127{/.notdef}repeat] IELACN+Myriad-Roman nfntIELACN+Myriad-Roman*1  [19.9756 0 -0 -19.9756 0 0 ]mfnt sfnt58.7563 51.6885 mov0.297028 -0 101 -0.297302 -0 (Leh) awsh88.981 51.6885 mov-0.000274658 -0 115 (rstu) wsh121.042 51.6885 mov0.000534058 -0 108 -0.000366211 -0 (hl ) awsh141.037 51.6885 mov-0.000274658 -0 128 (f\200r M) wsh184.819 51.6885 mov0.000259399 -0 100 -0.000274658 -0 (edi) awsh210.767 51.6885 mov-0.0777283 -0 110 -0.000274658 -0 (ent) awsh238.278 51.6885 mov0.000488281 -0 99 -0.000274658 -0 (ech) awsh268.321 51.6885 mov0.000549316 -0 105 -0.000366211 -0 (nik) awsh58.7563 75.6592 mov0.219055 -0 114 -0.336426 -0 (Pro) awsh86.4282 75.6592 mov-0.819519 -0 46 -0.658386 -0 (f. ) awsh98.4941 75.6592 mov-1.09714 -0 114 0.0388489 -0 (Dr.) awsh121.445 75.6592 mov-0.395233 -0 103 (-Ing.) wsh156.866 75.6592 mov-0.136108 -0 69 -0.000244141 -0 ( Eck) awsh189.246 75.6592 mov0.000396729 -0 104 -0.000274658 -0 (ehar) awsh226.382 75.6592 mov-0.000259399 -0 32 (d S) wsh251.653 75.6592 mov0.117371 -0 101 -0.117157 -0 (tei) awsh272.83 75.6592 mov0.000305176 -0 98 -0.000366211 -0 (nba) awsh304.91 75.6592 mov-0.000274658 -0 (ch) ash0.890196 0.619608 0 0 cmykIELACN+Myriad-Roman*1  [19.9756 0 -0 -19.9756 0 0 ]mfnt sfnt58.7563 51.6885 mov0.297028 -0 101 -0.297302 -0 (Leh) awsh88.981 51.6885 mov-0.000274658 -0 115 (rstu) wsh121.042 51.6885 mov0.000534058 -0 108 -0.000366211 -0 (hl ) awsh141.037 51.6885 mov-0.000274658 -0 128 (f\200r M) wsh184.819 51.6885 mov0.000259399 -0 100 -0.000274658 -0 (edi) awsh210.767 51.6885 mov-0.0777283 -0 110 -0.000274658 -0 (ent) awsh238.278 51.6885 mov0.000488281 -0 99 -0.000274658 -0 (ech) awsh268.321 51.6885 mov0.000549316 -0 105 -0.000366211 -0 (nik) awsh58.7563 75.6592 mov0.219055 -0 114 -0.336426 -0 (Pro) awsh86.4282 75.6592 mov-0.819519 -0 46 -0.658386 -0 (f. ) awsh98.4941 75.6592 mov-1.09714 -0 114 0.0388489 -0 (Dr.) awsh121.445 75.6592 mov-0.395233 -0 103 (-Ing.) wsh156.866 75.6592 mov-0.136108 -0 69 -0.000244141 -0 ( Eck) awsh189.246 75.6592 mov0.000396729 -0 104 -0.000274658 -0 (ehar) awsh226.382 75.6592 mov-0.000259399 -0 32 (d S) wsh251.653 75.6592 mov0.117371 -0 101 -0.117157 -0 (tei) awsh272.83 75.6592 mov0.000305176 -0 98 -0.000366211 -0 (nba) awsh304.91 75.6592 mov-0.000274658 -0 (ch) ash1 lw0 lc0 lj4 ml[] 0 dshtrue sadj0 87.145 mo1133.86 87.145 li@%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_res/IELACN+Myriad-Roman*1 ufntAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.0%%Title: (title_de.eps)%%CreationDate: 05.03.2009 18:30 Uhr%AI9_DataStream%Gb!R&kB?F=OoTf8J9M"JR#D),QlHPn(i[7k9Fr$S9fV>&q/N&*<k#ArKF"nrk,uD+5<u@9mcs(0?.EMoAsU'JE3^<nQN)f14TUEs%H[K7o3Cs%lra=Ah[?`-KAu"(;pA-1E!1NbsiBS6f%s^`RKS#P2bJA)A/@P6EEklKLg#[%\hF,WAIsMLo6Z3B/HBM<_j^JTn+9#D=%H:(J<3U\OF:ReuHC,TLTqQ1*g)7,/4cPpK0+\&g"^HDZ#HClk"PN@D;/Z6)n6aW6VC=_,p)rdPkm+0e4"q:bol;i6`k)C3P`]Ns\%BK\RZQfDY$q;-O&c=WhS[m03G]%Mj^`QP>@->U14kb;AkbOrNW22AjjqMh5]RGDC3I,*!DbW9L9+qaIRYD[Di]Re0,*meQnkON(9%gC9SIX>aOAjZ,HCTL3#_\]JZsJ9I;<_CFh4]A%.gEss1+-G:RPKV[Sa?mtC9;>:52#`%A+KVTeXb&%)k0]U8e]>epiEj37J=MX5?%#^HMa5NN?ig<%'JD./Ik]$pY7QOK!b=T!^,9*N2>fb^Ht&NUO[qgBW+fMDCsGJs/er\\-`%BJ&!9GZCEk(goCI551BQsO^#PQ(]K%:m;KSOj>!WOBu;4(Le=?Fu*b/]U5@gpS4?)/;/f?OI9OaE*s$Z*l8SIs.dNICkGc,4_D,faii?I+X1Y2PM@BbWG:lDB"d/r7ColA%ZY1ptnA%1q^Ye>bqEsC1^utC>F9EaI(^uf]592Y;_@\RE`'":K+ePQOOrkWpL1'PB^r3<s=PMPU17g%kSkoDPKXmY+<kc)8%)mpU%7m;D6ejT'8pYZKRrf?RKZSMSlCq%W?Rh="Xp-F@&P2:s@$mNG'As[SG9L*XL%$8R4G0Fb_AtKC%nIp.q[k`B!HkG@V[tO\^Y\&hS%&gYK_hS0m`7>H`lE5KEAR;@]O)BKPp+R.!aeg'b!_%-1qitaNW6e(mC-K80QUW5:W@;#d?b8MdB1h6MPoY`ZSq`P@8^]S6=RjN_q%?Y(Ld1;^(*(Ari&1Qf&4#]1=o]STarD3o(nV53KVBY.f1Z=BBlfVUa8WJT76D25gpQrt(i(a-^-"2Hk#feVk2R`1"!?j>0=c">1c%=S:5N"03LFh>da=m*>Z)CV59#g5m.&=2=jU5?e24oT5L8el./@K@$05Z.ohW&Wt?P[EYe^q(W1?X_,2iI'VC]NVJ#'@2?e/Vu55T%f8flT\K6bJ!&[n5kjuHr)=1u!$f@T^^N7*gm?e?OjDaq`"i:+L0^I!R8"d$,TJqK>KXZJO_rC(p@gjo2`W.fe0r(lGNPu#VRnZps%k*m)>;'O7;7[bP[m[lVH6o;1d_N5%8NrQqK$n0+\q(F9mr([*[rGagmf)u\AJ2@;iD;irWh.'MC^KWA]8F]Fe`f7`AE$c,R0O]u(%TP%^;r@E_[5k%s8qlJ]00Z!h[(MLDY=me15+snKc+jms`F./qa]J-iXMjcEuHW`tDAYDthD,b!aeKjYZH.U[acYSMP.@=cAd1EG0%AhtSUDmKg+mg[j(hE`jRB"\6%&F>]pGI35%fe(4Wokk6@G74:e\R;;QTEjqR>'\=k"8CX&"scmlr!3g9R=j0lIPFqK73u^:8ehN?%f'kuH*YPcE/-g+,ZTs'PnfZ3AiNge:r`LtQ%k:+iqq4YsHj&A]q:kRSn0LV!(*hHJgOCK\%H.@I!+s@Fd-@>Y-7V]_9a@/:46b"E%PL52:8^4N9-<BHoE&Rc_0EHu6`7t??3'u-Wbd_:D;3:hZ)usgucnRjTDZqflLDrZ-9]VSo[V)Hd5=`,cg]!+6N#=G=-W/nAcuHPj%cb.#_FU@bK:2I16&$Yiq!e0I>3(S.Y*`qPs\6GTmi)+L-go\_WdF)RGQnd3>gE1KK#((1H0QY"6?d7pVn8!1;08BGMgRG8a]'rm=%Ubn%T[Jhgu8U-[#62]6f9t&8S5g9=mL21jB^"`IP>Kc,%(n^_g0MLnIr$uO^^S?iNIUQ)XYaF;9M//dN$+-K-FhL%Um2k3Es(:KJ%*_78%VC)JR%TK#-4gE=nkR:G$2']hr^[hCC+A9AR-_%Y;NKRZ6M";$e9_0?&0BS%`jd6Vs3tepZ?h92*0sft61.^@?&5VH?hKl"'%)D)VAbTZ<a]UqVL0'=`qGFG!c]bQ0T]DX2:Q;%Hl4R4SFCGYrq!/]>=cnFlE3D3h2'7^8uhj:W4O%5fi*rSEYI=f\8m6;^79LNFm%3YD@#NkubO9,JW<fUF[/[u"cn^g:OGVkgk8!js+SGfUeSJ&!IB\MpgbJn-9gD*nZkOnl+l&oEf@J)JL5I/&DfrXGaCKDFPc1_8Qs%[g$aE"ptNlTpWq1@UoWAWXR0H"\JXn$Dn[:n+),+J7!Z8g%Oaa;*YYIc":jdBu?^C1e*JV)Mgacl%A%pmsunf((KQ9hD[W%V5]NR%rUsTq4VpA3@&djmEU_d)6a'Ji-XD>;C#T>pC^c23+0fVhJbaf*T)k&57h+D3=EtuVY(rNA?%W(dP_$PCYaXEQs.fGH(Gld7#';<k%W](nYJ@M[ddS+2%AXi'pm7c3*./p-hC:R?Ol2d)[J+A`k@i9U$%p'DtqjX5TA[%],fjA4(UrqilDS%_aHH=m2r"l-l"n4dFZ-R.o%4KHI!B57_5IbX0aAtX)MrF<XQXY=C(^721:`H]u:-*Y*g+g*4407I?N^G+=lOb:a18'2`N\klm?!$3is4Y=J/=u2)Q5N_K^1,NpF%,8T!aN9N!Bl_/TSr&3p5!0*Kr>&DJ?FLu#k2FUgE_I-S%X4W`S5en2_DFmD(E3Q;AeGet<(<gZ6(B$p_4#OLg\kufHc;=\L%km8"%N*)M9_Ftch_0!6B_Ru65)H$U!-W`.A#6m!pSqca3Q]+I%P2[Fgh0&rEp"tl?-t6M687'2kcZc^ef]40X,`>*R&lL%#,68Hn4:9EL%5j=&JqE5DN"%H&@drZIL(I/]lguRXH#'m7=P8R;-r_`#"=];+oXH?r6&"$5sp^2?%NtS+-3M`F(V*L%O1[s#XPhAUi`hHN=\[h%D%,%FDl"/5+tE9k%9)DSTulu:dCCk48+1Ce-B(!f44s'jP0`&p!T0+;HV's&RAY5^4$GLUZL]g9:o<$.Go7[8l59Dd%_[XcC>J@(p?%G?Z+U7!cQ7EP2%\)8l^:93MdR-F;["-XrYjnk[Z*m6<+]>j]"Y:%r#.od2"o"4F(Hl3V82s1Zlo[h-%N2j00eg](.;J/ZNH5g0WR%*b)C00uLK5&7M.kYPnZ_9Zk0+J2fe*YY>)dr1pGJ[/=QGK$qVkU%qK1TOSf^r.D'H5J5AKph9*1CTIJBiaU;b)4hg_C7LOgqrf`F%koo;GN!7jC7`k28I:'clrYH%*rsu_`1]$kG@VPa)]F?d*al*1[0D:&JT:a`L24)qAdf*$`?C6U7if+)_aJ&G-@q7e'r(kX/0JBf1%d9gcWKN=MgQApnY19:@treDj=6ig6lf'A)W8&.Tka1(t20WBOtL>*dpF5e,;09H'uiAHt6omjk5DZAaK+2lY.oFU0/[Pn=PkhL/G%c5ak^n+/;$;Nf&d00lRjja+uV=^$u+(,PKjgr^[n7&LbgS'tro'1TX=5,aFi#:4H"Z)rrJ,T\u/d!6GnIFIesYqK+>Y6LOdU6i);%=8<K*(fX5a>8&_EQD-=Y4BZ'1c#SH_dkEZjqBg1u3rV[LD[<hs,,\8'Esae#:*ENg[)TYR>,n_S=d,`4O*7T\qnOuY#UMl>6``1P%Yh.h;DP>RLba<l71\mE6/OkZ#G;rg/7n[91[$kiTrQWoe3Lp,N]S#;I(37SZ'I>T6eon^_GLELNJ&.(jgW@2Im7(R*UAn&lh0QTf%GXoBbJ>4V;U?BL+!;hnVV7kHn`F>eK&UIcdL-&[%e`d-A?V$aMl6?LN!B/.u5WlXppF!u.s(8%@6pUSR-8\gGBX#l%19B+nl)N<N%\(G.SRSK=i28F+j4^Opt\,#7t;&#BM0]39D9/7Kd6Bekk=KDQ91B5(5;Pn-8<mnP"](X^:ottIHhdGlC""eNbp?ZXBc*'e_3*C/-%I,`W3I'(p`*Thk!qK)sM<pU]T>_,e[6,?chKb!og335>n0`Pd#W8Vdo_lWYC,<6%])t%`)@tRKe/:F^gc$&4iZ4O8l&c0l[O'^l#%Mn@BX40'N.N7l);TN4Ft^fa8@hG>N^eQPEr>&Ce+fg\7==_]c(m3J]K.&,BeWmn(f7VFVE)$!tW3GPMOG.BXn3k"-Rls+1^Cg5K%%iqH'oS68XT&T!UfBJ$RPk0p$=$4)`P47Do$:nUOpd6Xk=TU)A#L,moQ8'u.&]:i:#OB]?An$3IgZ'gOe4adp$)WL/3kH'Vp%4.N5%[p<q$T5<[R*H?b$Z>Gh"oY;5/0C"JH_/(^^V-5HqKk@aB;iX[I6%eRNH36<2\/os_lNs2pUYg"n_YRoUr\(^FRM\AnYd,g6V*[,N%f<JDD:q8KS>FSNW[A_Vfd$laPXFop>V*E#F?o8mZB?;'/#)eH^_*a^ZA0qG+B[72iC"?K/`WOgfBC)\hHn*am1g=fn>`g2@`Q_P_%/oDjXmf:1B-X1$6H0Ki/F$r_g*[#MmcF;:.%Wa]k\\WTkZ\*7]'sQ`?@\fc"iaustXOj.@;,B`s\)->MUGrA6QNr5,XRT=HV*f+O%LZG/1[8\OX24LB%R#QLC"r`D/oPe$VW"$,"N`p:\Z::Y2:1HW+(Gb7(Hp]]qE=J>Jl8g\d*'d.>fu?'&(M^CH:0,/e(HS''2++no%lOAJ-?L,'g8n`.D3ktQ'+,0/UAnNBZ.UR*4oi\MY[@J*1D7*U])U1\5L=Dd4[P@,E@[eJ*:h&<Cb+ln7IG^kH"E,ae/Z[`[GC^<n%#u>X,B!tqS#BC5^XQZ?B=hFWO`F&(MZ/1uIhKN2qA5_aQr$OO3=RHP4\)!@@oXpZ_i,^=h]T/k\Mhq[g10XX`4f$Z@6)]mC+2V($%n%U3k:$sr!G*=ka=NB`$`SIRhC/^f4P;O)U>1S(rqe]qMHE*k%I\rO(ga*.bYLb\hl`*!^6[te7_&<cr(Ups4YDiM;j%dpeeP3X1%h#=er_<YAMkJ);er6B,^->RKehY1$$h1QuId*'nYB=aB$^1_^?D&<.C`M\En<-7/k]5hfTY$`mm7j]`U<oLYpgZ:n3YG'/k21(7A%1-aO[:["@4U#Z#.2k[1#WHckbb//]QDmGpRB*k2Js)R40foklYIrEb0ch2l1_cq&h1Kbs;G1Rj$#X$eH5Q5OOT!nK5?("4W[k!`O%4VtEJcC&pf^]''!#/)J^1i_VIeK;54MBmMAp#P6s3pGE11G`gpk#o;[GNil6p(*/?Oc%uppe97Hm,]a_?4:XkfA/fQ#gGU&-D;!U%)>V_H6()afUQbauOLsD_!89at-M6RJLXA\Zke[*n%sN2XS&rl@of5*dG1E&(QK-T#H$:O<JTWDk"KrK4m'>Z/^C3?$FT;1FK2!nu%0VLn]H&\-N,PW1)=s,pR1/g]i_ia*)YY%f#f+0m9(V_P(>jlIX9+X8M?mrOAa\)91b's9APpjS]:\!%aKl*E(kJ(/-FIOlbl+W:_%6mD)sF33qm#Ntb4*ZP)BG48*2!sX"X9RuF4)J/>j!IT_+T^6k3e;3YThZB*;Y)?/J@l?o.n3-P.8@NWSY2"i3r8i8ggJ'$IIt!:)%X`)PM=uK=*NLH'GeDF>LCpI[Nm8fQBk'M(BT'oR[Q]1qr>q=ub?b>"5Difd7k14Mq4*"5L^r1FFe/0gWrkcppGpQas3\,oS@p!/Z%_]tVHI9?I8b5:6l^@_EW#pk2^?7OO[?DUm#gYMkY'UY0DJR=5B[=nk9KUl&bDGA^[qp7C$^Z3EU=nk\d0F>\4j+SILLXYY5/0c1s%>0/KL?!)P!=NX57Cj$Xg0Gc10m]4<KpR]59'6gQfhZ`nUi_>X,eiW9/l,;8+aO(UT2'P`1I_0W2ItEYohGs4a6qW.Bcs@n+e'&=7%Kr/6Vc#7$*f8f4m-bfu,#1&9Nkad0&Y!K`XH]c.Y.crn^IRJ$E,#bA%2-JD1LS5)89HoYC<81?ZdGgITG/\W<"Ig`6PB>4PYYR:6%HGNIN`<s/k47,WS^HEpE3%pZL?rY51!hi<7;gZ=ha%M\(gpkfQn\&sTI^d4?B!uqeVHZ9'2ZTT3'EG6*mc>[!\FkM=dZ)Y8%:4Co%9b3Ta$1&HD7.8N/E,:@SB&O@D$#fhYXi7ILMl]s%r"Eu(g)c-Dp7,48Y!5?koI9Q*^4!d&^McN.!de:!Sf>s=5#U_4\#m`XnWEl*%?1]E.d^n=)nq62a/VgE^P@^/N:Osn>$HnRsoCZ&H1#8QC?9n"\1K)!4['SZ=>`*s@X_dG5h3iJVDXMBhq0ji4LIo4/jXOh7;g:q(%Pe=+6WmI\r7>jsa"k0Xe=7Xnl#rP2\!UX.\*i].=G=Uggo*##/nYGF)SBT?jTefERmF_bNpe!L067^X&?Rb_oStZE2_48V>(G\CL%rU]E7AD+H,S\>NgS_I$^7._4H5ejQH#+g+'m3QZWB"<'j!"0.j^qJ)IdTne7fhj`OQ5#naAb,2G_EceP(^/Tmn/LduG_9c:ZVp+W%T*sC4ITsSjL;O(NQO4QCFP[n]i?hgiHp02$S:E.#$LS(B(\AmV+W7qK@"d8J0oKZjoRbq#TL^'.U=9,:,L0a'6d.]1P*1#$^Vd*A%%8o,9!9cl"r8T-CX^EIE,U.fYV`-edjPVk2C$!dbQV$]]HF_Bh]KR(`Z(b[4^NJF8$&g/e(E#7J1b\8&[V(j[BTjD_1t7nj0u]=6%)6f`XLtmooY=?V8@8'E5?KZN41+SJhN^=MQ.>nH+_l^X`eu6+\XmE,CD+N$i,>`6?p^OAjah#R6,C,d7p8C3\;[efU<7iL50Cgu3%EQ@Kqg`0`hD6%WC7k]aY$bq\;iq:2bFV0UVV&HB,.#()M-;BjGpP,pAiZ#BlG4-@O.jm]-8]3cFpG(sD&9640:Din`?I2d;`I!r3%+Bd1as*5u+&CBhkfFo3N0_+LZ9LjnA=<cG,eT*7LhV(3cKACYeC!='II?=kV@QDkbb<1392n<rhpa96D-7eu%7.1Fule6NK<'PE:%WnCZKL-'HdO!Db]W:dIV'D/OnfT>uB+aKW)Z.UATT3^J?=/l+/Uma]KbG6)8>V4LmXSX,LkENUq(H-9-O6!A]pO!cBlVftpXrJNk%/\eCX"*][E"PpFT@c1.Pr]%qXo-I+BK2WOM__lG2cqFB"XX)-K"rlNi)@(e;o>?KX-1T@W9VZTQ^o.OOle>6d0jQ<p1,bB=Wc(<H%D+!9]Z'N(:U*Df]gR3qr<-[P2Qaent[SAiL_:sABle?GBEPN&'5fhqHdf_F6!-,]B@ff5df35TSRB'kM2X%s(cTJ$fS=(bjf+r)\%`JR="J#.CQ)GQ%W@0RHbY5B7(.F?([8CEDok[de3V/+Bl+ElD.S-CJ]MO*qQi\M/T3e].^bfk\!%u$FW5>7r?.o*2T:boA&MB`j]%!2&'$ip*NcM7@$o7lf5%L,B^TiD.kH=ipp:NrQ%D,?^d?c^"iL:q)tA$Qs6M5N&**hl#)ZT2/)oL>;1eX8h:8l$=kJl%9B1V>A7d%Clg(9aE019qTa[7E42-!mUUE!T93fTmUaCc0N3ej5J7,g:ndLB]Ir7]]5QCAR>4qfEo.EMiR"6DT6[H7lEm<LJ)ia<oWE%*5<Uo3%OAg[Zo_Rn6Ye7Up6do>U:0(HQ=`IAMf#RN$ZE!SG>gGMu(/jJkca,k4n=%99`5lKU)]>=l/'1X6>F*(-XYQ`3J!V<-p[cBK>D%u3%3YJK<KEm+abI^^=X8>f2l#?NN=hT9^ipPb,A5f7"kW17ZXKTs:MYB2jeE`=a2YuHK:.V6(q8JRNiQceAQBEV>^NP(,du,NE@,%C2%bK3?o0_PCFgq@e`IEP3t6bCqtooA>+?cbR[mZ!Jjb>EGgR07RUcUWW#ci7Q26kQ$SN%eBlh%::(:DV!KY^:dt0jC()-;c7/Gq:r/%okh:gVM=F]hGkVP\`#[1k)%E5L#ui;P.>DnRcU$1V'Y)34Vk,THG'\SRI=@7_c*O0A7j[&"^mf-;=00'5)6oDh2_.1#!]Plr\>M+%+Ko2G"j-qM)n`EW-6d"HF2n#>nNN*$0UQ@"?q5e3ap>[EXI=1Oc*e#!I<d0sWV*lRYrj$o/8+%b%p\1.g2E$7+ZD`TeHNJNIFkHC%o(b1FSkhO*JX8<6qT2k^V].3h!VoMXR41!u9,/1BSD4^enjh4:Z4bZH#&XS!3Sm^SI(4<Gdk#UEDqhf7i%$Skhmdb%G)'@&DE(@"%Cn1Vr7':!oS*#de2pQR3#;OrbjB^'h8F#/$CUNG>3iSI8m8iG]$B%$T+MUDk'52YSZ3N8q=oKhh3<11-g&8bt3Vr5,)FZ$^V[$&_%h!%/.?#lr>:"CrTML@'@54tAW!6.?dK31jq.)p?K;sa"35)s-:]R0HL!G;g;l"6UX<Lduu2Uq/]jY2LJA2JDA!D2kO_s/;bi*4T>%bs#`HOp^L4N`jr!%oAbq)R.;^5DaR)!@,:.hU`K+VbpTA0C7"W0R-[o/"*L/goMD*Q!eJI44feRW;4-N:9JI95hQ'>HBBU/eYn9M%\_;).MEHh'.U@tp/#cW_-.0@#eHaK::TZdB*TG2?FQdN8QlAK.M>THA]iEuHo"2?<5jijMl/b^cW?;pA?,Br5V>;#;.Tr(a8`DAd%'1kU?_).^$V*g@L<ZJ`^dF4u01(%p#V<^H+rA?3<;r^@3k)LpD!AmN?XQkencJR,EX5#5DF5'Is.d>ma<@[jfN)S]c\gqcnM?*4S%_hltPBW1nTfD7>d.T,fuE8nji_q^L_'hbO@pK1X%-6Fqar!&]=499<shPOUK/W_UufSSPb0'@'[4fRZ*mo6$O_k1!!Wj'QbB10U[%rCbVibT(/c3$d_12C![<c8UetL=]inFHgOP>cG'_jP9]#545qc4p*[Ns"a1L+s=/?\04"@JH21RB;RE+%U@:t"\#O^j@67/(jk=W%/hX%.1#]>)U:"C.Ut4.gD/Q^cHW:>0!`F++5_i0SL$U5PgYY2%+kTj<XFaH^H2F.oFC=s/.jg?q#tdZ4a?%ZQ0CKh\Coh"t%ptH=%q2)W">E4PaOKl$2.=%`8Bm544le!_$7E+/+NQV%EXdA**'i1p6nP0cP`iDDpBh1c[O;mpUZH;_&J>_sk(^6c&"ZO98lkJZL)WrnZ%@9'?9jSahI4^NmNZ>Ac%o:Z/"d&s:5l-UQe8%eoZ.q("0G2Qjp+`\QNE;;bb[VdZP@aWo/L<8:tSZ@.G5_geaa=V5fefmi:ahe]&%eMim<[+Bk6WjMW_S%G"XV$jT)<,AIEpk0;r(TtCIpNm4E"e"tIR>"NtfT<o3X_9=QF:&Y$mL[-H6p5%<:\'OqWGr.n'WhO`VZs%Y%$A`\SX=/>Ac(4e_3pF/pJ/df)(($/;s1pjErp>N47]*0BC8&8Q*f1YpL`Oc?i-PK`I"&uFV3SpP_=^,mXl_Irb5#s@C\XD83m5Q7%^@+WT2'mT'Yo:?mXNK/+RR4?&h+322`]f-d\h.,?Z4_lXiC+>P2m6i>OkQl)/O+JSKb[>/.1b<l5M&Y5<N+<#acr\ll][Pf"f?e&%a8FDRZcWo+)g7=dHD,sc-fDUJ98D?bCb#/O%(]:!abBIG(\k4_qrA72>ZGdS%;S-)lJGTF>Ju7s^sQ>db\Y!%bLu5Q_.KNbWSb;T%dP]c\h@g;L&UHToFMkE(`#`D4K,9`:F3t-ZT3]k,qmDCA1<"Wje/dK2!0SCFJJ^T>o>$p;]0\@1\.T\^j*E-+@"cfQi/9L;`Y2oa%i]=Deq#Hhi?o%`GE#<tJrd"m+P1^HlM^r=O?)?OV^(-)VIO,tN#8OG]$GG3,"P^<\DZH?B:I4?-ct-^H=l<<"M0j0?NT9CU=1S'R%V46))Q!C\8=r;/i"G;2'Uk&8?0_+>=cOI1nC!J^^"sVe7Gr!^P"El)1W_Zd]6N''sqS$8\]*f2&+hrYZjCXSR9mJ&WbH4cn(sM_Y%Bb[O%p4#efgMBe$c_PAC-c"K,=0*X"k?7WEE&_N"+$9F,iVREbK>L,pLiIipQIW^p9QRZ"r;3/ecC^!ZP)'/j@dku-S&K_7UZA"%%dG(#kGPsItOnnrMJ8SM+Fi!c_fcGq1[s[XkjamY?7RPKB=-NAn@V!/MR@/hF(#Qp2kB(3:rC.@i@#R/H$Ltu@UP<uY`]iLBZf0:)%AD\S?L^0R<6NWLAB=F*=_iTBj'X#h$D%bN][tmQRJDqO7V&%a^LYULb2^>U%g#h6388U!Y-M7;/.teT)lEGo+T?L71-CF=A(;WhG%[2Q'TY$p;2\1Kqt?%!m^27)+IkH/k!T0BFdp.?[%Y#V!q./[]Z"D$7:q@he/USH&eVNBCR'\G(H:*j8gp"sI8&H,S0;?IYkFMHr*%/L+0U6Pm4[W>Me'o)X=6;THJmb/pgA`[S0Kd^.dMT7kC7L>A3dq,i9'oqJ2<3hs?iOK)3r69a0QM(\5+H^F%7ln&T9jO!4ge]+'Z%"H'*/*?OQTbR]</hB\B[XbZ7JJ>8ra\af@U%1B8%le]O"%fD`&C>bB&1rKMao?PT#GncB!=*`&&J/;A?iS(o_6&rOJ#NF_607Xc5%HiM+#"HDuql%[SJH!oXh4!=7%b=Vqc+7LZ+Fla]M&Wd$]?eCXE?0X*-Gklh&63&<k67:$c'oMS:Qub6,(Pbe,pRpXU>[/N]DdK`o%PaS.A#\*F:-pib,r[D#.KtI=ZaLO^c?sI"2g,XE%Q3opog8OcBE]+g5UE)p`U)25C\.D%tLgRT?P\7<CNdY6:c$WQVq:#>I*)8s:%Ap>_,75[M+2=ltQ6#k`X-b'$JK"X99jha.)2sY:_e3e.;D$`5M)OYl*Ds5Zc[>6ARXHgn:B]LHt#r0-E8Qk-o5:dVo_9[EfB@OLQ%&:`#i6k7`S@'aPgF]2'=7/"Vo=U9r;?S2Klp=;k]i1GM4[@YUiK"XeIORs).ViHBH5Bs6%C5b11=Uh8b'`e3:=T;^1VjRYGk0d+!%mR;NWp%C$P<IGAe['sUM5J)2jd@8@%EdRS*)U'$An>,lepqV9G<m0IL=CYT*-f&//9./5[Il2lL$`XlRE-K#F(N\Grgk!TW/eC-%%3)i_P\T_&R.Lu7;CkLJHCDle"-7;_<_DF68"Cj$se.i!m^pm^=4t;5\3uK=XONIWW/;.T"g#ZZk8a*I0A9o1+8\d3#.Up9gAT%Hs%O>N`Uf!dl&REP=]Dn*)5k(!Cb$hL7i0@XiW@@"bqEm*7mTV"Z@bMPhK2*Z"58GF\?p<Rbl?HqCS(__PA$BS-:/@]\<Z9\.D831d\%TekZX"ea_b>p9g^`]V)(54m(*hEU4E=B+6f116rsAiKKN_^dB\3)rfY_tLNhe_S(*Q6W[3ai:tt9[SRK?Gh/;Yb%p+as*8hITY1]%g/f64+s3\kL+HCsZP1u\Wth7OjYnHo,l:*mf(qHHD'&M-51EcD'7El3:&7Tqf#rM\bLVe:@7T\K=aTrl8u9G@7DahHbCCSLK5>FP%Md^Ne<2@n)#Y>+7"WJ#XicQ(&[h%]%2bIm'>S$6dp4".V1Sa&P8O&&+;f"?%l70//I\9)7jc20jY%Z]'XG9YZT@t:A3(i^ags2&O%cofKbZb7*#C\i\rXG::=*`;,&n=6nm,[3p.TZ#$HnQjM>/?VMXC:?u0[<TY2d\hrMndlWD18VK;5JOA0NAca(?=@dUW9/ks/dO\G%.*`0c)ZOX"mM&;Ia9r$AdBNiV:kftib_/J<rC&TSc'8RqVZ(,n4$a?pRjn7m&LlQ6M@Y*&YV-uD&'j'Pe-+'5P.Xi\1>2=]d9@;t%0>IJ0pVTojm9WUrYpAuTc<Us)H':+P/U`(Fc?*_3Y[ebMrf-@N"dS`eP&NS2rqKDKk"E.kRG92gS<g;sG<L$bQ4TY9Y.I0ma'r8\%r[dK0hibr9n6.F3mdS-RV@-+V]sN@$THDlo?Su;4-14f7Y*Yc_0<qen>HZ1jo>guCTDI@Q1n"i3lSGY$EBLXgji`sbD2G;5IUKI=%NP*1V>bmS8V%.l)c2`F_*'^LhB"a4A?IkaTE.oS89fjDP"DkS]IIj;,lumW5_J#p*1Gr=e?Wh"Kjq?O]&k1!GIm\,q`(p9S7WY9R%BkRCprFp"gHM8HTF08'hWQD1(G23J=f<mXk?-iAc]6^ApbK&cAV-R0ge7@BgTC-NPB_LImD6C%o^`V1l2"9P<8bsOY48$)?a9(UR%^mtNQ/*;.X(^=nF%EG5IVduLoRa^IWG\sQAdqQ3b@9oP\DmFWdriD"8X.gtQ/,-_qC7VLlIsXJae%3f$=ArRC3ud0S9i`CYIU9ag%mI_9Ds+i^Ym'!G`_ghEBF[;r)V6\RR:;!7NWQC%0%ErQg>MQ>QVnI69f(u,gBjhQXfRc<;:,hDj+79h_R(^%rr6(/p;SCQSQ$m-M%h6,9h?15KVX2CP,pel2@]jO`q`u:t!`N+=`[sJXbGNs*rOG-<>Xub%4_E;<#5N\P2<jfK$L#qB%Zd[Za)H5/NPTbr\fC+SlTbeK\%O0>@%9"[!Se'L_7l,HcjqRB;T*kS/q^u)NP?ouV_:(+@&h\0P.*:Z<Jd&hA-Y,1AiaIc'#eN,"Wo+@bNC%rk/kpne`]l;eNaP*`H%<:@2'H`q\-bI))_bm.THZdW[:?h%VTVDd$:5M7MF*?(L:[`rRW,Ga&X$b;fV3oslum^C(s&jKQjQH>JR/YV$82.Cp;>99!.S\BDV%DIHU]c1Nr2O'QOD3[*D:G9-?O+3Vm3A`0qRSXQXCDSQ$L&"9%aUGLZ<7]2kMZI;DBeN9nDY"[E3'A0q^>eb]*G0Ndcg)VQ7hJ(bS%=g&5+.I,E:42hO&!`uDL.G%QZ5(HD'InHlNUD>LfVpgH#dHP!s1gf9<6/('dZC*c=Yklc/2NPFln$0aM(1F=>*ZEC>C87;5rc(AI%SSjWD"XCC;2dLUUcsPPk4d'8P#4Y+Do?RTiWHXsL=tMYP*bn'?Kq2,=h@Z>\[aQL%nL-FU=g)$'/XA]tP0_[YZr;:_YgD(j!-Lp%%c1K!Lq>6J94/(,MM\<_hFl(*\eG=Pg]<KYEnjn/2I-MZ84do/4AR!I0T(8C9;86CP^.mbM6T>%P\Yfg7;l($(l,t,pY;TQi@99Hl%++=a-T0?@hA"BOs)mB$Y%qB-e2uV9U]D3(rkWJgcB@NMn(aE7EAPMd`p!uk/6ESnsB91B45Q9oFEgr1Ej6TOZf`(KoS,/,ie)7-0%k@s0.-U-A,fR)PoV>^,>e6^UQg9LP4e=Q4Jl\moak1_$8'++'(rYJ@+qrsYqoW3[".MG**gU3V:-@AJRVmX9Q9F#(TgXWU1q6oD9%Pn!4Y]5-NWRtnqHJ(ifH@E_'%\[hY6$F:Gl$3U_FZ'g>S$JogcRNoNJme!aA=AQ,_iBD\I-O&6)pt/k&2l3etir1fZc.k7!8QW55%p/l3Vn>TMc&R/JJnFg!%MY8!>\@)_BM+6\d0tHU3?kKU5^sA2RKg)rZU2>*s&$(%#91OSj`3mnqYj^bB\KX,5/M^Sj+hY%A`80/X%M%N-^UUXL*?s2j1UQg_r8it"XN^fq_CLlUUBlr).'Ka;1Qu&p,Kp>HG;e5')G)GXV1#H\b-?b9JUq"AeSZBMN,=QQ75YF-YhVMR3%d#58\Ti7Sbe%cLBrb%rh-LDQlpe/6JX$Y.5fdYMOeN1ZM&m0g[s*q)o'd:)fdqS>!W8/oNr[%E.:I.TDVs%i;g<`.SA*$.];kB$n%SO1&j2s@eVpuLD`-0H:WW1>S7b4`PM9CggT9cJV=<@s>;^ms/.p'kHjMOMtG%:_nMb9S:N[k)AhP%B:`+,a9Aa!]Yf\)^?9j3.kM%3p2o_h\oC`+4(pF8Gl!I.>Rg*H/,`X2*pu_Fng9@pr:V$GJL5o$J3lCdT]c!$eL2U^kllg]FS,HiZHa6`G3W0F%^<X_bC$69k:sq%4Q)1?9)LA'r9%8!N`4)\H1h7pprH=G)d>m!+>"US,&cTB\0%#o+j'[:m%=\)bsC=9;!qu=NW+;rI4j<bC(caYmJ.+P+jiS:rmQ5;%M0?;\r-UH.8l^@i->o9-<mZ#$@/\IOI$NDBr;:eDN$GA!>SgOtf8jHkR2:uLOVBm1/3RC1l)Oho2]YB=m?5VAD2QA4Q<YW?PSNe]%K6\?k]5%T,-0oRsk!rSCLJc?II7c8*$-\094o*EW;pK^[9%G5,ghX,8<pSLINOF0c6_H,D3U:,=hHO#0gW*S@g!XHbY#LFZ]<_NV%IrGe*ZYSL%PGc0=R>O&[f%?7h5>Gd)SuZq0#//s:-)46HLJ[s:\A`ec$cac+LFHlTc\;<rXP@isYJT&cT/k5S'9Z14*h.4K8f+q0%N6Z@hT8)J`OX'.kX[!7A/!!#USs7OQ3MO'2+S^d`s0O5#7;(I%pI>85giXqoe[m<BjSQ*!r4Z)OCS0I?HXD1QM90niNW3s&&0FfK%O@AW<H_nKI'"Qn]3hl@lEab":8qEg0B)>9gNN;MhBZU//eH;pFYf+l9FgnQ.kq!.l'A6Y?/kPSp(1rs,%#^?+o8?mk5(:6dV)(^^%:W$CbZ%N^&Z5QhP(jot?NqOaOqaHWGCE^kM'ti6f@]m(LAP*f#!L9f9Wc\,*W\oGmbH;q6AtcniLK$<El\G8f1ibi-2nD4^n1Ph?%:n/#:1p@&hNrg$0c9rTgELBCeX9]Yg3K-h%`#*noN;:be,U\l]5E'sHE#k:dTrjYG7lt>'RX%8%j;Km%eG7`TBec8eRlCRUI92G%%EZ'APY1t@BN\m!jH)rK=[]6iGjbm"&g_r(7jL>dZ-!5&^f6oPj/>t%Q0UJs-5*kUQc(RZ5@a)bh$q.><\Y5s>h;\^6cn3X1<-6;N%3'"3AQ'PkIC0Tb@(qGGP@Ft0,2RuK>ig.AQg2h&*p";O7P0n_q`nOuacuNn!Q:98+7>F`M+'KWEC\+HgnS1EXSH%N?c=R&-[sUNR%_Qf[fc1u5D\&[2!g@On^?Wmt03OTJ0UPe]9!tna.[2PK]),%6$j^j7**81>Je2RPfKi9jV1i.3*rp>hc76m-[WeE#(AWVU)\8bZ^%LFgC[VsZL$%IUibXEOO,lWN&!]h@sD\bAeH6_`a:nD-M"2nDJR&XP%!/+8`A]Xim:J4k'70A#*0ZFt2'9`e8bgQ-Ps+<$FQ74FO`%p\Oq2lpR$M:IoM<EQ!MSIm-R_>0ZN2.`LiGiU3+_+$e!tC4Fk.odO$pbbCG68&ns]V.>]+n@f*\16(-6p/U?W7BT7`G(@Du%\0Tp%P0^;s1NBn(87\R:GRXEbP0kYH-:O<'7gVML>4hakZDtuWTE_E=krecXV%g8!lBVXfd?Ql*GAom#7o;/fV9h;T!CWP2U9rrVGY^Y"%ci=0`JrYnF7,"^HG3$7$+ZZ?ubOV)73inLbD`k;>);KH4]+-5,R'>o3o8,"LP@'gNZ//?Q8!"!Ye,TQ8hH!XJN.B`$cf?Tp:%=$+%QRD+rimFbD'R;%k+ZOL0o!Hf;lV#R[JTs"$-P[g>PLVW4?Lf*ipZ-?:"-]>g*[O59DK0dBCWH:KN*F0&?N$F)e:iWB8R-T^LH3cM%6GT+H`8LV4T8!u0@Q=mk;Q>2WjAJ[S]HcC?cdC[[1H:hN>rL/1:[pieYnp:]Z1j:gW^+A"4/3dTQS08S'EV=ESBK<Od=++QfG1NW%/k7_/pCWqE3LX?j+?11qBF)`ac<`4F3Cf8R]f_.L32/#JO^cHZdrghqNXfVA2Z_c-*o6ARE:#1JD_IG<J1\4G8hsdFlYC*G3D'1o%Cbj:J!LWS#WBQO%4*sE3N\_SR2fnui;e#I)Vf0UokEilT-9Wd22"kt&C9IXAXo9X)*&=He#3"p&*Z8&$AZ#hOfYr6gBRZ[,'_rUD%H4g)snM0$NM_>Hsj@s!3.:jZ_]?lXoLZ9fl7T3i;$q^J(^VS[*^+;)j`F.6AE,!EprrW$[5Z*Yta%J,i7o-m$K-L)S'l]1uL>!$4%mnZ,B)PY&p<+Or,QA%)2r+'No?0fQuGK,ZhpSEEX](:D=Nk1Cn\>6&;2l-03>8B9elYD`>2-g4TF)?U%)qj$ICoZki=,jW=_3bgW%GMaH@UZCjscp$&C4[iSkX,Mco17V)o,b7ZP;$8B9V7F:(JuQN<2q%OA"(KA_9JC%k8lt(NO_Y;N^V>mQH>0,%^ufB=0\R:m*Bq(i%.ElG,di/FKW`1Y3+mEnRq3*[2#37:+Lr$R35$/4e6cD=\"PT<YN$9OF$$q4Z8.jR\WY41m>)6oah6N.(bCrD-UJUBlnBsuBgIsK>%mbDsX1[%N`bN.%7B@*n$6g*XZl"AA:+qL$]U!q>\gWL?p0o&LgK+?_:EetdI]hW,VFKEH*IL_ot"s&&gb5"&>qjg>8kgZmA:W]<Z%c_-K_^7CNVVk67&bMbT/LJIW?RR*iu??npKSP(no:@:p/%nP8HHb3MH)nl,'nCj9qD,9]?+\Ae;(fXPnXM:&UGjTmXN?ZMVcUKg_%/"lP,W]LFoH$XO(Bn+jbiL>jrqN5AZn[+NnfuS5'"W;50)6CA&MC0"#Wr8)B*/A*MIb72TH/\Gu#`R't;`d]QM!HiTW.Vp73^ZeU%4s'2ul/5,lAWG*t3oE(XaD:@=A^qJ4A`W?3"KE,&5u]DL[`<E_gN\3_m40DYC'UVJ1_bVf("H!$48[r#ceYR@JRl6Ba#57ha_j.#%^TdkGFCt'21Mhm2Rir'%Wg1cHN>hjE&&E;S.hTIHVG2LZ:G+%oQOFeGC9]q8Jq51G6Rem\qG39@FKTHkaO3)lY!$bG&iJ:/L?$Y\%\*#*+L=ZcTioCb'R+7]"Oe7(<QqW-D;pu5U?,lL2'JW[eAt1!,4-9Jo#hL]VPI1WAO**Q.[8?A.:F"J[K+aNrf_W]QQmsi[7X_=+%V$BqCr=7rZ*Qj3n7LV7;*<DA[K5_<3WMR\WcRb(WVA3*\'#mmkAkpC6c;D[1PMEn[i>@M&*5C7HT/(U;o@?cM65"^jR"E"GljR]R%76[*oDg=$D:(;jrJEfiQo$#/N)hn;3f\Mt)5NV=a2e%GEBD6RnageURY)8M<@hat/EU[]WELe$e3?q_,E_!3-@\]D?/luc:[foBD%41+`.aO&.'4(Q9dkV/)C-bB[i"W_oX$_!1VPpcK_e:$@t4]:CKo=')q.orN9C/]0K8GA-NHJF(1+Z\0%b_XDW9ClZdZ*1:[5SB:G%iMKKp.j+$4d8%#hg#N`5VrB/7eTC7.8Do$]WdLm<7X[g@=/'fF"*YX)XW*fSWGcBC.Ah`qj#f)cdHTb&4Yj;daZVDnS&ggjhVE1$%)39aF-@0e\Vm2F`Ru['\i!:O/oGjlOHPqm'aU46,ChGd_k4e]n)3YZa"%kpB&F4#j5,J-L`:0HW1_#M)4<sN<Ibnc[)6!i^+XUSR%4\*J#Q`'%=2k2cP)bW&Lf!idaeE!r9),%;KnJP2i6(>JMMAT;Q9]\[?c9=[u.bLSmjbGk9W<6)*+,];?P(n-t!';,%D]uN+%Qc"c%9KNqjQ7[>0YO:Iu_aKCnjjb@jYG[[fVoGf<15-6"5nS9,8*sV&eYsRhB3.)bD&t@oeErSqkJM$2q(J-HBDDJ2Zh!'#;:*Q\A<3\P%_]9hmH:gAk>$N.A)S9fLgmQiI#4peILQf5#O:N_`7i!o?Uc[`Pq/Etg7\139NeXHt&#XPC^h*,r9WAtMQcb(^g0tu@3n_1cMbhS6%]9FZ4p8f,FWR*5V`'cd.MMXI*pKs5!Vq3.?j>%PYGn?"q>)Q<SGZd"=B4)l280X[OY_qE'haK#OJNk.EN0<M6*F_(o"N#G\EZ;Gg%qqD[21Uml/Ro&A:a_F:&*17BbgP"SRVC-2t(SfU)QjdfKQfGR6^,D#@IJu,-)=H)*l&FR)N8YW0L-!m9$g/.ZOD`#a4QW^b%*(VV%\GS6:bqNo99`*K8TTu1_XjO"d,r!IXX6L'HA#E,41<Th:K"BCU>W=bhQ+A`86u"7tQ+HOYD7T_UR@CO2I5jU[&fI[P(Wf3r]hh2`%l\.)l?]ACpXl7]kplr)]f0IL\(6/hZZE^+KBG4!bJR>&B"dm,C\<dOMk@7"olPNBN@q0l8,'kl0$E(\lO+H*9'2meLp04,Q$>7/W%]Kdqd\qNV>%&Y')F_WCrkZ'U4BmP(TSD6>@.-rREY7W\2$DdDDlQeZbG9ab*+7!htFJ0TWV%OH?i__ND'o90I<%]pg9o$i:O)n*3%1(UTr12ktN5*1E+o:l.M*Kc[TGBOu@%l3_@)PdY<E%kF[i^)A7W+qhP3HJtd93cAS(=2!>CN7+2neP$Tf<KSg,C'Y60Nn%ING=E]%:d+?@h\7OtIW'5h)Hl\;("J8u#RbsZ(c(hWQ2nAM:f_;h4F)YobiO_B7b%%Ti`EU8a_kFGP[7mk]&NAW8TsqWcc3PF?Hk[@P25!f%P21T[1[ISl9oZ[fYA^E;mQdi%TjB?PVCD,R.?`MiIi+:s.T=+qIlDFWVTNGY[SDPt+S\\n_i?99a@D4bK@`&A3Si)_giagXDWB@:%[-7L<dHhQIKDj3#a61u'NE<N%G.QNm-S1^W>#J_!QIH!Ih(fRk!;I5:&<?,SE%Y@CNHUlKI%f4'pVQV%f?(eX%RLU%E-0-W:6Z"V%R8t`1]U-X`?>(b=q?f=O.S0h2DWMe<jFg'gq]EAD!h=@1Hg8%k_X4.BAmqY%f28e)3&a-=:i[lWj=J'_Tj*s]W$J9!,k4WpMc>iq%k_72#NhJ@eVjLC.=!M^5L5X-P(BonIiD)$MGAr"o\o4T+<DJq=_--r\O`!.a'G!daX)PRtSFIb"LFPrsL:c__e#DHWWHrm:b,.8C%%s)bLSQ[Y:!b3%fVGitQj@oJ<flUsU/AGOEQVD[Tbf:BXZ/lVo'%qAA\TCa,pgpbqN8G1e:,^pJ')C$n])CaW'u6ubE&O9<aiJ&"%l.#:QoOE5Caei!8$oN&=cH)lHY:c;;GMle]'=-lPPT/)jZg#toUpt:@!nh[1\TE1edb3;qC<EO*dsIL!3jnVoFdPg5e#DHWWRMVG%1Rh,KPbJ#tUU'+o@dG;lFDA@.B4C5#@]5?me$J;gN`#L#(JAr&8_J2@!*h.I<4=t.`.>MT@P42oOY<"pVfl7\C.ai:VUMhW0:P\6%IPPs.CcY;dEm\\a2.YXoKSsHkW?K0$nSC6D/Q,`406"?#8:PLQ?F^*Xee^DEGh6=Ih85nCGE[1LjAn@)mbh]D,2])n?!O%/SM2>T%+[=12p$1&jdr[:W_4J-,LaPW_pi#u4@UY?$ILO_Q4ZKBnDQ,\A+_b#E4':duk`A%339HM_*BY@pbXrA?2lNbVo4XH#P&m#Z]<0L*%6:k14_Q8`Ak2uCSLk[Z]k"]rpMS;]3<ggS5l>hX)LQ=$.Vcpk+:a4`CGCo;(-`[rm4(Uaa13\%EB(W`8a-F3aoI*<>h&VLq3DeiJ%BhAU<h47j6:,hpld,@hjR2^Xu4]e;E*cRbjca3*eT0igG?O_Z:<R_)#O3Qd;WB$"5U+/ra.S%H!C="?0\_MF1n\?(p:j3>3<L8t!%LX&Epm(rTd0'LZ$NDqJ5)C67B9S,"`lsI=&Mg2%70;#2p4[9Fu]:lT"*D-i)\F0hoVq:)JMhV:0Q]$Tuc]=64g6n!,!h50\5!&$;%YJR8XS-DGm1'$M8HqotT].\aVmFl+!9OS$c>mQhf?o%hJ6m=,oCE<;8n#^`K>6+cWV$\*8E<.jW[aKgU.YkL?Z;-GV\k!9%]bkLL%bEu-R?;s"N?-O#6N1k]'SuB4N/*1KkqT'"uRjhoB[ks8Q\X=A8drf?mn(i><EouEXl3&`sVN])/oX#OS\\Kct(s^gbW\KaOdTR86%a[dn6Cr'SVVYtq[$*R&LZ3"UsAb?XKe,p3hEL@/XLE[q$k7d)[\3%!6onaFOe1r+1cS!VAXDiAYV**f67/E2>:>U^\-n$V5&o\=\%\2,#I%lp]-SQ`_Yci$dj!u:54hJ/(VT,IpV73>4Eg/i>j]QY'TP<2+U@4>>Xd<Rl:Z'M/i$RF;$=!#W)>3#?^@6!FpZZrZ2L3&3!%:6/SOPDUr8&<>&@L.2f>TI91]fnoOlC'W-gLZtu9[itZm`\s(CVgWBhq3Yn8P>4_Fe?3YF,!L0<)AA_'nRfDq\cArB"_2!<jet!_%?&Sq?AQQ`P^)/;lXZ/%9Gi3T77%H03j-#d;8<f-9iIi3&bZihs:^k=i%%UUlN7hkBNIJE.+bmpK7Cn]*4f[gX0[6T2=_,2#UCabO%^nYQka#3Is4eN*!em[8[Q?uSfK12c2kEgN`p#tH\:HRn<E/lFWl#=1'/f%2`4G\/:$EpRL<;PWS5Er$UEE6N_:=2FCI8,X34)A&i%X`P-9nTBV00"\=8%?SN_1rSX.GKZt-GeA5l?AHe.SIZO>';XE-+YRqM]32;4qPL>(S%X=#Qthns;lr$7D`5TA>93+d5I-@WehfDs%?Jd;]Z*%+??3b[(=aaH@?dTM5m^-)$[tRSB8U/j:_;2"52%Ae(*.kqIErV_/dQ3!Ne216Cp8jO4(\i!I?C`U/o./;ZZuc6I]jjsH%;mPmm;PkC*ZdPpRih`j/BhtqV*?!DoFM/RL?V@oj?5h\`FmrP7NhBTpVWD%$R^-Sc*]sH#M,2"D%2CJFgXWGE"78e5buO/V@\Dh/%f:?(k@M6q2:[-q!0"gMYMkZDp\BF15M/*QcW,fSUankC0E>jLSV;-EDEg<hnVMe$h6_^.OP;4')-5huhrF>NTK2M'VZE6MhpY<nB%p"KT-V:(i:%j^F"drk$h1]pAufOB!X;'BV!M/rKE<MsH*\I@Cf`"M?(#FPBDo0^!%*#5BJ1F2F_rF.l(n5.XKeKO>9FJS@Q5&s2A%Pa5M'N7tUaCoi4o[G;2o]@-=++'g\!mFG$k2XH(@?S!.qP8DJNh&?h5(r1"7Q%>nT39A7hi$R0dHR6e:4X\qMJDG&&?L.OBSn/m'%MR!6.]`oAu`c/ZE6)t.iduMj3iZD*0c0jI(=#dJA_*3Y=?+jrYb&`f,>S*IBqR6JE3;#`IGM4cmSCt@fDlMhu.I?m+O)Wd?V!9/=%N3<*ZJmn3-XU@2dLtkIkL6Zn-,p&^('?NGHo!>-Uml;d;^3\ao*35hAMl7)APqPRjR<,Rn4$KU&bD.?aGLCM[m)W/AS"ikAfaJ.g%'jP#+Sr08bq>NCmTMa<C.eeu(G,U;D??WFlYdSuan)H*F.$s+Q8ZJCfSqsX=olQ52(ph`o[[/VJXW;9mJ#J^_ZN-!I!$8_,6j(Ai%(%kP-f-@R$NTL453<':fJ4=S[:&Ntm8QgR5ErZYN1"/gC1Qhj]aVQNi3KODX1^DB8QAmd`%-7KSghL^L$d`Ps+L7,*cN9=A8NUc[%a;EW<j9lab4'[p8&k2WC9ba)3X!8J5.7O%8YJPd);*KtsC_n_HVp377=d75X4kKXN/'>nJIK-uLq=L_!?)f<FDZ.^6MXnlEUqF6,%*YH8Lk<Nc9Y3RIEEg9Z':;.Z>;:k9t9Web77A-Z0Qb",.^T*pRB\Pmsr=$XoSR'j.?h4Z\%Ad"TmteTLcD^%V?(q4sI^8201[=i$%-T84AGN[TNdoY0Z,)D8^l_cLD8Q@u,T@0uerUa1>AB:Hk\?;J'e6#=,^TO2X<BoLY5kOC=ktaho`QkLL-SCV^Xlefsp!\s]e':NI%kMg;h<Bj624hIkh<c4Dm10J>j"/SNsh`tbKY+NG-.uf-EVllWpgF?Fr[!I,_kIdEff2!-=+S*g[a(Oa(Kf_rUJTH[dGKt,PG$R?2%Wda1(m1OR?\8A0AePCK%aZ4MBoT(3dhS2<]5=)ZTWY#*24L_Jc9/kcIgFjAAl_f4db[tgd?e8*RTM%.DoRsf)C2&j*rdJ0:5,5$n%#OCoNH]&,9O7+98rUcA"A(_jG?<oc?Gn6@k[O9]";g5tI<W*WFS6XZAYmhGW/"_rhG!p]^gWTD8rUeF*E>64mlMA&5X83i>O71"0%NW"0NB5^/&WdZ>Ij#bDLf!rD%^TQI6V>(atPW.lt>1X94>A.(14-98O\?;Gf2`.%iG2W3)I5OMiA#IrO;]1ptWo'eb2C[tgSXT;!%>[9QW-niceeDiW$=rXTaG@!$eb:WJSqT7$AO%Y4/WTn]gh<CANrPW$lWqtt,i/Q@]do$;'>$e_&lMB`M3cWR3B@lg?@;N-ITBa+/%-e.fNg2D77>sAF7jTXrGku[O>3dOVtY+NF;.-G*<fCdTo$rp(9:T3TW?e%s8AE;Br=IlI@Juh)@Y+L/*Y\&(GO`gWpX83\p9/9U9%:YPuWT3\M&57c9:dh`L/=e)D>p!XZdkR(db>=ulPf4M,K<_Tb;=6gJt_6loc*4r;Rr6TNP*XKEFV_&Yu0!-\u@>XOPesU@/,Ge+j%+_DTJLBNA80o8/D.H497M5&e7;V5Kih3kA?f?C9!IVl6t7U7@Q?Jj.u`:I'bDQtf\IZ#dM(+daBo>s<hRh)[S/=LQ)ma`i=F61G3%jr[YgZ4P-UaMQP1M(H5^%C-npI#um>pAt*Jgq^L_c'U(J2S7'>q>AthOtX8_&,B,"rlCGVr=/Rkm,uHng9a1qD7sju\*R7Zhp-tA%r/Pt@lh.$n[bdgpK'U\P[_1Hc[i_+*<G(=b<PpmNZZEd\_n#tfQA=X^Pn)Jo2Pts%o%m!o/Cm5JQM,MED;WTOpo8I$n@2YU\h3Fd%B7_`Z(!ouj54b@Bp%B2f`)T':D][)JnjQYrPD9?CpJjAidem"`A/;G[B)X/\#tS#kddLk]ic.an'j2@k0\ot(qn`8bB54_ecIEXK%pu-'FR32m>f)f*f?Im_tnEUWuOp]=)/_;$%_6k\pfUTm-rg-`*5*n"rg\'FJ`p>;i[nl"$--:sUeHsOY>)c)!A5r'Vr$q&0A^!)<%4qhMZ5.nU4m%3&K9!Q'"Iq#@TB&2GiDEA,@#ukd5',ArST](`nkUij[0\]PDY>on_XDZIOf@Q$5kI0dcp/8F0p?2A&A1_mD*u3GW%m/YQpD@hR(KDYQ"_cffl^ukoM,rd4k.+s8LG#Z:rL3u:cW(tIVB)R=oG,)6YmVCD>`V)sH/%eE_nh4o-1nIKMnn"*.:3m%3&dc<Y%)!Dbr[+hARK;_^r5ik)T3<(,_(*DI:\8$VF<:Gd+5Zi/,r.?IJ5*0qpN&o<Z*R^O;.@5iPgp>,F5:Uor7p)O@hl6f0(PlO[7(:"C%HoI2`(;;u]#dtEAau7*;W+TD7M&ZGI(@\`uiH`P*Y@7^N<kZ!T/n4uj)^OFr'`8iCYAYso?a@*/ZKp\`nN*mO8.t;F?:j?,9?"D9%gGLYP`Kpo._Bs&Wkr;/cT4"@YR>%i^&sC1+Mc_G:9PM32S0&k3#SEdL4M`so(ud>#64?'87C27AgXp`D-WF6F>Ns*WhG&+S_qAIt%f.hN>R&m8heZoDMCAA#'qNe:&^FBjh&%8?Z%_jm6#XrWq`oCGkor_U`p_0=5l"!"ihL-]We_<'l-XKhG5.RVEG@5:`D'(oUgZ)!=%Hf+AgDMNXXK5JA]iZ.iY`U-4)<49KGC+`#-GATF=#aefLNi@]hJ'A_#QULKF:]OrD'`Yc%:(gbmCskRm>KG8(@;`EHC*q.XK@2kS%%Q6t(AGa8OiD4fW&I;u\b4:6f"7:=l[Q6.C:mB\gf#nu['6hr[=XGPEq0Ouc#V=V<Kd@;h%sm^R]nBdK,si(J.q!QriXU'ZafiCY%12ukR(,)F'(@O9*n,5"-#5T&[cRYZ]KO.:(mqI*Hhu\`0*mi>hJ4dZmMoF\^4cCh8>Z9i5EdQeHVG;MV1t;mHl.Pac`lSinr$/8F%Ur+4Gm:2C"aXQM!D*Oa.5?>qf(+/`H>TrIhq9kI(JguI:)6-g;aC&"O7F;l6&nO,mX+:-MIHTpHXDX+LY(eD%S*k[9KHtLjieBJT%:.8NHLZ[)VJ%pGb[as=2@86]?C@LlnXmR?p`"(SBit%gKH?!"`C(L^fBW%\+4+"Q=Q3FBI-'Aa!8G0#p#Q=VrrW((rQ(T/><05B_%S7u)l=HI\/LNh7`CBO7!NlC4"fiIh&k'Bn^m:-H8f2A/%.R4iE*CEVjG0KPd3Nu;>KlM0BZe@/2J0l^mDIQ+PD5<o`,.(>PqluoJ%[]X!o=<D\A2=j1UBO0[ar>`n^*'buf]YYR%\1sOkp&3<#+n;c"%Z(E3`4&_Q@b7g`8T_u,GPYX?=l\BjGAU=9\$8@J^n9^gQruk\%?'g-K/.5&]^@I$bU</#F3G8D.'&7(PFDZR&9Sas/N1DGA`['j2D<g&.mJT'8Y9Yj9EZnR'&>[-=VPp0r9$j)PhbhNB]A''8F]l-_%33ihZ"-_8D:O^Mub+7;4eHF38RXtn"&[b,VN<U<beQtsd^0WO@F\&IiGSG%6OPc0tqXuO%`39E`6!%Z:bG`AF;A5s(0DPpNI$+e=%j-HO;kR:qEYkn7W<nrVm(<GXYq6BYdq:b%_/Eu)e)h)`C!&ll=4>q,NFX_Dakg:?M4mu`06DLd%NU"#nVqaU8??%,&bCK#jCMh0L%(4s0,=/bO>!;I0-!6/K#g4M9hI-'QP@mHq<_RaE>6@TEFVtVkFZn>N)n-)s-9S3dZjtJ+anYMn-.FN@[d&r)U0BJ0SG&dNVU)r9.%Qk'?gEK'c+eL,(:.R==c8!\2?^<kCsh@==c2Ju'fb`c5,HAjb`0hUS;iuHI@T4T%UQXDiL>cimY@J*@bX6a+Rk>($OU,0MA<L09e%_o<`3;"FrfJ4W`ZRBc2(fKg*D4]smU:WMJ*O0i"NeMR^IS71\53C&4>^"[U!8%iPP<nGf##2L*gBQ<4,E_*s)+K`+fYqCW$M`j&n%+KpXH@NUb>d!6j!b=sT_U"Ai@8rg6/hedL:"btq*ljZo_ehRHs3%\3epQQcF3_'7J^9gG!OA'r;QUe8nj3M%SeTe(6+u_g)#\h=4%J"eG#+5QhBcM/XOBI"g)n&B)gXQ1*sTQ,(o-^0)t^HqH$3psm]O`7ReI`d-#.V26dW;Ea)?751;\YQ:Zb%45<?_T;)>gFWE:=iGo%Pq3$Bs7iSm\<E8M,D27LEH:T/]G;N'!%1L`1fuF4pusgoG@k[oko4uYI,URd=VE3ap7-@*Z0l0+,!a>I$D%u^*.r[6`N_W[BM'/D%S8u1e[M#@QpLG4>eG)D@I:\1-3c;e[<OTlnZ%cQ41X=SINka/$8c(+.96YkqeA,fj;^F(7j<reh+VlBsNlKGSJ&4k%cNUN&9,OeA%BE(8X-Ab";76Iri&\:&_=0TFSL=u7:W+XGH6H@,OXfZ]jZc`-mYH95([m=4=<iAp%n\#IF%9+%OF7U5i;]P$OB&E*r=dtn]@jN/<%e-@"AJGE'U,)Ag?`TKCs9j^/V=D[5LCjq/BnGt51-E`FW*('s>!Mi?F+H78WEr?AJ#48k7<uOc4?/QJX9V*<GJXi2ABGnNQ01LK?%rHIb]\td"^<d4'*-&=Hi%U2LS`fSMZ*BHidB]gUJD7&THUu"X?K2O9f%6X5DfInOdn=GW6+RS$01oNB6Uu&Cb<)hcrB<X]rMN'as%*?3"Gl,P&Qo;;p,<=UA4WQ"+L]M]>$h`O,jrZS*6*?pegmT\QVUO@*f9.''9BcNtZgg1r]cIT:CpO`ko>^_lpCuX23+`\iK-@l_7%_5F)!,'!_cgW7jcJbAUOQ?C__To1?\Gi<(N/.&a_"t8"p>eb:ui\%RFr=K=m+]t88/a"$gY:XkQJOt]TYnW=i4\((MmR%8u+1tJC%@oB&5]11Fs'6V:PX5aQ%L@"t!MVpiYB-kQ6J+\r$g`;X1kD7+)X?tFpr<'KQMTeu;m`hLJd3M@M2!$8G8=%*K#A`q=8@`)DO!rs@%6Ka(^);qRkRQfCE+r]-kL<6Id87FqZc+1da0<kKE>9S$.eUg#>mm?)]>'EDeQ:C;U^q@3%!EUOP$3jFsmt[etHqgHqX"S1mB(GTb%!?*gmbM5I)er2G[?hK0[Hqd\!_1uS>S90B)pf+\U9CZ)%`pm:!\K_"p.Q)O4j8i"&QQim.qm:_,XiK;!MZisDcbkk"`>#Qp`_\>,%rNGj(ADd!p$3um!=0Efp1Zco"OB`&)11A,C<,TH!^l!Bj=MAT35oPEQ(>g]<"0;=4V]E+(:N1IbhX-V1g_nHH79jcjY34Fu3aUI1%$h:lZaf7Y8eak@j?WtOPh<p]p`O@5RYT2a'qWZCmE48B$RA+5:M5M"eaH[._-Vcr.EYh:Mo+c_c'KWC1cS40HhUkn*CuQ%\4HiG+%+lNpO:oE^KC/6A>K+8W"&UGZM(QC;92>G,F,VZ7'dmFhrTuUL1%L-jDX#ZqS>u>F9qgoRY0!NQbo.g)g=ld6VM?hF!)R1=g3Qf'I%a\hf0_OXKp^M)Q%mr;CaAP(f@mK,sY/KjlK.:D>26Rj&jYU@$qMKt"s1r^[mUR_:dXcsBk40HMQTXiQB,j6Dh!b->(I6#OL+b?%H%DPnV].u/hF_p^=%OfTN,<bM$[da&W?n[ClK3t?Ye)o72\os'%6AZ6X[73i-,Yei-j*.k@Nne:%[bH8I+8=[CX'gYIf.S*MDJ]W3O%aJ8P,)Fa;lWOB1pk]rNtrAX_3HB*PAl(ia:hd8+VFUQ.+SLksMct/9(KG,OH.q'+Q*jT)S+f?HCdL'kA,!Ah=mnen#gPpB(T&n)-%X0b5<7$3-:5g^c/_5GgCi^J*=Q`4q/8QAeHLlp$oQJWqGTHJg<f=ZH+gCdRJp'_ig[(KrngI29?O\`O"2aB8SSd0X6+mI.8F;BuL%(,%3e?2!Z?(Uf5B=r7%'7\OCH5YlT['md+&#0D%Bj=kSu.t%)?<jI>r#>APe?1St>.#Ja#3k,!B+RpJgig]!Z)Q8gY<1nh&XT7eC%jYYQ*G]=Y'ib;fXs.3Qbfd,feK.Nd569sk3*HPQlYW"0Yb!To8,Di?RK)$BHZo?_*0a+hNg>k?P.IMGC?IZp!m%,_!W0<Z5]O$d7%gD5b-#@nn=OS,()IVU8LkU>WCihd)89B=B.78G.9]uFYK+nfbh-spQ7<t^?9H7N!AAkcQse$`P-?Edag#V++*?flP(KH)"]PEeAR%m;BIu+k[a+E5&bO`Q4Ab/@i#i3&'[9)SHsDAX4!Ai0[_XTPS"2$)AE/90%QMeXqEE5"E@U"-Ic>2_@p9`S-r9nE4XLA>K#i?RFmY%I_;G@Hl(\%SgNseE@pr1\GNg1s/ic`UFpY=-f8?XmUQ\GAP%qmk$OA9#3C]Z*ckd0,Qp#]XeKDCSo#/kCb^(=n6DOAFb7m\K&>o$%`4K#kraC.\Lc?rA_o+aU84=$Y1+>JmX9+&Y"Ld_BN`c^((L]a8UAjG4hrnk$El<\XH@piu+3%YVM1k"X'7O<BGuI&lS0'JP+qgGS%-$oIi?o[UT0^Li71bq:dHf&@"^5QAek/&0*r@CknarT0`^g'nHB_#Is-3m)Hr`oTII;^eJYk'"+'$k.HmFo\Gb9VLmFHFE,Gs8`j%)6<clpLIZ9lu*7"P4.LcD8BRq.R!NqQBQj_%[c!PpC;(4Gj7c(;F1)P3lQj3\(jM"jH1;LnH#pFqaKs2P7Ult\cXJ<H1Z5!g5T?W%hsKJOLbpn#qq7d`hYcu-pX;S4h*jS+`=@\RFH?`5V<k9hfp9NnYj.rfXZj+g,eYbU5r<!dd.W(B7I'^D#'krFU%JDV;MLs2CDmYG%pY4R*rLJG>+u0;D\k.Uk&q;BOViW=lRPS@SBW&QZYSa1N+()'6imo68Q+LIprjJ%`<%4'5+GDKM$CE-YSoLd!Y`a!%$.u6O/nm;_%5%+i0DgP?-nf,P.-R_Y?KJ$)>GPH-:LP9\hh\?5PJ03"fcjW+UNXJcNJLu8:![l=02W?quG3fOsc3du]@Ze`#"9<(F@hgb;+)CY?%p%#:$#],1!ED!#P7`oTFl1+qY32@'/gRdoM-%/U4%>4s-l%;`e_%1K<'ghb1PoU8$:m)(&bTCl:5!#OT4koj]j%$TN_:Usd*oNEd%_JY+LL>;pPS3c=RNtcr2$ChHOI?MJ8O'N$t:MfA527Nr]3S*5>=L+OMJ`dL`QTc!`IKHuHH6)j5!t/9\#)b+^O'cDK2O7fWFHX\*%Qps`#(j'R8'DG[BjrHP4otdSah;6RA\lG9Ud[5B<`_e5(oc^?O1[.2QWnn$n1P'EAL+.SbLWAZAmUhW3+4a#_9-*4t)KF?rq"TB.%(=L7AWTTEfJQQ5AX>ZDlb+`Y3Y6;&<]okp)7<Md@.GdkjMRC>JqW)-NYro#4%Ib5HSA0]d`DJ>eM[p2Uk%fp>>nS='$.B8q!'dDE%5_-cQI*'ufO41"R>q[]4Z/PoO[@>u*@b`%+,4WR)2jt:DjMA3UG8gnZIH+p>X>m`.&_MKr.>i[3M*3:SD0.u#&4[)%UIq^68.a*H%&Kf*6!3s6\782X:5L%ET('V)F8<YoT+((2XW()V`I4VY-\1QPt@5n-3clR49c7^ZSs)5agVL3i6R.g?gUb>'&M8jGQXD@.DGd9$8%9ed<D/lU9k@^mtj)5bCNB:E*8G&q9#2+PnZ\sY.:_grd`=:Q4T>B[!@ec?,Y^:sp9mr?Zt@2XCaOi)U&@;f#5^&7T/2_aW*:g^IQ%ob,PU%sN;d1-.k@bYfsAL*cWM-rQS$XrDSugk]boPX^aOebVYiYS&^$n<r&:Z?;TOHYMMP&*_eaDub4dV]S(F)[)n?X?8LPVj7bE%U:3eLT7>,`JOiKI>A)4rnb7l6Sh?ktf8'7QkdgAR/d9!3?'2p.Z4OQ\%'s=8f;6FCc+LW+35+&!bp%0r#r0ttKuqJo9$i"MDJA;M%:\+"p6#V+\NPce'fm(*B[c%lQ/7r%aPlFE/Yq<a[cs[h%Uc^!43U]qW[eXh#nS^%iY*0JeKliu*Eq(_DORdL;egeb!MF:dTf9HUS%UZ.QQ1VOe7&#AdCF&W&MA;l0&pgD)JU@;#0$B#qn5Rbh`PR>=f.Z-4JUYpBF,V`Ms9#3!:^9[`Ad,qG3lmEV(Uq`Xc%!hCLP^7sK%jq;j%3;2EE)\%C%"QtV0=0esUYn?uXJK;CQ:je@@_1a,f&9DI&*pj5&"gfZt_XspDc+>3\%W<oa)TL2FR"fSL8kAo9qs_N<#/_!D%W?03oXFl@Bs'n+^27+mXE1$5%/I@gB(<Hq5N)N"b\YYIhFGIC+X-XJtmq"C0P0OMO>i^-Ip.TP"FrqamndT-SFn]dheD9i8Xu*BM%nYQP/)$.!t:F8uXAsL;]5I]t/CT?,qi%*TkB.<>!c:LL@"KO5][LO]>6:*CD/P'UFU*[(V`7T=N0]\s-5nCs)/b%q@-.>5NIb#P@%bN+^c]2KbU3!`N\GfM7R05EcH2&']2o[.aP6T)+Upq`jN;K%8*k:G%d#o0;eL%SHF&qVr@&$)ek]clU=XHk=?aauf4A*'P=$h0l%%7:]_M3?=c[Ej:l,+>3TN@-P1EP_I[s!RTJK8*$Zo;?2D*X2PFuLX4a@n(Q%"SVk0+27PtWWZVpZ0sH.*0rk"Y$`[c6Z%9!>QjVrs%RCik?.t)@,SU_84q':kL66RfM`ZpJV*/#iJZnaOiF)0Y=+R4:rr6D%g?V8Z?+OR$,5L.cr-D@_bVY3R8-S5eLQI<'NDK7e3WYn,)%Jh"DJ.>`,-%G/@1gT_6H/7QOBlM(ukG;Om,!rT5TJ,F6P2)2'^>U"g<?6GY-WZJdNLg9!Co+\HfCdu>,Z&<'"*0+,7$FfEAX>sN8%Z(h,XU?H-LRnuU9+aX&399)b@_^ct:U)MF0M@_q398jPg!8h$(/&8lonS/@fq*&6=qMQn"UuT2DWfJ*Cat6"c/VI(OGD5L'4FJB7%2<3$l#KEH?HNCrT&0or%o=R=hA4!he$;0.o6e(PT#CtDp(IZj?3=D)pW_hW_)@0;$:dY+'Nmod1-UX]G]%#H%XEtLuPriXcHXfUV%`7g003Sfh+"+sBbKK[:"9iffH$Smh'\gj"$@TNh2J!+uobb'M0dOuoT6dFM+/q4#R"[4J9/f\Gg>\B'!0_2DMmjAVD!'=gk_4_s#%]50,I$iTie5oKVZ%fO1o+7S"t35:_(I1?6sop-ZK$K#5E0kC8@oedsdl!t"TM6W0c+nB6Pc"=W3,&^2h4E/HmosF_uZ1mAKD&c'?%5==>Ks'^)Wp.@n%b^F.8"W.6Jerm+I3f+NP(P.)[#n$lL!0kRFO7.":<Rk/ncO9g=n2e/o/.:[RX/kROlK\B+?Mrs)+201!++o=0%pW66K`%#7.DK=uTEqQbe67c3Q<cO5.,\A\/q00i]m9GH.q6-F)%f[;mrDH1*,T?IP+*FDSMVFc1D<LRfFG!:m0),nH`JJj9o_7D1%?iT*.phB@2?iGL<Cqh^fhI3_&4rg2U,NY6&h/5HOf8#R5T"M>@5+6k-n)3ltpj@%ib`Cu\iV7f9>X!knLZ@uWQO=;mqN(\>f]rWS%r6=]U^\Y.;?pFS4DkS!A.0&8@-$\3OkX2\s!2nGZoUl&J=\NK+_=&J\lF(qc,[UnfOi]iek@=;?73-ZdGa=264RGAgf44U#=5irP%a`BLEPHL+spFi!GmEoJT7HE'uRsm=VJ+A2Om6R_=i'IC\VoE"14,^blTtPK7F-aG,N.25aGkJKE:%5cMqc:HIiVfBkh,gnK"&S&4%\"L'%.tY!%hDU886*FVngBaq7EQp(KqW2X7iH)pMl"p1ghse`uFN&rj5=Fs-FTacHq&mT5+UAQA_fOPPd_Bhm/4EX7'Rket-1m;E%A;)DPn3?r+W:]uETPgrnGB^R`VU3NThE63!%VGa0Tq_4]HZnr`,/`jnm="e0`#.7tI2V_?dr50aGl@"C`7`2N=[[u=paG!cXhL.q%_`Am!"Zm,0D&8gp"ZPtoO3`Cu#(6'^-Xjh$"%IY.,^HcoW]DPYcbAtbGoSq7@Q*/2@enRE^Dbi0DY8c/15NL5OdI$G"g-ZD=!m:T%.'>G.1"YQjK#0VMr%>b;jd%@:LQW"kd_KP@bCBGJ\T;47bjb?P63qr/QhFE]Hf+efIfRDV4B@0M\B8(/qVV897G[L1je@DgOZ.C2%8"phk@YRs_)CZbj>=GH\o6>92cT.-&0*#+DJ+Bh'J4FkDhM2U;EJ%a_=lCWObjba&9LLW3o(a_[^#6k`'q5,Ns#Xc7F?fFb\?dCt%7A#nT$1eg)9E/!':ZW1PPHfUm'>*W^R7CW.@*Dulpc>PS8rgBm02J6hm*EbDs*Z`p^UaA59\1YDYJ5m"aG\ZCId#h'#IOa4kF^;d%&A3*s&^#%:@NVT%+><cggSk/6T3pqlrGF42PHJ\=rn7X03q?SkBg@ab6@q?36%nQB'Ft/Zmmga1V_@G?I_`*UpsqtZ>\M0-rBjY,%f73Wa/fmg.&;A'sOEVQH*KV\(P&>i<N"R0mkTVP'-r^It1'sW`4f_D6qc@m3b!e`a8.eLa!\!F/Pmec4dgqN0Pip_6^VO!Wd7;g!%4:uur4oYW,Ep.9rI"l7@!D`4+hqA!*'U\a74JEgF-uN0f9E`7rmu;#P_=;?GQb<uJIeTQ+Coi.%D%UVK31c,&r-KXAHuM1e*>3!d%7%4^IB7mj;Da^'*Nb:_mm#,QK_=;>Lp%Lt`q;?KU@eKI`ZsiK@crOqoC]1S!#lAHls(=YDL%-ft&hSRJYiKPorRV7+/j/FEs7,3;%!`)(ugF*C,Ogn[lT`@Yl(FNbi&7#$3I/SDuS"RcnI+i@&](cC(locOg&3O7tX4VgE!B@jf[;4*T/;u)"Rq#86pV\'G2H!3F\6L#1%rK1oImLa_GH&OlWF]97!HRfg3A&s?s`QEHkeFGhNm*obBs8Ms&6lYb0)%W&imN$??`>=VV>\u,IYWsu3=/YZOZcR?t4pjFBn_o-#%cO)<2F"^3"plStLZe%_AWN6mun=D4m^)2'@lg8(Dh9K*Fanj_<N(H5rJ+gp\"7NKBb)W1^^NfK]2#\=a6e2?]8K#DOa%*kqK>0X`%K?ef[nEnsTht,q8nFOQYaHo8G@b:,05N'^\OS$hV^$"7Q++8'^/UVc,L>eme$T%6[P_Y<o+A0<<UPDG!Z\2s8+\jiP<qFPbC.dM$%:RYpsAoVh_OBct7oMHUH!HalfEM7kG41bIOJbRn>D4&ju\X6&@=K'Vp;13qB;*FXNUK>:,/.RP>J4>!;(rVK.QOq.S(QY5YoLCRY%njd-PLL(rIO2<17U*t8NVa9C_8b=D[neC!dboGR.rc(l=2r0\:lJ9?lpZ6^D^;<0Y#HKe:.TQ6?lMP*GfiB%gL;+YA>ZVk8Sm\8^%ZcVsl&)EHFkp<-K^]3?cB<0M3GkK\YT2plha^Y0o0tA9jci<R\UZu=[!;+\mBPIk`++(b-n"AXQ4FYqPX^5'>UIW$WI!Iik01YcN%pnD"pPO3,`fV<9Ol!eYCfrd'orc\mc>SQHdc,[-JT4#ksJB(sr%>`dO<kgk&XOd!bnpu#b!@E7[h_&<mmdC7:*Wn5[J@Rl;Z>S"u%I6[J#a0;d$T4<`Wl>enS02MJGX2h`c\@/WEYf97nq-VI_X#=jh4]m7-e7o!UVq#BXY$_m3a'O$S=aJCAV[.0Hm.g/2@PP&ud+R])%%5f2R(Jo0OD$B^SMs>/e#fhJ:J>/`-i;&pBAi!^oeT)lBq6`Or4Wf0]T$6?\aju\PNR14gT#2,5SJ948c/mT(apqV_?;.f^C;"F(%'c!0Tc;sDH&@1oIR@R%`rm4-;gV>t3gDH%5I'WG)7j9Z#1\fu7AcV>?mkXk+Ek8cN<C?n#1rBdaA7PH:KR4)T!9=5K*PeE_B"0n"%2LnUd.[%"9HK.64r1HUNM]YEM#%ZcnbMJ0G^O7j/,2`.;#H@g=qN!eY"Ra$N3SD1`4eJh5<6H@*LlILRJKIr0P;OL8$qSmYNsd\@%:*u<cXdG5`9#9-H"&ApagC$^.:p!^GH(4((\P>tnLB7BeMUfK#G<g7'(B(mn3P[gF;'6%:T0RS@pm_5uPl!:.>R*]FBK&A/l:".A%r`)Bp?,^DK+%8Uq_"_<jF$K/W4F*/]7IK8dr$WtN9\(opXa3(4hECR=Q3*Z8595_/[K(M2T)W05MPNeU4:YpX\UXTu3T%uUQUOE&%#pM_G'XG[OPP&Xt`VmBXg_/GcI?jQdnsn@=DD3/^HVlB0?i>h9p+Qgq-!hK*Nt?-C>@:t97HT;L85#1Z?5BfKYV+L+D;q)#GR5cK%Hr_>EYVZuV^KSrr#*H7=bJjKpjH"?T[nqRRAhf&)_EM8*&I0IU;U^ft5C.d;h1C;YY0IX-)^:om<7_-6;uKYBYX:sK,3Ca(i?=DH%/AXteb<Nnu!3Y;Vjan&9[Z+]6W^WE<htLUp^l(a'O)fA_%8]-=X`aYmq7mAq4F7?YPY*iVI(e36k8Oqf`G0h+K!A92YI@VYhdN@@%#Eu4>DlXa4Fp[&<+DlAZgAJh;UR^$!L%cKoEceL+EOgf'G:t;l2q;`M?;I`;GA#I;ns1fM\:MC8h5%&]Q,hc]X<X`@J3#uER.+q"%>Yt-rpNjQDH*cdh.Kf1F5-1I0]i\QbMq,aV:+t47=@ZBLA?sie1=N:i1FrV>KdPuM"P)K2B$N1uO&Tto0po&O?!gX()$*K]%_HO@%=hl@`1Tl:(c.naZ(HBM3HjP_)lH0$=/@@C9T/ERs9]Rb+<g!Ajj"SJ%;>M`hf%R-S1picIc`c61;J%NKP7.Q3Ia$H`"3O5!BD%eV%_04G.YM5QFm]1fMeRVIVp2iude^a<9'Bhf.J-Z/]\ml?cOKq'EJ1&\Drl!e<RFR-W(d`B,_=#f%JHpiork&Ck]muY&IO3'S0[mCa%UIGfq0m@M\f=6q]+ej^i#@\.J'?P`(DC=oZ%%GGl.O?hppNDh]ZZ2kkM<jcL$/sV'q8`m4JZ@Gl+;llHG\>&+J?2,$OM?D'/`=d#%d#\Cea:3aRdsJ[Ril.n40cHLR&5Zd-[T[%>k=Z_IO"%@O<OXK:m3JQ`CJu`Kit2$>\g/^,L0)$bJ_$kSPC;j$AU`Q[#Jfr/'r%mU%K:!k_hYu_A%>kA6g?MoDQQ(p?C07$2"tKTE<phetf',*8T6Nmt]UQBn>>="XiU7M';b_0n5h1c#i#t&.75\3MhI9V5NORb=P^B<4%0cZRQ=r>pT-abqI_98atbC/Sk]:NATOoVOi^c%OK'9Io^p4t`YY50l@c+M<Il`DPeOD.s]bpSU]+kA#>-d0t3O>&*7Ha?tj>=r'b%:niY[/Ile50^@,E0b<VMG'-J^b%QbR(E,*2/k'[,q0K>+frgX:SHJ.5;GOo7]ut.N]k0[gXqTCOJC8MP^Ksg=VaTtL\5a2o]5[U^%!%U'oWTG@LOl-Fc&D:]:#dmEFFV1=uH'5CG/0UC\juBj0qqkjp*Oa-B![0:j&EZh$BS6s(8`:p_l?C^314)MG,R&#gOkkY2$h46I%=^779ntKf>]fSufg>H?GeDqk*cD$bF:KFU"W9bEROhXgXr+-_u(=B6Wm$k`#/F7cTVUFkBCh#8l/9icpm7=j2Q7Wi=73G=:&b;=,%kO?VZh=):64,D*&M:>Bu5^XoA:Gqhts'^!\.Hk;f9q;-<_I(5;p"/r(Jr83di+=M4H;W^E1O2UnYV<fuO\XLCair"HU;ftYj4Sa$%H$Z?VfDTuBXB'bXlW<6cX3H#r@2Yn![^<3eb1:B+?q3*jBZZj]i8e66J3.@^]9Nj8d-gOPZ@([!RYMY?c\5BbM778(](C-Q=KL@B%nTIW)(Oj$tJbP#1CW<A*>@C>e2HUCKKdWIZL`W>V?FC8X/,h?9OVT[DGcVb_S#mkP52\F>&_DD$DcV2S?:EPUj5!j:(?2TsR%#IJ%b/QeY'H2l>e!m+M(k6;6q)rgj-?Vk$Fk(F=H:^gA(SV1:6u`miX/aFk'oDOM&=&M+QMNefDYB+]R(DrEciUWuVl"?;1(XVbjI/EY%Q/JW-ie(W(qq+k<';J+*`>'O\.7-7g^P0XdK/a9%r9cdALnmf'c;cU@2mbC\H>9U7-/Gf-YQ7Ro;:45CZcRCMZ1"C/f/fjDd85>f%0A>#P)"6]93i&8?K4bi>dS7#k2ZB:cP!cfP58\(u+l-[U]?0ehP9&(GrkWB6n*<HcKA:L#^!uF=I+.Dt=O^V6<U8q)G)t>-HMFl+%e@Yk:G9J9<1+5N-B%4-FJ]4-1.>9Q#OaKXJKClAN9p'@./uX*>OfKr$Xc)Ai3Ah/6"UQjtOT7J2"3KMudHYsW?&>:GpYm=iLO!(A%7@k%-1lA%j*;7g0gs:=757Mpf:dda?p[TGbZ81d#5sOY$]j<?_UU1/3NUj/AMBX.==dESe3pL;TUgNa`8X:];ObCV<hTu-ObQ_cG%ogdtSd-LH(1e\-G5OjL_L1*7_VJ-fYGrcqBUNi"6LImrSBq>_<l**)Pi[?G.?5ecs;*!tPK.mYUUmD5%BNPaP$rIcfE=n1bfdI^Q%_blML8QZ+j5rMDk`?:*E;*XWpYT+)K6U)!s6-p/??J$2*q?&s:0uS>om&+E"k5A_ML2iRc_]nKe]t>1OC#"Vu1+LIrY9,#e;?jfW%kXE1jkS6B)j^eR)k\"I)(B%+#,tV"QUE]"M]qQ?T=e=\C(AWT3^[EOY15Ph456qLHU0m\@Qk-KO('#Tn59C?p1l7DY*gZ%5*ouE:%9Ck-hZf*>(H_V^6@Doi=(ds"^m$0jN7:k&n69k1e&WFQPJg;cB;4.lV5uEZZ/4uW\*0"u'onuZa%/dj.(L]$HqkYBgd3.e2IR!00%7fAG[XO$p^5G)0Tgqr4irqEi$K"<_u>Cta<QrN-%.6e(B,uF;D('1ZMK<d_!L2k`7_dHRJiu%pc#/V:E5k$Hjm&+j[#=@ZfBfJ`V%UO.9iN!cL)Q>)MK^cI&U#]a,071$=T$\9%h8JhG_.7,0#$%+C(+NMR/OsoN9h1M4'(g!416(X&+&b)K&$re%aG6m(2E<Kf/)Z\&!%NoJ!tAtr4Q=N2MgR</FZkmr,D2Mfe'PTpFXZ8,$[kZNDb"8X'M)=W6,^R&R2-r("m)T9E\MkT#I`k<KgMPGMe%V.VVLHu!##.S&Z%!'('8(LV$-4925sQ%Mpr9VW6YjHi$fUqPCck"Fr/pP)8hpS2+q!a?QE^Pi5E6!acb',Yk\jhQ(d;3j^\g4OKT)-IphdPN%2HC+^Y%JVcgP+(W/f"(^ai&sR*0,f!6nGSHshG'mh68IXi,Ye_BsTEpa%"Fks@`0igmL4alb*sXLa\/^N`,<nqS.Dh>G]j?lp,*4GJ"CTg(%rM[e&9ECP*cADm0D;*=rrh*>'UF:nf+Rh\da9I:R-nYO8]qQK9YZ/.t!WaR#oO6Mc+qRZK_m!4^!6I.CBu;bDDZHOXk.%pu0MPu9%M`2!l#brqUCVuZ#9EU5g_43DWF7BGg8n*g=CC8N)k.#Z20F]_Y_6l2FBu;dCW#!Tk__`0J!2Ch%\@ACi9js'?2[\#A/KA#2_jiVY%qthM]T3G,<R[@'%-RKS?9F>>%U7Vtp;/[$*`Wt0:p>dnIjT?S_Ih;pA=M;(#/3lQ('d1Xaf)c[q:k/b(7&fhM49[kSaN1:c6+da"%?4(ukCmSShQT;';$&J@?W&sql#Sq),#q0LO-n,#s2o5jMV'HF6rBUblWY?.<dJst":i;qHY7IE8oW'qRV'PF3TUp[g'SFg7C.?X(%N<"X7/CG.hB0K!T:C:OG78aW<,Tih%#\5?@qp>\AUaQj`^j[pDqZ.7%:o'6e2(?o&b'ngWNJ^#PKFW)]lo#^R#8(k@36je@!l_/j%5XPTa"t#iF]rX.B5_FqeJ4#PGND+kM%#U]/ari?8d$#Z@H3'#C<6>>ol9g2PTH'W_NDeZ["!9#0h?Gs(K,DZ5$m6J\b@(gd2,!Me%&+\BAK9?L4*G@tu'S>B_eA,Ak)H,S8Gm:i\%j2`*Bi2f[=iNH5*De]lBtq_]:oo1_"CV94$2Qgs`cBF!J2I+N=RH`Vj(ON%`Fhp1%EsnUEptW`A[*[$mOukCtUom8iTo)M$#,?4'Ja`_](D(SJ&'K3R2P@Ds7%dliIL't.0.-!(;"bU&Hk</FpQE%Q!8$Ide.r(;k^c!b%UQ)8R10k=[1+O"LM37oW9O+7'#GPGR#PB2EAeS`(X^r(Q!=1??Hk8ep7?igAkTK9q@n:o5+QuD39`"jHULBAi]kEM&F:N"J8-;=Q%WSns%)%W)CM!5)iDNO,*F>s>YYQ3&kUhr=#`gC2g&D2"f"'1;5o)r[Qb@-hW9K3,D1C,0um/]`@NsagO)6f;1`(&Yu5ll"7d=\eL%Um7$Bj<8h&7mYo4#%$pfG5rEHVh6r=7r\RRXQY;n!:2:2LEOq+@/tmn0^&VF#l@&Z!T1sbKYt%WUEDRU5]d5p#>>82Fo\.<#@*_u%)(r!l3?!kIEYO-g*/%`-WrTIC`5)3Rr>=,e<[UH=n??B;l!_QjY`/F_%XAO./]cs`NX!W,'Zn`H$0r=Xr/W?4W`[pV*f]2S@:$GR%.BH5RCBGb;E9eoArg<f)_fb1\BEp5p0S*BBb]6gjZk!L>0S1$t!H4\u+ifN,&>=UUo7Fq!ok;$bEkO4B>)"J"35tF)3b1e`lO^mi%"oTEA$udpP5Y).9LXlJ8\g*SDO4GJ.o`Er38+U<m.op9\gb0:B#F+[u=GIs!6\&qcq6W&nIK\s?i`')J;AtL'(b.eV#C9\^l]B"F%A@,f0XB7faaC)Zq!eTpPL!M@Kg0/0%;X'a><*Ed0TFSn[5980\dBG0S"PAhI1b@k2$)EJhTK]:n,Lf89!N>]XJKfM+!4iJ).7q]2%$c?@C3P?'h`h5NrL6a%8$@ok05X;!YhQRM9*[oDi"`ZaZ;PZ/m]bc-9d.`G8Lun]I>JC];;N<+dTRasE&=P`-HNC&h4WpFi(+4A1%C([ZT9_\Dd+DW\cJK@YR+fGc?'W+'u6Y&WY<V-Vh*s;W.8jP36niW_#X.W.;lh5mLAHB$G)!K`T81(9f530XjcUX.`a'h1R!1O's%2ZV,DL7&SM%5]T.I_a@kd1B\$-85hkFPum9-gbQ>M8k2)!%;J@N!dpFr!:r$J_Van'E__kkl;FG#_39kV<F8b!#amsLd:M&diN1Z%]empT4N^/W:i$M%\/GCtW%)m0699'8kTBuQ&bSZ@"HZ[B2Bd/F49:gHRMS+0j8dI;d+'PdU)q+c:PM:r#_p#9YWWi\#[f=fAh\gf%+e/(Y`=R.<?Cpu.,^`Fd1OqbJ(k<0]_dn>[KK69Z3(W)&*tFB`JgOM"6OX>EfN]BXZsfD]2ZO)>3A.H`9N.>=if1f3^aKH>g+]E6%dg2]e0rGK0>eC)r;OHM&R`71@3A0/:9EU5oE30Rjg+WsYfn)5$R-*B;@$JSL(Y9@u.Elf%7U[3CP_3agR+$e(IilW)Eso!9'9gT,%`2'[C9e$=@!l?](Pm"IS50CZ\0*I+PnhMCK+N;2E*)KrJH+jfr!RS0.Q]uhbnj(27%Z7t2P'I3$IKAGJ+(Sc@GDE+95TUUgUG,5k%5raZ).;2R)kSHUR<]M^pU7VTDm-e=!%NuXqWR?Q]2C\sIc%%31,ER;Z,YLeaBEL@:lbtlI?Q^f^."NJ)>=*36KI6(T+u^N/j#t`i%P.[.CBa!0G:'0(P4k/hKb^n%>A.>tZQDGbc7Yso/0Z%'39O+=d"8X+4\s>c2'Fi4s/WPpZ(IQCKOqL]2+*%JAjlm&X4jn*C-mN13%g'q^R)/SIK8/LDWOI*hm`B7f7EcJG[7sKcOpOOB?+V:j`aSPs.=94'^FiABg_$]jDKa+ch1Ep`tOLGW=84Mg7&V0;,*\m.1/3tL3%:_NlS!*rWEL#O3WZ3Zm+XAApJ;uiH31+gYDHPpA2.KLWJ7aNGpP!B5&R_fDs),)al+E&)+Ti'&"JI7%j0$F4;:\nc(9n6[R=7PlG%YQ7"THiO9Ycj+U_,_s#f%ks(&N(bMujV\=GBK0\59^tLW7$oYL;(cPC^i9.Cf;TK'"JF`TS25[OkgVuH(!EZqJ3'8&n]jKEc2bqm%!0n5J/6&NTNR/mu6A6?M0N\Tg/-B8o#d"Z2PlNn%![%'t!:l4Ci>MlEV?;-J$G!eB6Gjj*\u0c"NkM*/;:?RI]!lH.\@[Rc+ghu6%`AHq8[U"Q5#knDX$0]TCp;3t<`:j>j$*_$M0C7C]9m]1p"P?)Wk1Y"+NkN7&&5YB2([]i_9m[0(+Eu59]qBOGdiJR<fWc7J?,ZK!%g'P!P%==dc(Z?FP]tegn5a(Mg?+Yp]"hkXXBAm1LZ&>'=<.62AQ.MC&!eP7nZ<@U61^'TkK#C^,p4H'>U2Ca>4Ib;dC'cXL85$/f%5tm3c,T6e.J`Aa]<$Y%mB=g/H,SVmVOPir!"[iN6Z:KU!+HRC.d1?(u#_k7$;&02<",#fi</YX3=YK.CZO$[294Bi"&]-Hk%<=3\%ThPk^7JINdE>#1"0g1a<Hg'!<%*MKYXc._Uo6VUPQViWhI:Y/:5op#_VS#cXCbYV2)/^:gJ?ije"PeSE7N`7o+<L\o!9/R\,$60)%dQuT>l1]oM*os,21^lZF$rD#hd:3Z>ojET2e?J%"6:INd4=]k+MZ0"S&o(:\0'S-[0CKJs`b>il\<hqQQjj'jo-3Xu\M"!fU^uMg%"FH546'Ua?kWG4I.A/87)+@C8V#V"4XhnJ(Z9X)fZ33'ZLb^?02aP3m1.EeH#R4EA;1s\-"TURR#@R\0(9j8:LAau,rf.7.fW:^A%f$>pqDW,XE+4((!;WMLes8*Z-Vc\bMnSr\[!Y4J\;dV]^F:b77U7-ERb&=p)'mIR&>GT$B$W69eP<4'anrpR=>UqbI=O5mAn2q9N%A.?*h@.$S5%4Sc/F[<%83E9Ig01l,_l8@CR0J+Ba*#99D6TW5+@e\q8HrJr`J7HmrosH*sLrck+iXV^3*J9H[3$*=flJ;!LMW2S=%4!s"\jSY`(Doq!5@%!FopYA#UFnGi&Il0BiVJj+4`cS.drj?ZbiN:NQ&T?Uk*Y2n'X7+ZOh1!f/jA_\N1FhMqQL<s`nBR#_g3jnV%KrUd@>oU@i6VZo7WNNr.fSI*tDD$%gGiR>2Vlk`7QRdsa7G%0BXI,?poEtXCmN4%CbA+="!La;P\4s85kSU12NRto-lGg0S4MO(G%G@s!^bGj2nY:h9ho8Q9\dq*'4S(g@aNNW$]n#WN>X7F91\?II66Su"JHnBW-SIQtMh(=Rf9\K@CdprL?"7HDu9D`ti]RRVsEZ#h5%1_Mj/KQh6#@[2tj,L^-c<)^sLF(.Qu+efd"[@Kj]SE'*,_:oa0M@7Ai6Z-+eG>DArr1<l_oloPeYn\QQ##c,=<6"CPJEgPb)sEZ?%#UebWh^hjX2r@pK][@(#OOIHD2d!35=^TQoM9=6Q<%nM2]1/UXQ_c"p*1Z]s'Y7e+[CBY2:j`oc+;Q"e?E%SE<*Y%`l7oPOdk.iO%`mZk:4'b0S04V(SV1s/n+rmmU,RW&]"Cis>COEdiaa)tSC=cm=bu4aWWtao?>hVE7gHY^Is85@aC`A^o"<S=qnYaPh\f&'5H'6hT%4GC#--P2tjRW.QHQ.7MgC'S]un%6]eXJR-?=R4]^cSf"rlGB-dRNS)eR?3kn0%i_]e4=:]Ah4tfP(D)H_X2NSW0X@9ZUR=qs)0>2%13&%0d"Q/^8s5j[ZJg2m/Ai30UFUNlYA/uC<Q>7!K`:?i#OGV`]T2X7;]u?eq_V9gD_Wl4%-E[s9/RY9j;!U6EpH[C:T(o!FeHUt%l.@>mZ'UeR5]oHRKWdqBC=\59<[SkHQ/h8s6=L[p4PjBtjILN>T#=6GQEPY#5oMg9.Tb(%CQ-a-.?`LPEaRk"!iPm'[3oT8s5@gK%H>&EF[ji`d:*lD#:";)D(n2-@?*.<3mF/@s`kBlK)!X\n?iY(+&IO,-_oQ%EaeK#qjJ\GBdN.p2VI;=DRnBKV/Lm4;Z)C'=6&^pJ%CKuu2O4>")gfu`i$FgM2%F,TX6k=>$=>>[MV:XBi+u,K[_:L6;`*a.6Oh(_A8T6U:U1-$3"q<5dUBKe:Kb?h=g/?ZdC;5:L0WWbA%U4gPE!*JY[PnV_hPX7Xi=3\W0HX`^BO=rkUARfMX'"1ffgdB.?5g;]Q*>%^RZCo^n00lDD"E5+h%RX`B278Qth_;d2$DO=F*fC=P%:g9,/nYI"[b)SQZnWJ\Fa]RQ3>""(84<0ok`(+^Qju-j_ADJr'-7pp50GiBke[/lNO$cYOW*`q$!ctEndC?r\[Wfc"*TP2kGU6k7%FTkh!"l$.G1dc@iWd'"6.=Fde91iD\b/3^]ldU/dV`"gX)q\r*l%n&WEj!1*d;b"K:fb\,^"U%Bh&(M2&!(Kq$/`J1i)*Go%G09e%41AYQ52<a^=o?Hq[pfSaMMoUMXL<7NJ`b4e@lHG#RO5.bBjt`/&92oih-/9^(.kkic;NJGdZ%s!Vd+\Z1[Fqcm+"m_r-GaP.pemN%@EW(OeXWE5*Hs!&91KjqD,'iDG;FlN]1:D7lVTGPWRL.tl2nIM8q6s`*#Z.G#&Qf-=@RIEo<0`VLZu?-=BH%j.XM);=a<\"f()[D%EiHnS;g"qU+\TtVK+=S@:$j'>B`'P"$]4i4Eq4NRc&U+OX6nU1fjpraNiW!sZteuUa*^rq"/_uUnI'*X'ZZ:AJsLR=QJ\/>)T?YH%^,?eV$K[Yh2&%f=Vp',?jY;^C;/McGPUtE/V976XZGt/paG++AMIf_6lR:5R1;LAgoQGhT#;<8H\=RE->0kZjUnKZ^Y6An!N6(.a%#2Nl_C^r/#/8.b/a]88p,B[&H(,Mc#G''E+8%[//-5BL-\*Y-;JYQi9YY?*<98&-ZUPDOGR6G/-h#JWT/2N)b(H8@r0uZbh\q%Yb%NJE)7P&BRj6:gMIo6'rCF\gHPo.E)6(sf5HC0&#MXj9)4HnY7l[&)3COq-Sr?3Qq(Z<ZM6YppYMW$N+S-ccul9*N_e+lG[C<812_%BRE=qQ\5*G$WODeLC]\ce!Sk:VjaNK#bK&32M10$)#jddbSuuW8WC21\h$TR'-g.bB\lpQW=2LLC-0iL6bh#(9rENap,8S_0L&ui%+4K2T:80)-MeLlqXZt]\?@jkc#G=^PEE3ra=*P(RJ,X^WgRd(ManXJFr^_s/_KO*:+'>Cb2,-Y`*8E7-:s8*hg8/QOXEa'ZNl^;[%S)tjZ*?0>ca>m]`qdZCkbnZ.k?J*hK]&8Q&H-F)-`bem.JLNnlS6.h,Q]A=obFa`H9f2SuoZj7HdV+dPL=a_$A30-RI1BpTHXKFY%C/d[eaVeru/MTCcFhe?*F!b8bL=PL,`JQtC^_+]_Z47h<D=mdW@HqtrE0Pham.&FgL*'ugmV\ku,J347gqe1S'8I4(B$k6m3F^O7%q43^,h`bLk)q/q.hBBr;\isZ(Lb?_P<h/21J>7u,0!9mSVA#LGg9T%8>S-5>gNpT,WhtGs&O7`1=rhZ:XH.p<^bScrY3*,AdD#ft%Iq>jCm1"(pd+6DDY-G/_^uBuVTMPp1'*1Hf&b:H\7\6G+Gq9%D??U_9EjQRr6-X^%Qf`u'b,^T0]s)=4V!Z18O4jGl8lB),XCoTd%1L%TAD)TW5DM-Y[CC3`qNi=&mp70F;aXWc],N(cJ.)V*%b!_dJlOuq_Ue"#.Q-lu(YqGf`"#eUC(1qrE,4N0c^k^gZGfg7u9[Nq5%W<]$=#9Puih50d>i&A*jq6UM9H6#X[_<3\mL)-jVF@@J=.lN]f3F@Gb^[e\M@7=5CEHBIZSt9.UVKtuVHOd0LUZS/s4[$959_Fo4%p71J`[&$^OB\_6RC/$rU+N(smK'%oS]$S?%Y.AH_EZ-p2hF2+7d&b$`T@-9""EOUjL9&*Oh+C0=BOu>jgK#@;]R%8iUl"M0rJVJ,%BC'@rh/V\+YB]M#Re)Ba+7C'fDa[9EQVSkO^m[\N=oFb:j$4COiQ^U?:%Pi[8hZ-,k<4a@Z]P*4^et@'9,/GZ<5JUUV$[]=.cE&+%8ssf;jkYQYApY_GM5XPa/]W&j'[B9JrS^.JgLpm]o<p0tD&;_-kYV2>2S$!MTfA-VaSc<9RdsQdTG"F6K<J99@L`T@q$%?=7dFDI%_cbZa2jkTAISsK\]5=-LrC@H?`i30*)bd$XOh3MqhT\+(bbL-.mla_$ODCTg#MCj=.VFt,Z<Bed0M(C@1ZKgVp[CXXF-(#9*M$)L%&D@:8;bKkdqZXK4ceGf*d[p,+A!S%,bg9biC65J<W^&EJ0]jb,d0BeM"$#U#>nI^K.?X#Zj[*9qka3/^Pq/HfhPq(tKjBPeK8R)J%T/JjCd$CObX"r1bXP1\.<l7I265ft;a#a/E*%CpDj_FVCC;&'p_RES6s0].IhFpUWDK8`]9&5t^Sr)Q<qouh4J<dP:WF5tiCp,a#%!tW(&YRnurYXCGGcDdLXQab[NCDSF'#2;1B[X9[eD)$t9S(XrM,4WC];7bfTq1U(4oT]q(+]>XICJ^s0(Y'4c+G%@A/L?H9fV-UR%CRo-rUaBgnURn<6^#id0G,C3Ki*9X9:t$oVc;@c2+*EQQ5?.@tafr6i7?1$AUa*"X"7:KlZsX+[I5o.'-OFBu/bm'go:$2C$AA-.%]_@l58%+2$"RV$!q/=fFPkAU[poVsa8S;221T6j4=JEr.&`+$>9IlCA_dFJ)rLI[B5CiZc['hk,qW0QCcRAE?:ae:;Kg(n_q8oej%s0'+:n'tZ3RdS\+gWH331uG3tDiXCC)fO3;Qe5"?J"!Id;3-A;Y2sllH$L#WV+7Mp-`?Eti\,jOp](3L+#)\nJ%E3rDWUcfTf:#)%#Y>fZ:T\q%d,qGXm_Fnm_Cp*8Sr)Tg-TVl!rOAdI!d/-fnuR.q#7Bn4In7T.&@5Bp^Rm0[osNFH,/FunY*s5uim<ZF>Fbd7EA:VM%[hL:l+M4(J:*EP==)+)eflC4b%qhE/MJZ`1G!%_Po*VbujQ9JH'H!7A)tWaTI!okGp2A/(+>0SXX!/3rJBB2%C1`>^qR>rn;3<0/%g.eMjoSWl2pnU(?%r1%@1b]<oHRa3BCt3T]h+S.9qQNJZM;X2jnlGEqXD=UHEbLe4[+sW%(`?FLQD^(RT![`EcqrRN#r\nSkcIZW%3]ZFP_<WgEjL&+=+r"?5-T.bhBbc6#S;kdB:m7(,REuP$7A"7Q4Q/<:-e\Yu+9a*um!'9m$,*Z;(b$mT*XP0E0J63/I0C75+E\F"%InS,/T9(X([.SBf@h7\md%9T/D@Bc<Ou++]hI'RqEUOjXq'2to&2DIaa.d+,jqj;0rC?,!kbQOmYG7;8)Imj6e[_.n0+oY`A>.W,%.m.kdM:*9m@UQe[h6u8/`H[#)Wdi0P?67jkP;T^-UK^`m2aMaX?&ijsIMZR\C"gkm53TKHM<#T2+i`%^2R&4RrMeOUJ#X5nV-8fn%P>f&\lnr$u0XnEVCR*b5Q^b>\0lt4-Rhpa-m^5W-?E`d=Mk=1K2A'$_/n[m?Eq6=A+a_M4[5jl%ZOu(gTfYFA^qHD1_((.i6`2e,%7')M*(-$8<)Uh'OcM]J7Fjf2)`DjR;IT:NEP?M*,?Z&\f0h$5>-/3[aO0n=G.\<a)$Bc,Na.tY@Ea*-GFVh\#!l2#T4^lZ&(>5#T%X4;;H=4j2Z=d"aNd(W])NG$hLJWY&u.00a`6oHE71hMhJTER>\X4*/j:tb)R,=CrN;rrCIoj'_o]bBcLUQOHf+juTT1T=<*pqIa1%gU/!GCV/R'VB'Fu3!fS4$]Ei?Y<\M060^7/+;(V*O"S@"a+:!LX,U:&.<\%lKs/7_S"4lEJ&$<CShE>EpF)SMMbnEi#)MJLdV'K8%Z8MoD9"UjV#sU_ZbOAC<X7"3`d-7X_l)`_jlYPH\P[hc=>#qTTJE/S.\9!aag)pW@WHg3&!5#bkho7(ml@,#T(-d+]oQnk6O)9*p%Ai@R\Xj@^d_>\Ro>-AAaIile(bi=#t/M!c3]4WE/o[F(>[5D2-%]/$[#uS,E0`;ntq?AYO(^T>I2-ESq!W-b:-'hPD)N4a^!`h:_%eqn/m)s<Y*k[bjuXt;?4*H`YjOU__/o"EL([g7`DUKCf\1q`=fM%<dFMsc#_)O5CP3K.k5,5k=_oKO`j&(7lpd%en8lujrQQ<@7A%:;_HgZ#515a\:fk)u$num70X%<\X`]\o%>tGl_a1`5NH)GEbBTqLs"7Cg8#TQK@C)HBB,J&pq3J\%r>,'^IZ=-PDK)og^lV>#rmu%JpVlG/J]:CDIKMr=pW5EUg11:7TP8='Gr?fBTJ"+/N9$O@_+kOC9]i)%<5R"^S2CH[^LFKeqVPRJ6WaQ0bpk,>M.M/LZl9hdSRa=%c3tDXDJp!H3oTn?b0C@677.P5fNk(=.OBa&;mM0Oi[c/]-*ZgI<nK:d,s*&7;44nM^KHa9_Wm7]\1$'"Xc(e1es`TEMQ(d#(<Zfg%SU>'#ea=bDC.Dd3lpa$BDoK*"bGSY^6;Fj-6MR,!N?]"Rd4n^l;=FheM/@]JDbZuCF'-n+F1,8Z?LG3/V7p<kA_llg\ur'pBO1SL%^U^5I6.49JF9UCMZJ)oq]Mp[-J6jm9MrVcp^EFnc_:,"667@tZkT9'+HAr#6#ZMRaC(3RGKUtNIRY=)]i/*)b30Rg;g*EHL(C9&;%PS$3`W0gCbc#a,"<1<q6NGel2T\>[r*7Wd29&Qs2O87WN<>q:jCO7g4<GBYAe1&_o[HV/.WH=cWnMD,qXapgT2[E*b<OlOR-.^+H%p1mCSY)16jQQ01fr>'-.G?M$s8RhM/&aL.E[?;fOZI4i+fa/ee)OCaRO3iu.h[25C=#uME#hC0fH/t+_7@6!d`=%t$.+0aEU+%mq%pLl*,SC[>.hkRG!E#R1Z]lRZbPj/H>rCcIIPV*"T;gja>W$s&Na_6Xhq+87^[!:l%&*i7j\GD*$o^/11Ul_pO^&Lpu-s$?j=L#\V%&6tSh5O*1`I`9S\[JSr>i+XHR9Hg[pqpO\+.1Q:Bal3F0UqE_2F9S0S<k5;tdqd&`CW/ZA3'%<2Xccdd#(f]umQaol2e))*>&u$;%C20rk6X:b:@OnU_WQg\T\9?,'.?D9#86?62NPB%ui#=.$>O9Y#PRZ#d;D?i]*SVP+'.!1XiQJk'Df9I8*n^SERC4*;YR$7AQd\Zi%c7&$/m+_ZAlKWCMCFgi,N-8o;s4+2c.NJkIa)2jdZ!=E^1Z@BfEeRP"PrgiE,qMFj`kc##Lf&NCZ>"LeTMVI$'3U\i?"0$P&2LIn%p3T\'PnhfTNt%oGKZBU',m"_APf!l?=@67?<PArkkI9o:qERRP*7aoQA7=86XQAA)<%Y@)NHMABiBL:IYt"DtbinP"&h1A:">(0V%g]PX!S_taYe(7B^/CHp&k=_/>"a`[m8q*!D#n*#EhO&WFR/3['<SWbNX`Z/[][eG83fBjLl/]\GHnpIc@Uts3fo<Ug\jW0V``aRW%2^HaS9-EgUD<0*1QL=6WMgh8$38Q0](*g-)kc)OO?+#5eCleDEj\1-$WhM^t*,,&b&VVGs'=gPO)N\.^^@;^20[*Tdm6/hRWqno+%5W0an^qnbk9^*Ec\J?pK?oF*\g,RLCNUoeZ*6eQ/(-5j`i":oS>saG7>)M!.\@E"PLrPt@,s>bg+cipMmdGmh#RfV)A@Y9@MdPC[%<D+]`.b^q+XDtdOPUs_ko:,!/c6B!?qOu?_eA3P%^D96_'r/c2Q9dMs6]SJ+gLqdakO,hF=gaP^HM89Ngab;*L.)_(1+\]p+*b=I%AjT[0)^=gaaV%!U?+$,(Yj8;#M)XG'P,p(oe+e;S'*=$j-p]%(.GPE$6NGVlC(@MI\bg0<E((cn-sK$"lXjr.7dhg_a,$1EGV!8#%S.kEXDXHSm<9=1`%T^gofr9N7Ji`1eeLJV#)JhYZ1g:t4Si,"TgCV+K+]?^#4`TlkiEH,gI2L4p:^`VI$q:lFDS1D[j)0uOgK8cp%AR@*bo?rjd"/^'ce0pWm[3]7CS">Wo\rnd%;R3(aoc;2HhkBDD<`VT!;1-`,;-Bl:1o+5=$i;CtLEJ7gmlE5>nfmE9V#e%Si.`ER%<dX[)9\=T#X&sco@NqCBBZGNqDDd^=8DSf3]0N/p\4rDlGa'NZhL-Q'iTepV"1SXSTgVoP7fQG]Lp6Mfr`0&qOh>d8F58U]L&^tK%o!n>X7Jp@>Vi.L`1Udh<[?WnJ7uLJ@#t(kGH],ltKg:!]1s2_Bp1/(RgA1Z"8J8$*p@8AjHI[?!i'pQ5&R+9tTo@QiEI3Cc;*H5L%g6aqGBi3oZesM+oSJkS.q85+sVP[Z.]9037536*XXBAZ4lT5tdf\K$&:UQVL4<m-O0q2Al1%RZS(;!UhX>Q*EaB-kdng',rnH[tT%;jn#=Iu4Fa`<@kELC$@cTo:4AmAN1.n])03gsT\b]0TZ^@b)b]`o@g&][;&P><U7"oJh&n>+Y-?Qf8q@eD[GWB.7c0])dK-?1)G8%\0,61a3AL:mEaq)KD-ou(tFpu:knOU0?LGBA6O;:GKhes1I"?f\;OeMQogGI9iaRkS>A[*CH0mT3#n_<ALCmQV-I'H>=:RpR6^2[%GG>uredH.XjFF5+L(Fr7GQI!79O@GF+/i'qn3/L#2SBrAOh.Ci.dZu*[eCK<[G"&,RNAsmNUESOeifklS(SnDL3<B)l3$HPmhs&j%hUl\[S9r'->Z#=`%8[u;qo0>eI>ClOJ:U#iR<M)U."!Lh'hUC1=39M2E\_G&=]Daoa?Q]t$f1X_:DHZ3P/]g!dhpVhb*lE-,S=!q%&QEI<P9knW7@n4hmr0hRiqgkoh!_N'hLm7%G(I@1T"62"FA\BdSr%R3-*kM_1TVa<T*a9gRDo>ZTDY<FT<'J2YC4M*V(^*ZA5Q&m%KHm(ce'`Y2>XF*-/hSV>7/j/hYCYt^koUq=ThAIcJ@s*67!MJ*V!?45*aXK48uMGG)n\2A+f#[p(7oQ]0R&2G]A[k>S5(b/[ApCT%KWqoTOAGpX`5PDOOodaY(<=X?pm!A32V/d3Kd5icJLAKI.q,HbVJ5;Gcp-WBU'G'<>\lLkEdaWR3LT]7Fld=HcbZL<op8_Pc*Y(F%)8S^-Ou"SkJ^?4AP'WWLNBL02mPsE_!0`43E2;q8-`E8#(.]c]MNG0!`Z'7bUf&MS%&?co*[^NaJFqsS>h_@!S6L990LTCPXr.+:%>gesFP3hi\SKl-m^FE`nBbooq4[[SmjcV?$UF4PDdKhM@<qSa/%unBUMOiZ_LHC&8@gH")5#DPgdJ5WdGI`qd1UTEE[%^>Q26L_C%U+Vf;pW:uVBka36"49Wp9O!!jVlLH0-"1p0D92hgEKX#rXPICD1&QfDj(EsZLV6'uK0kGt+ei3=b3>Prj!^^t=Z_;?m]@e4[sW^n%#&"(#O?UYd`G.%R"thjWqYqIQKnk;=lJS)+qT3&AALK!+gujkX[]<\C1L.7&)U'4R1E<q)m^W5*$)#NGf&Z3G?.rcn>YVPf;l37:%ktK\ui3OE&/iVk;X!LWdhmhpF.d)JZ2goHR70Vhq%Ic`*1%u%46Z59J]\Vip;XW,"iihUh\TPiNLeJ]Ih+%8,=ANO,M;#?I9>!'B%OEs(?i@i>F,l-@K>7s$*ERY<u+]m)tSrWEP*A\JS<d#U0j*]C^Y3!,]RuCN_5g`N>DKD<@\Pj?[9P^';[CU3\-U/?TRdA5&>\#ZM%;2)s0Dp[":4$*Ka$$3b2\fiP/j=$;Hl!(B`7X.1*@R94-ggM3V3Kld`s.dX?E\F)%Dcq&uP7VX/P!hP=q_hQ)+JKSG0mM])5i7tS%]grWK7@9Eh]h$XX`8=S5p9.8O<^F<[f:m>$+sMcC[C7RW]ubTcfr^,^kN8`RbBHf(2&dnGXr,o_66IlS8eFfIjG0I"3bO[O?"3O&%"_Qo5)0h(AUAHKEh+4G9qCW2ae`Q!\s#4.Scn*m,l9Jq\NbmL6mY,f:T@U?>I;^Y[eb4\RZ3b)FC7AD-Drn"S6A2f"l>"Trk\_pp%TtSUkb*Cegad<CiBZ```@q;]=Ud4EHP=]sd<SmA[YPKe'Tm.LPB.@@1W7"kQe-0;203U*lVGdnr<c'arA8&FlnWk+RNY7)f6UXC<%(5m%dXQTQ76dQX=FP/"%CC)^b+9T8K21I,$-4$+fgbp&HW125s10Nd0;SRENN//mN3+4p6d.s5cD;F@'U/#TGa6(:1(+*q7.`Hf4%HF8hp;/B8k.=J[2M7V_c@*.0orW;<4QM2A<W@b=GZ<A<5Z&KTlM19FSS)g/$[a3tQ0AeM)@`KGjJ&`gei36>gdQrG@GPgGBDC;2t%o$goSXnIWM=R3I?&5!k)UKcPDHED!Bm9AO0BGpnOU:Lu,ODU&=Ri4$;6eah8k#'IfAT$M>$dI].lGt(fjhhutL`0?\63e?(Rtk-'%Ka?+QgKrr$T1*g`;A;\@MO4eOE[!RT,9:139u'I%Rt96L7gGFGIUHdbJXM!!0U]^b(fcP?9)aDlIn8i]j1)CK#3Nj="YI,-Mj5Tr%3Kk2R+=,*gC8WTJD6;KW^"PB__kt0j)q_L]/O!M[J;O]f=[?8Jpl8MSV?\h$,0EFK9Naeph-_.JpgWPW>kuC&ZP#>bPWPRC.t[l=%R]%9SX!HeKZND1pLPO.bB+.FOVL!7R6q4l,o@=8pRk+E5[DH:>.t#fLi>]6mgJl-L1?Cl;R-s>Bi+p:Y^1*[^MCj2^R+[I99j8eX%8iSn;'l8LcL"bY^q(&H@n5B@QVGABQ[l/DjY4`I#_7t"K]XUC4G@WQWKK%h[]YNflKQh@Q1HVPl?M$PNH"IT<RuZC(l!7V?oe)Dg%h8N,kV4Y!$#"\aW0pPljj=U)W)l]"R/hTslHGdmTNpa/sN677%Xbl=2)H=MMb:,7l2:L1:QYE&.R#8Q<Yqcl/=94i#]%G<SnTp'+%7Zgo?jn?:`:>XcGXMI#2l29JL+H!X8@(^\o5e;7#Uj1]sO4E=-[$3L*o=n.>4A$0`6?1Nh]=Q@tIgub?A4Wq.UIR,n[)MX&M[H"q%]F\A9boJqVA^c_FF@Rp?l`4P2QdH1`,u.7`ac[HpT1HrN?%'rIZP%&J7VuH*Qae<d3nWDE^79,efT1\aKUS9b%3iEZFPlD!".%*&%M5kq&OJ$LgbIdc-fHeC4kNK5!5>$I!k(P!Q@S`?^XY9o1^RNI4aK/*.A5:Qg-5Ya:hBr(kUG7B<'iLOOj?f?aeulmb,<Ig0Nf@Pi%PsFpOh*]\`DoVTMg64h:PaPJIS9,%:6G%42Y*bTiJOODn8j^YMbr])dY@J)bOm0Yebq\4kG;WT@et0;+4#T(!@Q(`qk\+AZ+Pe&F%oh0&,IU1ABM$!R^XAQa?fiY"u.\ei*[R3dOeupZc-?qBI/l,QMkg;e^c+Xp/NG`fps/?h1gm`'$$>Y"V2#2fn\"F]WeTQ^EI1Z$m%q;qjagYu@^Vj<R6\%]Y5s"KFrk_k$da6A__ZdiP@/8"tJ`e<%N8sF8V"D1>T`_A"XUK_?NDRsh:l=NB%3#U:q/["X?FK\`t/b$Q2%NdR/j-$B\S6Ti&-fG;6U0i$+.HS8J@0QlW5l0Xa^KCI7I?,d1f![XP>i@%6Q$%o!.fPk,NWNX%gQ_s;+9'pNdDiOKH"jM>-fXR*n%:Nj]B=l/I0,PH&c@FP&iZo4Tf4.HQV3u8#b$Y1@B._'/MT*)]L[ksL4Z0ilq!T(XAgHK9MJCf(nmW;]N+,`'t`md3Zn)N9Re-d<d%Ga!lq@+/(I`siaaEqY_m,2m#`gh_]2\#0S>!qB>DLq#?DcqiRVANK",f&IhRo^&7_M00_Joqc<)p*,<j%Ld8=jeXKbO+<@eX-$)b%,5X<YE/Y;o(oYk"Fqfo2dm.AIm=c9c\eg16Js:eqWIpO<n*lShchQgM-lh8(W$d:"P/&R[<%)or@0##r0fSB#W\O(K7,6/UB41aU%(`p%JS^?mJ9>^S\)a!<WjU!3bOm^5eg\IfS]VFLq6KRh)2g-S7m2XclQ1i,E+\<p<fMX(hisdLq?"'*4Sqct[6#j^'XK5skD-Wh*%M5SN>$SU[EeUj^Jg4!>dF&fX/5D'Yu<_J\\d%87$X*<bd^Yu"Zo0qaTlX-6R<9p232/GsGS5_=7]QDa9TqQD*n/'C:HueGWL.F8:%T?T<!*nZXS@!=Y-g!-O#3(*/SH+<)3#"PJ!F,B8lNJIWuA?gFG8/HmVXP^DApII3GA3>7N24ksR9K.S.HS]!!gt"uB!aALLYZSr;%oX*5%)sUPp=LVg(,-lZ6f-tAt#HbrZ<DIl"n\\;n-`=`9RL.o[#,4c?_gWf\9Z7ui9F4<K2u;,/r)DX/XXXd\82NXtF'cIt)LRK5%6o,q?#WD9?NUYSq)F+_G<!5etI'kO8)CV!&lWFtqU,d73?rtk[4KBCk'*([Ma6F-4g=7Es9Ym6drVD1iT%-)83>X)p5^d98AG/gR%Rt1OsS!82adf.eQl>Z'JQB99.]ribo"dJh_RGbmirNTWQpTQtVqGDI%[do]:VD9^0XsPE+&lSN@idoT/5ciNu;p#aG*1:4uFX!<S%VZlXO+"JUB\j0VrR5+b5)rl:+bQpX<hd3Ep9BbX(>/%!A!j@JfAeeuq[]Qd=R+A2`L8/)_BsBt0Fc)p!5t,u(_X'1WNoT9,#lB4n%heM5P,6[<GHR*l4oub:j3XSkW[q,<Gs.HX%a^QbG8o0GTL6R0&s2QX@<k[VV\I]2"+Lo4\VQF/%1_=1H4IOgn!)#b>5KYb@2/#]@%@Z)W=G@l\V!kC$JES$:(g;[0*f*!XF[cHeHeT.P:;GU*:=^+>e:S9];,^,6#o4H"63u7*qN6ijL&TA!K2rRUT3i$$4]+R6R^A*b=%p+]';/hde<hspe,Jtba+<K5Q:X^#9VJnR:0qb!RXOh@Nj*8Z>jPm3PY1#pF9II8%?^P![clW+kPh(HYm8`$H'i6h\1nN`;7%bnPh%PK(W?b6=77*Z^u'cFVQ74e_>,Za^ZD(^`:Oh>9ULF2M`BLc.)g$irbQ,*,)kFgupbnP2eS[H?N3k#qTlfo2s0Ie^<VO[d!MBGs.?%$UrR[4j\gpP9K7*BpV2c[;unmZ=(Q&LP8FqCu9kE^Ssae,[u@rAaINK&g^)0OhMc,]T=;V9]-%8J>/=SFa,E(=pQO:dZRo_jgif-%@&42,!)%?=@((>>fh>B#X!@G!W'j<P6I;d5EiB:i+B(F.MT&Pt*U?#Dcl.4ZZWp5^X=b%JRm1A.@-a#7MoE)A3o2`r,Gm2rR0d&,%pW1f_U]pRCWjm#@6O0!p]ULJ/!2<-`PSfEs6gd$O8=4,.o14bZ,NR\uMe&`LfRrFUL=Nfl5N#&M#s<XVh&[SS$['#[JFUVHpu;#;%iSW-&UHQn_4]WCLd0;DZN\t-FEhXJnb[J_)_"ao2UP,"t'`(@gV+)q3r5KC"&Wf8PP$H$m'X>8=-oq7SHE5>6X!6(&J>YF1:lkRH%DWS7qL[i3cp=A2TeGpfDiW]eY0tN0"F.'#Z[fe!opet-Wmm+:P%8.pTYpebqDM0?b<s/6UEIXcm>>*^1DSAR)A5m5;'c-X:6a$q@%s8%TSWWXYh`]IjHa/.7L."rdt:`dM#Q-6a;>?"f_%'?kod8AnWN;P%3X%L57Cs<1`Wk_Ntr>Eeq9.M0(T$+*8"dkffG_-V;CtR=6%-4>UKg31$?WM?1Gal7QDZKZdun=Vb2!J@[TOsQ"?R&.p-+Vgu3"C#q!&O'>bnIA7qjZ0Uu4f"\H\$n<ELPb,4SI2_Vb5s<:=^1_I%bEp?OB"";D1I/4(`"-]9Bkl'eR6(rVjAo[C":6[[WU(4-iio4Fd>F/?Q)f_;$qh>Y<mP^OKLL$>#1tXt%U=uu5bK0J:!b\.`b^6*%9h.(eD=?.!@P?:\S)+1q+7H(LRV(IJZOo3tb`PS8H/@7<])^KnpMdnrQ5DGg8!\`@P'1Ds/D\7;QK$Lo#V7=ma?$4UrGa'I<D]3*%MV^`38@MS2&JX_k!1+b)`+uqt$4s'*`p)6c(]".nj0P-,YII_2f/LUY;,b"'OUN["p7/'5#"4+@dAuLu*!:(YJ)h>Abuc(/H#E,$%kQtju9^W_H4pl#9a5LMQqaTL5CG<rI2O2rYieuM2LQ9\j;6J,T\b0d@6fP+U`,C/BgW\AJX@>omlgQ[=4QD_2O;7&%Di&_7=pP4k%fMC9pV95g;MEBct2jAD4#\5`g"W=0ijMj4jHpm1RGk.U=Cs)O(osdJjnnY,;7]79"`$K>WXbSlCeg%"XXV(nKOA2ipDlg6g+\a@f%\>2]A/EjW[,(L9@<GpXHFj!Krgk=^N^q-c;N'MYZ1lO]_mBg(T%>ClA4,8FYQST9=QI.N#RIqUj];EuLF_^*tm#e]t.CSpAkT5eh%CF4V!$%+`a.8d+c.$Zd@A:d`XOG,NML9qiQ<':^uMo.%/MPJ$`/uthOq?_nQN$ROS+q5H)kd,sr6iH4PPUe!r51V,2(tkc%Bo7?@%NY',2%IX*()?K)[0+:%=U&)Y%7[\(.oPc6-DjQ'GKB#]sMWJps%R':;n9:"^IX(\jkhK*jlR#b<-TAn=D##7-^.R[\n<N%7j?)JA%bGk+t(AAl5Z6]tY*4i21iHka6*Fl=eW]kY]ddN(sD;/RBno*N@U,M@FGfYK;3F6@RXbpn$Cp79o3&Rl'oF[o);2YnRLU0@]HF.mV%ntr`%fCfoJZ>-7RfDU\Aq)ZUC&XcOA3>2d6a/Y4(FJS7kis!e3iSLFO!D]L=8)p\p[S9.SI!m])[&WK"TR7Ar[q!Q@$Cu(44EMkB%;1$@RkAqDimgG?@:4Y*<F0H/l8(mT*Kd$.WYts6#_6<W%m@9nkf`%D,MFXKsiZ*.F[7`3JmCIg/d'MLm5Bos\GT6&&-;O#';6i7(%8MQT5o*%8r,Qdo#2AC7F$5/cEG:^d6HR'$=45AN=lG.H3`EK^rXV$#LB.N;qWSXoXGaU;J7NS%iTYIRBBjFGFB@W8n[ghPp,Db]b%=0L+!F0K'tNk+1]T"-pp[:9mf6B,sErYH)1^7(XESm>(A.-*q<;3%g64"d-hbnGA_#u,9;22E45pK!.m(3p\e"bgC+<&<Y`3*9SH%r6/nLY-pH'29r5_=F$p<.Fd4#\tiJ--HK:#QUO9XiiV-AC/p]"iN0N4Bj/lpoZ&5YL0`3jpY<n(kW@W!OB4U;eIQd=jKV3YDRGaR%5b9SDQN6mh1^<"q;3sP^pu;2HFoeH.;_a=JoBq,&_#'>&0BJ7BDhJN1qHL$r+(.g2pXliQ_@!'?#o4,BN4N.N.#Rd#LoQ]Q]!u&k%0n[.9jT@.ao'@M6aMf"0A$Re,]Vht_f,#qo4jL\]FS["Yg3><\CAkT04j_e4e<Lkkf&ud:gq+rZoZ(m43s7ht03P6__2dpq_sEDU%OLi;pU-#MYp2?*#n3q0hqr3:=dB3D]EIZRI\0ZU((&=h0B!n!Sa5$*-[OO"$U&$o8;-+o:!1iaI@FMF2(eI[D!d3npfjrp+EP6\)%C<Y>%Hi0%<=2*(+]Uduoh,bGgh=nKr]Y4T"=7E]9qqUs+48bWOP5K"F*$QRo4`S\Us0"Kppto7\m2Xt'DpIJm>C9#ef4?:1B%Z5m%#Y^\`:KdOgU3C*]2"]4XDJ<:Dp%e=(8_JVpQN"l7F`V3I(MD:H]DqAO8i^$+\+Bg$cVo.ZBk?^dLpTIuOD*MW&S^.)@"G?7lmKSc%STDHCnW%+l@W<K*Cq:-n03";[mn$X\?3U+1X%Z[u%_Sq!$SN>h[<g5`"hXOr^*Ti//sb6L.tJ9;]o_&i!g&t7GoG_;n\J_T$/I,n%g[G"iCL;JhPP)9[N\JE.3k_F'h&!^H$I!Qd:Y=bDJB3Rqfni$OSnP;\R5VN)X\N^'J-pnYa2[OWe'Q.4eq[OF[B]V]3.5&))^#A7%d*Ei>;D)3Z4up*`312ckmGAkpoZ#!q9$aVHMq)U)<t#S/c0aCek8"m9BtBmC0_@JSbI9A,]&pca^#m),<_:$U?dH3k(Tab^boIlO%\O2%G2q><?EMhV^1MPDLMXCmIlK]>$!5f/X-GcXh>t)^0A!+Wc"&A;UHmT@09\*Zn?*-bW(X!I_2HNHdOFX\B"[\j;As2E!<OI3`%+l0GML[lGR7jdm^[j/PAh2q;G@OGYrh9g!9%Uek'G0t(9mrn+qmOKm+/;gL-D)YDL3mC`)\[(JN?kPkK#pF<PMjiZ4):U;tb$/%3%M($:PP6jJdGCq1CaZ-CJ:u^kBVWT\K.l%DaVcK<FD7l-8?itR&"?87i2i^jlnb8gs>6qCsRd@33Yqe#"NYc!5/PEkmV/.H,/=F9.%..g:cS-9Ut\"mQb/,H)i:%gaj`F3er\"gV4j&$9*$1VWUc&m9cNp=1[['S#hT?O5;'mN6[DIa4^`.96I34er3cL?Y..2Op=coCs&%ek%/`lr'$_l/m'Q:#4";DtRdkmMEZIKkGDB1ffe^"*m&V_B(`lctASTH3l\1BUmhb5/r^``Lg>QA$b.5-<L$\^pkgLVf7)A_irb8%!2!^O>_8/RQ8QCb&:,?pG%`25&;ma.7EH.tUj'"X8^i")WElbp:EUc&L;I26]XQmYHZH?9B/%@";D43[`>N@%;L2#l*Q"69,kJI/%j_u]RkqFr@=SU82<^pt'Ia8f[j@Q7%0.UBg(;J_]+;I!FH`#Hm[H<_:XU[CC\@iNp;Z!J*]jla14E*LJ&+XJ;Zn83deA#d"=sKVt%P/QrC0JKSG#)J8%AleK3Ed"SrYAd)PYLSB1jGa^RK@'\iGpVLFC.IV2VARj6jXcYe+0ZQ?ZI/j,Lpc^.d]@@`q7%n!i.n&8*qLH.%g4`]MZco/5jghX^YlT%_lI7M#f+dld>=es^&0sSiWKDuG-P;aj&_&EX&Jop%,f7MVO8V)3`Qro2KD0i\NrS$c/FX0Od\%`^\hVBE%iM&q\_[-K-p%u`uQe#_K"U&5`06b6$#sBI0=l6`09:\#[8J>*-[PU;Q2Y:5MVm`-*T\:?np\Oc2G-MTWd*VrXN][X^'"(-?1&B#[%HL/bFZ_mAZWi_r"'<t>).h`pJ.Ok6M08!0P<7*)oJ0q'i_CDO8e13r8>?5!I'3I+8$%!,@r/%FVNEiMR,XO?;q?rRpC2%F_?d[8t%T2E=&qHT:tr.2.k"\d.Y0,fUopUN5lZYTD6j8C)#(%2>0W)/,!`ma?LJ-<)d2VIR][3q8[DJlgDT;eIDKuMP6BEi>JC_,joER6qP%:u>5ts'b"`-Z&*5f3.9X:r4%?o/UUYSQ1dX1-8P::3#Trn5HJj>Z">:^:'n_-L.f_PZ5p9.6GV7$SupJH4a8r$he`ghHg8P+T@L0%=8]]uXH@+Mk+SeZe\!U<X/96[)De//gSAF17f'utN:&TIq>/U[M5LJ6DoZtL9?I)[$+ff*Db6j@\dV=M)?>Z,[Ej6-BBCSLe\`jd%p\=][Yk]t$C^u*7k&;^gmt&?Q%Y\DVgHQAZ@f@U5$gScfa1hUZNXpn;Ih,Lbf:gVO\UTnR_#V<K'#0^>Ab7dQ-sEWhGg"9hb79g_%s/?kQ0.e[G8*edQD(DJ_1!upLrdS+0ZU`cP)S`uH<Q*o]nqa`*@/fk\G%m1;lD5Hr2bRb,5L9H=lf=T?K&?R\qY<(X>'#a$;0L(+%nZ#MEb0J)?e3I@YUHh#/:Vt;qgr0e@<nCsOc.VBQ3,YK\'t<:B)t[FBY>4$/9Zc?'f%13VJMX^ZWujc`/\uouc,,u`DL/jVS;UV&%piHu4[qieTs-Qfu"#-i_FYb`^"Q1L.?08)'`Pp1f_")5P^qJ<AD5E^nq1ikXa^(YNR`nkU2tgXkM='Rtl=%p>NK''f$.F-,9#4=1%iT^-eH='R?O%T8*"HK53/fCe0"'$<*SW7GVa,j[>L.e8>gN"Qm>@[IS`[Q3LS5rNrX9MX+r53VG;fUjK4F9.U'R,H5e5VIt\R*o4%mOed1iC<ogirX41"&Y;,^pn(_j(9q]ASX@-\^A(uVPFZ$<hW]r9atEHOe:Da/R\G+O]5C0Ng75QSh&d&2M]gE<V5n4mHFMqq=MUG%@/D$u^0bS6\U]*8N'5uR5jIe<6RC\]T9>7%!2g>&dfCWlB-GV\$>^fDj@qT1!V^eg:HqMuA=i#C9u*,n)Y;=\<VW"$#&GQmL+>L%%eu$0$RZ`3Se_$aQ1a]6JLXF3"duD)ar'-6Krc$XZ0H'LHN,n?:hqnOe?^[!;9h8m/pD]h0C0XeqNn3"?)i@pW@ZMJ>OG/?!70R_9%QPTe7Q,r;\C6@5]="`FApFpb)-rIr)L0B;bA\AS!*I\F5".DLm1,YjNOQ-;1mIc*i5+DSSkju(?0k^idGR+BL*RL.R(?X/[*hRZ8%qsD69*nLb[ca_[77O]:_9:eNY\Ach/&Kcj3bZ<BC7/l,rc7tmCJN>%[esj%h6rkjnW&YV\eBh@b%)7GSBTlj"k*MP)RpU?MPK)k\%)Jm!Kjc\C[oYh!o^Wa$K3DfK@hl+%i\&.]M"btF?rP%CIpXZC)6Fn;_P=)\u>AiiZrE&-aClH3MIGHB"\rC`IFUkftWck\ehR9JC%Me]+Y,RpohG@l+H^M"Ok!>?PNeoKs>@U2Fu;odY)k$DsQ+aoGo3%*f)0:hrfc`P@-A@f1-n%<H_W)_Hcg05L.?M:[Uk3>62"5;sp%\#@5V9eh"FQLDB%Zm48qrpd*ZIK:0:I>V[5BSABLX[(ld1'_](@_TG_*K2l81o^c"DNpTGKE@>?6`<;gnR\.AWl\F.#q^qPI&nlL%@/==Y7UMdH[BG1jWE;)@XBk<M->>>T9p=K4d*D(=]ZPK!hXVSeJ5ZX*g>qeIn..&2lS`i0bmV</hU(/]qmEOV_[jgTjnqN>V(OcU%j[Qp\(Sbn38S@,/h_2XaAoif[iRVcYmO.eHCZTD7*m,9I;UO%D1Y'p9OjjQKlY4p)MhBPA";c!En0[9I-Q,KBeV[N-)N]Sg^FG=Y%K%u0uF?`7@j=hQka'An4_bni6f/O`drU"!/NQBnd[*EM:4J`c?_;?Gh8=K>k+iDao^&VTmlQ1]@i,qOrpU,bd%(GRm9!e,Dj&WD%%6fH,-a5$V_q*umK`:!A8YD]Go>cYI7f,,l=Idbmp:I3,18]B5VcFo^s:76Eqb,_(Y2_cs1Sdg&?>2?!93cenNSnR^6QR7+g+SWXd%HUi1erY_m5",sl\BuB%k;BFg<?R6[p?5Na<en$f6XIRH5rlTopV>eu+9)isA\pH>ALks>;n4AfSLcrR;U)\Bm:e]/j=P[W</V_kI%Pa$07<L:p^67#2`f^V+dK48o?hbrGis6BD;6Wm_EFLAWu)8(?6r&b]LkQQDq=]F-m`>7++qr0p_,jH<.(TZXje3/BN=I<NLD-=dQ%h?=7[:7;m81ASMDGc'2@Z[:S6g@EAM/H`V0#H,Pun@8\BcR`dB3KZFj9E'F.kM-cY,]h3II]D^tqTt8e'+>BE5n''9[1BTLbT'Fe%D6UR8V:B(lYb<2s5fi1jbJgkkH9j97Ge%<457C`X6?W%;c.Wr+"6_,Rdn:RK,IgBcNoZ>k]bK#1Drj^=N>nT:BFN;I8)5ld(=Bi-%*U,3uU>q9cI#I'<DYa:J_XK4\?aC.#\grDa3](Y8]264YP($he5"q5;Zd7!NGfF<YnSDZ@d>2m$6ke%V<a3^-lkM?[DB^`OS)_c+%+oJ.r#h6[PX!$@mZu_h9dmRBaN$b;(ilaiQc#go6?L)UCN/uK;e)fs&D+;HbjlpALZ$9ftSTIqtQ4`H9]j0='0pLjj't^D;map*i%)`ldD.c8HC&5VYFhj3Ep`qc'lq"_?8H8Sc^b9\O8Z#nbKF9MMLMDH:UWB7h!?b6VGG/@^.m3Xe=QM+,R5jf&?@J\"Jc^E/&n;$K9%HI&\E"r-j*Jm.H-6#k#(nI^EDb^'DNbFWm%1(6cjLI8r:YZQC&-'ne)[N>/.?ifp#QeH3\.09]j-Nk^28d>cQV:JF*;X'*m+0Fl^%8P8jTF(u8=0iD6NV<O-7Ymd#$Zj(nN?&31V*HeLM_Us(B`L97i<BFKe-L?_u>L3@<&6u8'(*M<K@@(NIqV\s-Bj'WtBYJZ1-VFt\%G/,g*G+oqD$kNol:#Bh^6rV%@n[5cgZ(u9_Gr&<.)8*IUjAb-/64?UnN"R_AX8:G0/a-k!S9K++K$KVr?9lMOl!V:@\ckQpYO_[V%ALP5gk8[<]+(,d48@F:N=:D@ZECshSMD./W@44*IM#2TE-e;:r(Y?4O/Iq"C0Q:7b&-=p>*>+j992iH+nD)56H'tfnFKs0YVpqYM%=C&N1;"^[d?m$C_3CFDsq]s6&GNlVtFa&'S;C?T:V5_^r6CJRG;JAaD16]@5`$.(5V07g.N3'0m;)8J-r=U7-\`2][FihPW_CUL'%hkZrd#?F6r\ToD$i1V%m\H+6\9aauTr,R"(h-iaR;-4XhbnFnsB$iqu9OPgk$UM\hj6(PIGT@1>L9P<8E`LYXmB1"p77HJ$A^5Qc%juRG;=dR8M&!0#ZotbDaKT1o7&)J8Git^uc]2_&OK)a?5ibb:SMN;ZKn^3\\O)>HfURO/*\nU9$S%J4<9bSW)2"Au<SbVF2_t`Gm%JWF[epunU#8$s#I^-0$[YpVJF:MuWqjG*'Dc,\\)RpTo+DB(j_Jr)=$5V)^FF4&=7GkY2Hr)P_eB4WlWZu.cDH&\fNFtWW:Xl!Wj%UYT0sc[mZHOXpF[-X-(&n^5?IM3\T2Dt.mg!uc?"6_KBc@G*Tad>27Gg7W%Q@d6<ocSE"D65"=W;BZ:)q8!F%@U>Fe#MG[4"PVK.%kI]Nbra[?Or`=A@kbrDY][+BK5MC^%4a2:b[?3d[oU'oW3-Vd,JZ+L+gru[WdV65RL`'WW()K$OP!@/TS_]C0gH=kRMq2$>]bt\.%QG$GX'6M/G%c@?em(bg]!(<F=h[39iY;0J!"XKR3VUJ.kIqkq0Q,BS3%,mt.(^u[t)X1Pk,`rPgKuJZ#pDta/2^uKjgQ+:A]2T":%[-;C+(MsB%Hf!T%jdZh3\>>EjeOmY3Yl$F$k(mI;<"'Hm,>XJM.j!I-!I-]^ZeG9dh08;!%UBj&g5<;5]6@^`GL1a$7A4RMlY[L0%Ba))!3NDD$Ub97!$?MV/pmK"IRV>>75QR@'?>mLj5jU@TO\Jlo&A03\3s$V]n#t))L_`r%&-skg5H<[M$2H+U$`VB[D0C&<Bm8fE%$SlD19^,p0(UN[KZ;reUDKb`^aH$/V9n@cC*Z$W^c/=?V=eE4`\]%$%*AY+*fM1JknW9BE@\sDgio$"_+6m/a]Uq<;*^VfY#c48L%maWas$:`]Lj;OK],fV_&SjKSnTWO1.*JSkEFILFe*o>"oMe5(^PCQ$d6+(?#>1c,"8g&-s+/(F7Y14A'A"00!/Te'LD"-0X$1LZ7%Y4\"D.gDXK-ZHS'-K(^-Cg`5m92bWF+X?:4W308/U(3.BR`-tThl$DH_Z%eIGEBRnh7gdHeCfBfog5`D&j=N;"?AnZbDgs$\#Wo[%>1?BTjH1516VV;moZ0IQ_uQ@nf2DAHA^;iJ@\n^?@F!Qlf0k[QH7^5G0s92]VE$p[<&(DJ90e7$qA'-"rKUk&!@\Nj6Z*N9Ug0>r%4E=U:o=?qk('6pWd!:7oha.7WkGfW7&k%XmG%FWT:#M9n9m#Vt^&H32Z>RYJqA[.qQlCng[3dYjA5H&rM+@:YGI9!&dT$\#Dc,3^%ghNoL<=Cm^ZB$]T(n1rpgT7boV4hp)6pouHBmcAWP=^PiR!pqsOUuY>5b-soVcp"`qBFT)'2t/)CAP$r/5f9kcW7[Rfq*R='7'&7%&\2aM<`Mb^2U.ARpfA/>bGhq89QDdrF:?a!Os6`'OL6N\kPc5c\X)qU'D9:Z(b\KD/=<dn>9C(L<5%tHk]k.1J%0U!\K(U.jWj(i%%%E5`H.5VXA4#FI+goeHd[_fN&7r%7UTEDf.s51s&o%n(+K(N0057^CgVSZ)3fc_'?H\n0$3dSd5tdL(i1b<LAp9oF5h'p.*<quf%QU%GaQG)%S*t["-WV//*l\e$QM$^/@-FTll`*>kelpMo$NV0tp^LZ'J#RQB'ke<>ac.riXQu.+&e<OO#e"]p^^qgQs-F]AcVTu<l%2Ps7_L@DiiG91oW$%^k#3r[k_Wk`Pd@q$Hr.W6ot8:dLmEMK0eeQ$%iEJ_7>E>8g_o@qXs`GJQ*Y:SY**l#oR-@aa3F.b#VFCQ(i%+tJj>X['jk;j3=rm;s#"e'6f;BLg(O'&VI,7(6J?,TF6j`3>Hq-.-L;R&%E?GO!\#MK>4I]Ht"9G2^BoL1<F6pm6=8i/!qRrG"Z;%h`X$8qsRf%m6-'rRti3k6j9M8'fOB,Lij=<psHs&g[@l#i8*g_XEQ0YD6WFi7d5-sIIFRAJMRgs"E&V/`V)B/fm`@Ld'B46Vig'A%i%<p$2>HngZ&5jTr-LAS@mS*=%&WB="X&$)@QU%6cmsD._2k@<%:F8Ced*1<X*mc]Vq#Iup0-?&W/X0W>0rN#asm!MS7f/_r,Pd5%n!QRZc,gTrmnO:%^kU12qnI](a,Ol%a]/#l%p6_2POs)Q8T3:p^FYAjRK+3"1:?ge2aqP5iWi<[@L)ShY]HF^kd3[fPo&(GZ%jRV%jM-6bj<)/H,RBlbK$JHt_[#&qRM*@A+8K6gDg_M/NGh@ZapV9ff=H&]k?:s6%ARfI[,:-u_I)M-Q^D(j43e+<ZS)B`@m?kNQ1b^$%6&j?D+LQE<V6HY[k2Z(0l+*agd';if]W:dgE*bB)MJ>==G>lH'V`)"cDkF&qq<63ma.:6p>t0*Rc,[MJM#8sR-u6p6H=X\CNZ"@M%*TSo]0Hk38@0'YYqI`]VfV'pOWRNV\H(cnuAKcG-?'SDQKPh<7?rr@gA[c8n\!m()%I5qJOP13[>[Tnp5>/0-l`D)T[usH'<<Q+Q%d1!%4.LA`jLu"U"#);8kmR)S01fTbem).T_^;"sOM*#^^HBh-j8%#TheX>_Z)&f?]c$98)+mOtD;IG0X%16BY2d)?DVa=9]S4)r%%)`^AQhLJE^1`.e#\#_`ZGd^CL_k5(\g*4HU-3H.hRb?Ej?/NeHA8pG,$a3h#A97)++cDcXBr:`_e+!NYl2j,*5FQOAK[!e@@to,W%=-_M2mO!9(eHUd*PcBjsa\/(Z^@#5`@-f94g)oTBX0)B)i5JGm^YPmA6Ke%FXJ]ErWrm1lFp6\!&#7r\g`!KLY)_5=l?aU$F`#DN%kXG[V1rtT9r-c'AF7341n6UuagtVLNj6c[clipV%aS+GmcgEE@Z.N[=alIK9,r.tU6V>!m8@+uJmh=56,H:3j[_-56bR"!*pUo4M%H+YT$XjeUMYM"Df2_8Gd22YhJ;pQZ/=&"`_oBY2Mk78@WFhGA:+SRVho/A5_Sk,TDa$0+-UQkU*j4(]^Zb^8Of.)jo!'j=fq4?`9%2l$SP!7I-l-@d=[$daR&3t`^+5_I<!=UoSq"]"g1B^M"tf)eK`/\(hVdIQdP2tC-LUZG.F6r<X:/,-S!/4N'T:J2,]E==g3H.J&D%MSadXk_E2_]C!Qj2GREQqc<(FnS'k@r4mdrpaO1RYb4s42s76lp2!lK2A0*r?i3F.n'gkcV@^cir&\2T?`Z/,"Uu:q:l<@LOXSum%1\e@\:\?kaf+4bpr'rLoF^\3$XYo)/ad[$tT#M]L`(O?mB63#%Qi_&I6!'t'(-((E7Ya`M1XdAdjt5M7#NY4E'tPm#;eS^nY%Esn%8mGVq^H^EUXI7Nsps^8FhDfd=HRHTq6Ngp5l-LPj&@,$`JC0pjV#B@eRVG(9q0)?B,MSp41XW7rSd2=06nop1E^ku/WCdjZB5ls$%e3CO.:8>b7f9[j1%Waj@b.-*,<K)Yb^eLIYWsi\bF"We5EF!Ijff#Z5*+4bC='1VP>-f"?.ZnVL]=%-&a.;68YY%/J9:_i9o>(T2%Z5B5!?C<cI05S.E8.=efoiKDV-K6'Sja,*nc])g14Pb\)`Mti=T@,-#ik;AMZI$&<!lEFGejVrGeBYnIMgN8l_c6m@Kc,h5kfi_d%@KKpFdThHb_G)<YIboS4FcS1_O.`N.MpTT^A+JHE"]Z#gLrQ=T96tAH1tM%7QVX798P=3WpPg)i^e-Js\F?.cN;\Ps4O&V;3H@(b%a-Ktm8m[6(0#nM8(*Y-Z7]U.T_rX@)*C+@".crg6HZT3QSL2GB6m:pWQMH'(G*i"-l('1)I=KHYM.cRIlL0(t><-AN;lWjJVX]B%%^.'FN.97e.=4[I`4aQp!rNP;%$*9K=-M9+9Q)A%f`'k;>,P.j9a+gl@3KC'C?<"F3c"hm(@)2gU);S0bM":mDC7M"H$O!I,0H2"!%0$OgG'XAN#4AcP<d$cTd_Khdt8:'*+7UXLB=?(,2>i?4*ajGAP^_3P0#)%\eC3M+sH^Z5-J(JGVl&%Q-C:JIpPgESJ0d4(YSob[r%VD5JJl?pZYTT1juH-TmABck!Z5X?<"!_0hji^?EbX/M\o;N&*c`<24lVIq#4"(2-BJf/PKb%A1NEITjZSh-K6Im$6,_\;LM=tE_C%Sp7FTTNsbO6i]D[p.p/0DJnsD*&]:D=kB/joBAa"F,B_#09O!$!qk5'k5Y[>j^b3`qT-&FgRHL:o4WOYQO!ukoheC@A+Js/BJP3d%-?`u.K_5BH;8gd2nm+1#UO#MG1\`g&O>r6.i*o4GZll5Qe#L[daAno7q9<;cGUk^FK3!28eA?6k(Y643\d1dN_rn)d3_`=O?mFeb%[#XUhlI03GIGNa^,M*Qn#U[ld1d^CY7%nR>P'e/&&iti[3@tXcV/"<(PoWHG<<6lW:79T*NFgFDSn!hWmP4<h9e.e1nDLRZD'n[s%@M9693h-nO"a_Vp*`9H+@d?Y$;KaIAFp$t*<VcPGhq2^UMut0.T9mSbn$0HE.b1:SGIV8PSt@'dM8Q8bl38>7Fb6fib-sE=:7Ca@%"s[rh>57.>e_jHCB"G&p[99gBGE4Cl*T)6sj#O7p>/k4sd(S2$W.j&[MViVSLQ:Ft5IgDnb=?oZg[I1_A`TUL.dfCHC<CObBK(LV%L=,Y?NYaOcKk&d?V'LUhHu0Z?OBH-/L0HPOF(*2Ieh/(&aU"kG_hqrQWY=&kEi,c^W8:T&^L-/dPs^lFXnl_[Hgc)4.&5A4?4S@!%8G68_L*F_(h]X\QW1'9e\P8M>a*oJbeDRLEFLg4ifXjO4PKN<,]6UkEj4-_R_e+NipP-u^AWCsjIClpo3:Q,B9il_-n:tqk3a4Od%.WZLKK'7^0dEKnr.L\3FcsE:.Z`E,$M`QSQX;Sq-A$R\]7C!P`*!)Ck!BCNgn7'k:$Ne__P#u3$Lm+)mosS%W_PaL*Lk`OWlmf9.%Y,c<Jg"VZ'OEpbIZJKiNZ'p#H4WabNSDdTuDmT31K3GB=e*Ru).5amunU[G!D@!I6W]NJ=V<f#3Vic4Ti4Jdn/TCTWYUi2[b(si-%Wd2j>#HC#"LQUpH0-@r6>XIRSldb+9e)e^:kajmHI>Q7%I?<o0Rg857<;cAV'hEa2J#a2(:$*6&p,%&BIK"Q#QuC8mK02SP5GY:I%f97Y8inN'L<RWPLQ3l^.nKl8aLGU;%WIMMo1L=F+OG^4WHB9W+]#`<`n#a'ncEF)Y?+?j9aSb]h?@r/8#DqL#Cd)]N^EHs.e5H%&%DF]Tk0H&[ZrIfYrnDAj0H:k6h1h&O>G>YR6lf\Qi$H5H466!s1*`YV@B+HQW!gBnMLm:)5r.Bk@H%R'#3a;ad=^A68cma2Tq<,lr%ih3E]Qn0V#O"th37%%B0RC#\j.*XU'n:\i"RMdAWJ'!Ts0(g&8nSGm"LN_bqnoj8M=RbV>hS1,f$[qOO7a>Z1Hj7loF?Y-CJ[*:7%6-o?@c6mg"RIa"h#?mALK#IK'c6mWrU%=CrTLJOo[m0l5q$`h?_"j5SF*(3+oD?h2kBmX"P<5C1I%Wq(btjm+id>4u'0./F`6b5b%Cj4UmcdBFU-_-i)7dq;DB0`(%5(3;"kYo8EVb]dS'L(MP9V2SS+aj@IZs5T?&UfE+)8N/G:S0g6p_<ABl'&q2V2o:&s$ZL1\\oY=%E7)Xh8+7DEB0`(%5(3;"kYo8EVb]dS'L"?Ad9mY/h2A!UUlRb^"Pees6i%5L;pqR>T,r@eqW.:ji02SZ9KS!B'oN8`nHVq<lnuMX%bl0=YL$o>)qmariVK87c\81Suj.jFQK4V:2J.jBL,*";h0,.0?7\epU0IfTk;/]Emnkh;;!C^GtHjJ3kLSNgI3#It!rie=4LA<MB%VLUc`/4g*\o`q8.E%i,nKDqN&-jKLp]g4PI!O6*9Xq6-AQ_SS'%a)*DQbB[Qo.hgp5e7eu1'@UQrDA's+8!a*^Ye>nrOecq;aAA?%(-)NE_+8qQ^V.*nXs5mR"huR>s5A@qKK\'a(TII7eXbM892^qjCL4WJgZ*:,4lKel<4B;-W^B[FBC:QRm@-nc!/WaZ?7=2WD9l)4%bl\Z18cX^dK1$pRo&@X-o8BZ-bDV::q-poP0/BeI,R3J3=hFLkr*k+=?d4r/`B;Jq4O0AI3"g<)eE#HXEdBH'T<>'7l!g)/U2_*L%9Iq6AEI-o1DL=IY(nZjjj5kM?cJpaA@j^?!`)8a@<0ptS(\r?jb*VoJc[!ZCc874!Z!1"p82Tn9HHp$bJk+2/j!O>1#s:O\n@6!h%d4k)-8BgnfpQ#(I3HI-hRV65L"s4B"],btZF6:pZk0B*71,9pUk.VYUF-k*b'D#:7ScUh_NQai;R<L9N@n,UDaLi+L-g8<Ro92CE%^16m3U^FZt=ClS6*`3qf;!oar.d=%MI#\]#/sB%oDF;H9f1G-spIPUa$`Oe2$smX<8lnVtU-#2=V+\?ts!M0^M:qN4OVF-3+,o,M%Ep\M5$e>ir-[]:NhPgBMH_g@llOXiq,2JAJ7^`Rq)=K>I5RrT<&Et<Y'I8E(&"2O8!\3^DjGQbNnkUNm#Y[c8R?_?d(<M8ZOP*qc%Rn,Q\4)//@!Ki"n3HTR6U%2!T-]<:g6'8>q59b5=!^d`e&>8a3<#PY)+38;biAq\\W@1aFM<pRSJ:!OD#+6hmA'DlG14N[Y\`--A%(R]%mlb):J'sT<c9!S.=o9RU/,<n"kBaDd2GJT?aI52=B7[1HGk=M6&dASh"#cU]Qr\6(Si0,$\B&f:$bg8+LP6eQ>U)[V>@(bFn%5^:*@?i.S0]Ci`.2pY"Ff@JF%bM:.l^Fu(*[6Cu>[GI^.U`STg/:FH[=F/<i/s\]-*^bGQSs!E+8Ng1&aEko'`qj6rrF(+_4^l#H%IDDs\m9NrRg>04uOOA2>:,G9-0LI(YWZW-#799=*=f`1$Oar"MTa?^4%S_m5KLcq7":WNFW%,m-7k#sH0ShKQ``TImKLeFiVU^eu%.g\A-U3UFICXBk1-3,P-S/\'`R2Ze1_5&&i`I7cLHbJVA:>F;3p[KR(Y4QPg5)n?eKNk9#\I[);0=g7lmBb$M201uf8Ioguo\:sR%qd\X"\E$th*h`5p[.PZQqT/&P_(CXiI`X1sF5&$YeX9Y5MVIZt[c"r<8*rdJ1NAmUHbJ?\$J[s]SP5#(dJSJ[38f\`^l.G'%?!K'%Afs!'KGd7r%PqOL9>V=f#u_Cp,W5a]Tn/RZ;-/d25%[,)Q\7i"'.S9!6RiXW&&_k4\p5S!1)#\Y,Wt[gE6V#oDLn1(+Qc>8!^n7V%TUCng,pB#GKT'6c?jnk;#%GhF$o1#=#Y//3T"6+Np#>d?)Q84Ab<Tm5Lj;J,?o)5r9>Y5c$(DNd(rdCd?tun]Tt$N;*.=?=h2@UQ%*Db2<UWt$rRn;m]iocOeYLM7EehV]6;cc2+?0'U2=68sfXh"jdan)5jNm.@GYPRO1d'"2M.^E>kf(EZ]RJKp!?-cigVlkZq$CU(d%\pc7^leXLr,LcZ3aqNTpi0IK;>b9>+;gE!L>a4F"4ZlM<M066`H#!r:S.2V,E48[e`\(s)Z,$A*fe-t<Z,$A*fe-t<Z+ur!oaY[8%Z+uq2_%(/YZ+ur20WWS"-t!Q:STpl2,&(bd(/#U8c3lJRX_)gH>"t;O=$4Hqr<uPa"]7oc.]1ejI%dPF;`i4#E1fcGC\sR#_5eEQ%EhTKJW^7lnqI<>J!\4f^'NBWkb(H]PW!\0Ur?5p-XsaPaoUB<?)NG$RkeM[I<Ih(M<!?*brtfPr:mV#sWR&`g?09`Brh]>MXNPog%&4O&fE'8PEiO)JW[A!pOJZr+13ORN)ZW*#<e7DV=;J!:@H+$M2<ZW`qW7=q@V1NQVZAfqUEL665T-A/A.CZ%A>>rnN.-heJSQh'Q%!C+1jl8E^EW3=L<rT$a3k41[34qE(!o;4Sk7KQg\cc/e51m]b?'1jVTc1"Z-'T#adK(CZbRV"E_k6a;@(1etdEF)NakN73FH68BK%C$rj.q)]a2OPeG*)3Y[$Bf_b"AR7R(3dFZ)mngFliqDg+bs-"smr!U,r9E,*)u.NWM8Ws,:'LY3YhOeJOulG>]05@iC&?#VgOjBH%TR86Up7Rltp_1G\&%W(!56:-ETUR)!51k;CK+f=<+#$_2Zn-H)&@5bV6-Y@X$Z[#Z\6rr8c[qbm5n>6XH=!EJ7gkIq/1kO=n?a<Q%_pjXF'itdK(2PSdRV#MgfV1JEof8d``S#jM"`"M"2S?`McW3_2HuR%3%)\>,os;u&P's=!/NAnIB8\"<'Ur/<kn.GZ.)"R2kIN8,%YTk=a(-;^hm4WV:WC;fAiqMLFA#C_]E;UG$/.5e6%A\*q1ApW.4=qB/AP;R?;Z,at3%K\_6+F<>pWN*2\f>'[OL%P6PmuVV$h?e=%af33j=l*t0^Kb'1L],D:lF"UJgc^E.k0r&$]Vmt0Mt?u%^cI&p4Y\GH'`0V-2#)A!/;0lM\iCt>5Usc_0m3)@+/@gOV!'jpZh>aC%#b^hCk5*?Yc"EO']XrIak4US88;<I3hm%%.K2!`<j[jO(S2sfnE&Eqo.aP3B7<pN/;u]!6cO2ijp"SNf?^3!=H)=e5cXV5uH*TTG%mqpBMSlq\Dnm%KY&lntFd"eVs-,.=X<p*K"<HXmN=hTXQ8`e(UiSDqgBDcu%B.hM!GqR9]<LuP,$iB\H*q$j"7oYm\SjAuNSlD:d%T!:B\6&5amjo]r_b&`DPbAq$*]<JYK=P>F8((<XZ8aS+0cD@hQ<Hg&1SkG?HZXt?-$/!h/4dV&PV<W-$r+slT$IG;[_j1Y:<IujR%TM%^%:!<uVBPZe8</3(@U.^b"bt)XceAA>f(gWR9[&VNME`CSa]\oc(33ON+-0YJ7D$-kF?u$3p\VEcsG,g*o<Cf1d:>>JLgRrC(%^pVLSnk9d6]+f2Lb.9IlhDY<'c`/I7V`&>\Y?9p=/bdi3j";J-5Y;3EbJsY-V<(+uK^e$,h2#aR,5c%@],e^4P/a558b`nNDG%:j%'(*\lhjWIX8Rp/V-[(QmG)O4U;RG0m4=Y%r-GKsm*L3bc::jrn[k&:!4O(l74"f:4$ZDB]DI;l;#4k<nY_SV_gDGj.N0c2#qTJJ8%+.LP/os%Z;jq4"_Co4JJLZ]j20pNX!jt*">A54r:\UE'.g"^8IV9Y\if?0%eF0*WtUHURlgK\U%\'=(k]A%^/9g^4M4BKX7+1?ZR%,m7Ehg+`G5Gf1/N@?t/[N$'(W3ei%k%@R4Q)VM.f>\?J#8$uCYAQ[1'R@uLUDoBrPQg78HO2pLlS6o9:I6:9&EOi+1qKSN*Z=?nV%p$k#4>(0Jnp$k#4pha$Q[9(oS\1OJ.)b3le]!_4k[ZK96&oS]UIeIV+mFYBI"n0:0V7i2NMhap[^WEjoe[4n3l'P(*Enb<_iiq'a%<QhS4]#kMBeQ:<V4B9S<@dWhd7l--;RR)8-dIWZ1Z]=Fr@cR-U=EsL"b0@N@gNLuKTFl[M,Q:-:lS?(5ZfrBNoUA"1ZfZ;:>[kfD%o7>$d[H(49Y%klI;Ir4/m'j8mLhYC[l_R2]ZeC9d1IPtON86-(1L.2hI_j4#:*k_;&<S/u,?P==QH6(5Urd\LC0pI]#`MpkPq+%]%7(,@lLjTd@,;P"L$t1ED1a6^'g5LuX+E9s7S?0n/3gs?[?e='*]RW4$:flH&[&=lZeJ5PL0HtVE[d(#M7WmPS:D$j6i-[CA,6%#c%g3Xk+f@>(&5-!a8Ie?EKT>mP])Q=Z#,EHWXqgJu\NKN!G]\n2fYo"dhYJZ9,P$<br:k)c/"7q^uI-HTSeo8A_<3#9S"nJiIEj^[P%Z.g=KFZk1e?%0^QI:5mUGO<-;m%/!R>M1+/dbhnDq$9s)<u8)p=Unr4*P-iVc<tKnB]$-$`OV1Q47ip(D%Gtpb[N%'S!5pf*h+&]%9a=6J+Qhb05n58S9+d%&(PXNPQF#VZfU.V6Jh@ud1`TH2-[9-Sdg`II,LT2P'[mLI*8m@5]#g\40n)c.GG:/PJ<B5acbH:>S%H9+%dRGmk<K=L04(((W@R9]ii4fBP;i-R?&3Bs-]:o'<TY:YkY6_(ZY^>[Qa&!7b(pI11X)2g`!j?i_]lS1A&7Vbl/3W("D+4$C0T1I)%"^4^-aJLE^J0i;qcmfSRmsN-MT;b"c1Lo#m+8r,nMb:WAn6@%1W$[9l]K5OE5O'\d0e2_4hIks-MRB4cg*<jngt-*LMu=uIF2iX-%CduKE:HVrP^>AtKp&:^3n*f,G]t=74@8$5Fi_Pkl-O[2CV;R1@:6pJZ9>Qggi5nmd^S.L^]0F_Co^K7+#J)%?kJ7bb`/"UZWtlYk%>r:63bJ$r(p(`KDfm8(GHL4K'TblNCOZBX@0WC(:[+qD=SlgM8JX8JZ>k%seS0s.0MOZc"/-8Ta^$`QCEn$`SP29BEg8J$+ZtbdO%];X6a9eF]:Se\lDC2]D`d])qOeZPuWP>s-=C-0F_IeM"=McDhnB-$,N_Q"na[/__C?T-24j6Nh[Wc_BK0\'`0?(C[YKe<U*!9h0.%!.)$8Td+srd?lr^M"8sMLNl&MQp]"dq]@kGG188.7sH.#OE:2intURDSNT'oW:H'WM"^6=4E`s)4Zi?<%R#/^#M@Jn&c2b;++K[M%ph/KHe[:s%a6bNrm55lfL,e$>EUMshrI17u<n+1%qn*"BM/2&/Lr?#bc]L2,XJdJI*<Fu[k`J-LN[cGDOV8.R/F+ta#)rsr[`l.l%ad+m?Whs"&!LGb)RT7F'>NT20UoQW"4jcEFHhme$]W%5RpM*C9]\-@DrHc13!Mb.`#coleoB'H;,g;a3WG,I[Ouu]Qd^="A#5@cX%n_PepAqO06d^l8Y])-+6KO="/'4O)W5Bd;V`E]2urL(j9J$i`4'$Kpn!.ZEqMk];k4h&7X_&W:cj,e!ontH,9d$TNCH$D1R\MA,#%i'H7fK1lFm>Sc8!VBBIT6LA:pfq@l36K/dgK`qSi$@]=5?A#ioF'gE0"htKM6=^8+EriNQ?59pB$<E@Be>[uI.g$O37)=frbY5j[%/#H\D`X4*&LO\o5&'MI^%jAn$WHUba\g"gekA3e8Uumc'[6&$Ie1#*O9<(ci3$pN7Uu"+Gl^maC\=6\`.5a&\`DJ)ao8ZFqDC[?1%Q*NmmFmr=8Q<k8r6?QMDE*TEhdWMNM087U-`^Ok4%X@6X[(?)+:49hQ?L"0&?*A=n]@]b_)@)c@bl3V2baKc(WG&Mk108\]f[L9f%",f(lo\$+h2P#"j23&]U$>S5dOqg4-Mg<o#X+t<;ELW9Ko\='HeMCDsic_ohqP"tC1@q[WSlM[t"=C]udsdecgGIig""/s&>TqC(%d=n&Jge>Yd:F7k4o7!+?B-reiN#?6jT?2FnniiMBQR4dZir(\o:JJ3H'[=2_f<k2&jF&pl3PVL_GpDu3kGi4hWb(XYe16Z^in,c>%lU`2%'X!=$YPe(M8=.%]K2_#\2=>?hUumYYl&52QW\79ABR.B0l#<?Q89anSeKs>*(MR.I7EXCR;qTM7C%XmZI$*^"1Sh7WC-H%a%e81g#P?@eYN%lK@q@2GV!<u[W^4d&ph.?-,m5=ZboG[5BgM^sO^4&`T_8=NP(/FU"W:FjK<BdB<D*+ckK`=Z$qe^-jnJnpfH&<5q%ZQ\&u:l1fH_P9^cA.c6G*4DXm8)DZa4E:,5<t[XG;g13noN<X5'E:pda8Ob<l?N,$M+=ILGuccIocf]-:Z2V0$&)a<[B$pN_Xm*+%]%/A^50%5=]t;ho4)3/L*(0L/mFmqmb@7o_M-7S7L9Tk7[4kf$_Q7)Hj%4,!R]fpMn$5pLAWQ1Pj`fArn$4HM[i]Ls)Ko6hY9(Mq%>b8=j:0L.8NK]Q[HP>Sp`,./s>EbmNPLbjflboTA?c)iA7-D/"\LhM9QF+q0=uRb&gP2Tgm+K698aD[Q`?E?h,Ed`g&sCSt!D.(Y%gY1\r[^<.WXKuBDZ25shb%mFJ^8g@k2jDoN#DCMh@7,<7F23R15'fSA9ln*s)]roo\'LZ6,@pW!bWL[[m@,,gEkZr7A8i)k4;u]8%Y]JRUYhca*gYVjMS!6?RYM$7!gTk\,38(`I,B:A5]sbi?r2R`iQE?Uf:p%<shmQD:[SC&ed5@u3h=bO:Q>#$UjL=O&r_Fp%gHEcg%^!*lIc)mO2.WK$\F3A::qL7Vm^*gP"=RLZVmt._0L+Zb=oPT/#l^#2,O*"s2FD](j7<(N"h,%ne/m"X&XbR$;PrLFgC#pdjXE*%S%]FT(<%DYPVnTUb=./r0!?)P2UV;h?jM?R:tWtfh`Z+/uPi9GU(7sUIdlC=LgC-DQTi5$(Y+*BbdYHs6@_kgkg#'so%T3r)<[d/(Q%Y(%JYg)uk2Y%]UbMeJDiVSt:?+\mr(('nN'?<ZEq5V61Vj@ibs.c.>B`@26gEB9-rTe'&SMbD'Tc'GoZ,?ku"eI-6l2/lh5A9IdG%DS\0!0Z<]gGN3s)k26Qmj3N35B0[!!!.F2o:n$\hQ^EQ#K-rsa`0GD;7m<!aXZfLD]WLl#k=&UmdN`$glo4HNgd)omSpA,6K/9bp%ej[IW`s]l:_G1>rLKujIc(nOL[=;tJi!;i4<+<0h>.qrH0h/q`e>R`<GE4WA?1dfUq<hS<g`qbs%ia7eg7?:8SN7k[^;K_[#:eKK%>mE@6?g5#d0XSpW-X;"+j[&M.'<XL&nt>Zr'<XL&o$I9DSnRMBPm=EUSoF(JPm>Qt:Uk1t[/b:#Vs^"&r/TjYmMC>jDP',5qI<XQ%_j?FQjo*Y;KuZ:\OigE]o/M+sT=ieA7UGZo_6/=HY[LJuZ<I"fYWLBd@uo)9V]I4lBc6_Kji.uac9m^T(htU5%OX/-R4_349c2OA%Onu&meQArQbe_6_O(d?R7^qWo_`fq;Q.as:F!&i?bN<F6m:1!NhS-c#Ca7dmoSCJ@X`)eM(T/mWiom%B/X$l2CaJqV[5(D?:Hg`d%@fqVAp>:cKcYc^rR)d1tnD_`EjjW[CL:)f?'ob;I[,]:-=h11(B\-fc56&l">^,&u"OE.86phbcqd7Z5<=Q[5DXotNk+Y09<m5<r%I.jYH@5]Kth@6<*7+iB'jVJ;+Pf4:@ThU"S7!m/-;!,4`H,H**%d:U7]3rngF]R;^Of-6k/c(.^E(-Ge&_&*2?)#\_*4g<+meX&r%]?oak*bCh+H5#WD]5nKjdY4rI?WNHKd+Qui(M/!9]#iMeB$MrCjJ;C1pYg;+j^u'T3Qbs5;>"H9WYI&`gh<8dWqhOPlgh3DYM?3Z%kH1cIXg;)s^[uVBS\t@Vet-tskHX,B[cU83>PGaYk$bamQhA,TeD$Drpou1g=9f8-nhF<UY6/,(BGU8Q;?/!?>'ENG5FLLj6=i_n%7S\@-Yi*RA"3@'5<fS5cSa[FDPZ*OcC"b_,*f]GKD#T"5Rp`c>=ucI?C1$5X4,nIQ2Ef&WrS^oS'4'*0E>\S7Np6%anO!Q.%qs(F%d'F`JGhbL*^M!R^b<P.R9\A7=RBS&\3o4-%;P)N'6hBrpj%WcMN;*e*(+Q-R?b<UY%6Q9A;_E[4=Bl-\?45esL1r;sBs3AeLIt6u%j\reDC6rGtU9-;+e`EG".;16>caIJa7?:UB:l4L=4M,HSp0$_.nC)I=CGn5b)7catJg+`':!8ukB`7l1?-,sDP"3iX?bQ=00/rA!%2pI0YEr5![<#2@PmE!7?H*Z6$qlnk$Z85!VUFKQsMmc7)Y%?f0nSueMfa@1sG%08@li*8SpVY7bGMg%H7t`b(cmbTSou*r4b^*H\%S5pu[Q-%&PZ>iO#NFfG5COb`H"J%TIs(q;ggCKnk--T!JE]`Z&4SO,2SO6#$?%uP[^%X\<6f5Uj`I$Jc"/#bY5[-2ImPGeCee?rd%$W.sf(XNYEU7IcL-O3hQl#;F*cC.nZUC:1(9O/`KS9!6jKhCu]s6bBb&W[q^h>[mR4@LPb-2)\WE5]*0NI.MQ:A*37ZfBrrZTZGb%ITH1-:H!YL)o!RL`.(_e^IpAQ6^Le)+g?RVZY(fCRWJ"L[-u/;,oBZBI.hBsQKAeo0+E#hYda[CSjhp]Y8&$1iUIO'0+YK*LeMXN%mrL@R]EHAMW4^p@FPE:47.J53?sZ1^-"pW%k&'%hK['prbH\Hb%]QQP;ql<rZ#sl"#:t;YVII+*ipkcZqoj=,^LaofPAhntgl5>F%C^@3#P5-h:J@i;h[^Z1gM_B/[)J\uc?F&BIhj[:T;uS8gD5Un0Y@Tqkg,,B+nO#bf*0GDk>MsJS7kWXtL\a$5dbO5!/$W'&Qu)HH%<Ou>q\f#enWuoB0I:1&A_=s`*T?eE>.DWuLaA3$85:229>5"MQI>o#L8rZ[??JUZ1/UBrBMS$-c<\\pom*i*jh,]K+4Ze%aq1)pr%Tc.KT]T4g[4/<eVp#'/#4=;AFPH'"9<IR7[-U_uA,UZ!#66mpHE^D$!6ukU>-U_uA,UZ!#66mpHE^D$!6ukU>-U_uA,UZ!#66mpH%E^D$!6ukU>5;#?50%iG**SBYHo<(_.R5ad$E?=l;VDP7lX6=qIf/G_EQeP[>87diDZLhiYOaWrBpA9^%PC48Yf9+L_&<,84F^36*%k<3r]]/q3ZL[2GtHTn/Go4k2aIJp[IA_bmuj6hpEO6FVIfr$(kEE_aoBjX*-B:7/.]=>K-1SC$T'j'66Y[aGq5Q1HG_\_du4FDDF%nBL-gHi#`$k3Ud)^ZTfn]_g^N_hZuj&-$/2e'"4^hnB&/qrZiQ->tND$0R`V57[CZ5A1YDI<0U*M7_#NLt46<(m1rhfXQt_0X>72%eL&V3n'7Nl:[kEkB0Y/Khc(R3Sf@O/DuSc4fP0sWd"hU-b4V)qh#+A#+9&\&r;!GKr;K?PPY1&Nr+%jli<O'7#kC(,T<IpGe;EYf%I^]%W=1ti3k+htUicmf%o3hm',7WK0@YI&Wh46_+9&@u=U<10_f&1[rT@/".mkn5)a6>^0;gGQ4pHDDL\G$W;mtXHODCk66=Prk@%#cd>N=Pnn%#g28B#2OWh4oW+t?2]SNqH?5V<a)N3*reM&oY%[T)T/D5TVdf+:gKDSJkZSOaJFu+P6*#A'G>4[a?06G)Z*,VFi?&2%L=DY[_OAEl>*DLe8Ku[7,SG!X#^J:aKUX5Z?8rJe=NO"XLPFNO6Geo&'3eC+fV_R"8dYn%'M;P#+^q!0-pu;:2(WugBH+B,Og$2&%[+6K8DNY9F22R!U,XPd2,2jl*P1ObZ(NL2@cVn%H-sLWt:M`b!>iAR/D'alkKhJ,8Pn_@S/d8L5@<%:<04C-/+G1NN-dZg,0FX?2%CB=ss"Oo3K-dZg,+E,DLq17.ASj[F'7jD"\N\-YVO[]%57TrAo&O)>><t\Yh:S]h51`DZ*%GAV;Q"oEML?apk_bD'JHqC*l-B3De%,a"asBW0>;?cg\]f8roE=bKSHD,q<QKMSC3ejL;4'+('aNJ<')-;(*Afh+/W9-)SMAPH\tlOt_423IF2:S^t@7)li&OcW_p./P>=%Mj-i&a\nR>7lLRe\EJ@-b$o`JV:29H(nXD,Ff?q3V\2m5,)q[@GQ)rCR5E^ggE,SNYF?>c'^PW:kk"5'3V3S3qQ-A"+6B.")huTo%P>'_`50ZaM3F#:<m%7KjkLuD$`1&>QpEbE(WF15Jp%:*=nYibrZkCS&pnAdK4"fBsUiq(tHt"C9)*J,fn+1E8GZIDcs,k/]Ko$36%$%YX[r]=@i8QAEFh'Dakq7P%!1S;^:g'gC'6nj]$jCr[(Hit8Q,JBY)mK!eWM=Gh^V^93aai&c5V[NDQUYduJI!tEApr^N+fl)[l%qjA*qO9A(LBp%&5L0mPP?q?M9T1<;"o0cP%-%R2s_t0:"MR#r4;qWnJ%7:8`;i7$.<[O;$6ib5;)C^LnYo+mG6G>-HU!n92lEL>b%Ep-<WKJV-o,&E2d,YhTZK[Y1c]O;4>S7\@YkKkI';>Z)m%M,41E0k7+1f,Q4<,B\`Tq&W]_iPJ!UX;_O&891E\!3)4ThrbtW?:Xl%;:d50e?4AVL=QeJMR:kB'M7\MGOr3+M=)XSbLBQK-Fep3i2cIbM+IhHT8[G>$;K(^*PL"3+3oYchh@-hJa,4iDH(s."odGH\Vk^c%;%5h=&.f`[M.GEd$o>f]5#m8":<\tnL09WelDO4p6E*&m1Y5AHOI0.S+4!I,DEQ6*ZKT0b3n$JQC#U7GbU@\&Qpd1W+`2'hRYHqd%6SKU='M=i-(H\:^8dkB\!k9VW.B/*4S4Gg!;q3)d>+?ia0elT"PbElL.jejEmK>"&cGWdeg5JXpM!^&,^]:;\30M'"ED%qb"Refl%#Kf.A1SI5b.)[fakc8"C1rK0I71l:\l-IF<SP#H/5R]\'S3iX"V[uQ*^V^pe)UXcho/".PHiD$HH+ZQ)J,9)iEUcHF3+bSN&VGP*%eNPkC9H>ep4k.eU6)kOe-+XM[*YOE\:C/uqm"*G#\CIgJiKkRm%uo%X`9.5B'#m[i?RMR;DTRHS,nhrUk`FT?%?1q+$oNFnPU!:d%#;H-F1+5^K!Tt0ECtU,!+I[_2?CS`e$%eLiLUhRNME)]`Q>gj)%LD"4*Ye?V68U1@3)2R98Z7SeQ&$%XC4f*&QNDT"p),(k18buk%N`n2'.%k/`]+bhUUP^64R3MK>AsOZn[DX9MM"7.J&(;_W&2S1TCTharZNpX),KM,rLh_'+"OVg`7#?[UfpKB\L'lWO4YqR)QuJ!k%$DDN+3D4:H/8gJ%Z3Xj;S%1I4C_J2`Q'nT%1c"8PMo(TF0U`h9,Uj8L_`X-ji1)e/iYkMFEN"XT,@2E)\oI(^GXIR9*.dtGqoDB^%,VU)V6qtIN+%c`^*NsOKSdXJWa=Dh(jtl#,OL^5D/P!aNMs@8MimuVc#TeZZqee#3j6\6('oB+j<6oDDF$OA.&<+(R-o?T+'BD+4%=iNEj/+j(f;ShWT:.^%Wm"@S`nfJ.Nhh`bZf-FB@9eVl#&e!hVnN8ZuSrlr)S.=L&;^`nSqB97Hk]t$q(`L3i3h>mgmk>8BR8/Pm%3/>boR"8.R1E+dY'3(,tQ\NK[#fVpnF(m[0aX5t$%m6VM1r(X^H0Q>0?:a^U=/_O"D@VOp'2Ne%.9$S+*W6j0g*u@/3f$q7''mRd%<R3FirX=HFikY.%Kco.pbo*9%VI;sm5^rtV*YdKBS2CD@,g;H#=C=c)91U(:!)T!*[3']IIcbg1R;5;qqoDK)n$'<_S1S\n*k7)\%D)j%58C*Pf"3o&h'FH\V'7Dr_lV*GO51+&*G+qI$ZkF@.U^)_YjQ$d`O[9G=JA.BL,^SU0?Vf23&b:4q*Z&Q];>lHl#XhK:WZm&/%<,+?a+A.9#">s&sjC1.QF-9Kq&31.AHP'=MS=,-eUepa.4?>g2PW4`LinA!-K?=en'R;#*[QrkE2h@YiZ@4$<7j!Ir7.2VR+ISm*%Br'"kUkr%.Tf4Y5oW/1d.7_<%0^sHO)Y4*J$X>i(Yo^f2m]u=>cf9mWl"cDonjl2GdPs!JOZP?e-?g*T5Y^&8:/!4G(edA9Q>Y@M%JM';sB7+GI@$$9,UJ*r\jhY$jOc&8J)'k+TbU3HU<*_raM6Mid:shBo@,=gA:Q3:QSH1lr@hcJQLn5g;Xp4-'BmRekEO81n:d<?D%SIF%I\VXus=O6>Mi"rme!F>p3p7OB5P:HqVBQ2%a,1*1glqnk/YX!QXR:X643CBu[(Cf.I^k:%MIDSD'4)ggjaDj+WT4kCkK7WnV%@B-H^T#,nHL@$G.r%6Pb9oPSM[SJ];"3'uEP<gS[T&.^\&-C[#3*dR7h.K(3UOi<$`Yoi,c[sCUg`u1t%,<'aH$#\+"f%c<qX0`'%UAG'gR2ijENL5J(hLd)T+U$XhD%];Cmk\oKDt'>b;]H8'B:um'i-bg"M$EFJ/F\qAHhu#I>N-c9$ilJ8)Mh"MV#[-Wg_LA"ptR+#%+aaXAGqanY>?MP%C>@'knItE:C`&d3a^P)M\/Ge9'9b,I'oYrd"n&<3T9otUTHG=+V9(DT?3tXRN1V6XZ[mLis)HMJq$,uB&EUaE%r,G-pMXj7g`?to^a2G8V@=G'`f+fn-D4XkJ=-ubq(oIH,7tMDc^nq8qp%KFVbboEQOY/Vc!e$LPk>NMB<,k):'5?G?S58$<R,/[Q%f?XiM8!oZ5E./#.mhP$KOb[/Wq)L5V&=cMs0KoU9RS\T8H,tF=qAG4YTKjTF]JN]_YP]q:5GN7No4bisPYWqf>)$HLQ%tc#5WJm5%?X\EOH%64F-P#QAH%u.5FHZtB_>26,K(FiB5d6JUAY&mMH5Ws*'r4X<c-B2ikpQ++F@\X6_+QPZ:Y!7R;P^M6Y9JD%#1g&2oKbQ@%7Z]fiT;N%h.@b(c;5fOPkRHej'fd,N#1UtM\OE2U)L78GoeRqgkb(+.6s4^9l;It]<hV^"EYu*7qWRT7(t>H[m!FB]eEq7!80;cT%&/M';4G"&>W1PHo=K>8j+spI\!9t686C]OT-XP(Bo`XQ@R'V-lqC$+"$MF"$e#%_D*>]ImhMI_F9K,ciAf%c!X'hR*5f+u&*sKee%YWiVVjqR0Ci4NH*T0eE=($q!]0+tKR;WKqX3i$t&k5g/2,NS!#E.=VIM%U?jnjHDHG&X(j;`;!I7DWpu$WC`a2D#$u:BQ5k7JdbF%>W/rb?Q$K6cp#.g`!;1n-cjTid/F.S&09K&#Y8l&q\+*sT+(*_1mP+":LN7:Tf3kCVbf;_MY9oOkU[G8UCKT+4p]1!JAFFs43>W?%_*5QO^:_=2j<J30E1`$T6?[<t6Culg4se2WYAbSCQpq>TWS,-J)r@1e;+JJ"e59_u%e!2F.2D:rKIKC[^34f+r"KaAdhM:-LWkMJ%&ZQt&AH(l*fb"1>c6!Mc'B`ulBLViT5i2n-+!Z[u7Jt*4@j(s01.(D@KC'mqK>A*`\@Nb%ihtC5,shGRp,[qkFXX:462VrE?rk@0%Bh:5-!VnP$FN-Usr:HHDa,ke8AVWVOYtc<kq(_GNbm)CQ[ch?+r?G@FVS!,s#?>1dd#XL/C:bAS=,/[NNo-=Orr([/Rtir31b?p*%IXifIgB[)nXN"bbL2,Q73kWL-*W.k_hR/aW<me^X7On/IM?+F<m4a_lem4;gkoR+_Z#5pR,Yu'RbFNJG%;=NnU988Gf98,pHg($a%DYfTJJFr/2lun=<osIF?T]_p*>mBB<QtmMUJL()7ru9cY9[.3OU.T]\%4:o4_o"Bf80i-:#o0FYaH)6:f(Qq5dXEEhbO_^Q0JeOP%'R/\3KFEWO"p`rm-#";3-S*fFfbMufDX:XQa$%9_ZL*Qf->@$gf/:^u_!Edn`UonNQh!f..oE_D^BQLmlK7'Cm?3k_dP4]"OYYBL%3>4@&[J)Nc4G+A0>:AK!^e0Ps]A>0^ZU3GLf=LOLs0F@q4%?P^DjU*LSc%KtGIPhEdRMkW_Q#k)&D5l[G7P4oSssZs[]:*h]:)U.%G#*]c'bI#i@"h3gD6[mZb[;YINk*^X&ppQX#T?(G+frUihe)!f.sX4RQ@-%g6/gl9k7.qebHHb1Q8R%WpJ91#]T\bp/B2d61P]?m%f/8:e,Ajhj'9a96=_#C[N0mn]8%26HO\"Dm0=>Fa+P%68,h+9&F>2BHZrPG,#Z6TWHJDjl>0OCnoY+n8orodrN^6=V\[5)G(/mji%]!_O<7pF;dO0hg.3n6[UM*mNWUdS@<YsP/kT[nCg%5G%UkuSqT36Bt'7[m,p%s:]!D0.bn'+I(j_e,<O!Z$Eo0?mAG(*s'bRnMe\%@4d5C.\!]O(0(bB>9/1qem_2T+S!XF9$DF7WM9nsLjJsU'/.=kXciXuF%%.r>[kVUmMV\X_sX3-2<1`c8NugC"ck1jTne)'3=6^[%ZJ!RtRO&PJ@hC$_mf!uW'?elcZ/q=B:_4$fJcdB(mS*-D/7qh;W4<sJo,l)A&6pt($H^p@;gac2'_W-906`ih=plI<)H1\tXS;8C%&N;,oDSGu:me4n@6'$qkc#b#ebb'X8MLU\4ce0U$,.D!c)Jrq)d=+'\ZJC*Gof^]qJ#EAqW8MHM(t34"VFE`YLRT!q-s5:OZD]*U%_?N^26&TL+j`E]^6l^)B^l!&-P!udccYZ5nDGnE_eHcr@dQY(@^u6WZ3,H!S76R>anupn6]Y=@6i=4G@r!&W<oQ=ONil&EN"ElKO%8":W))i3p_pDVKK;M?&N8pIRJCdQ1"+JubtJl?S.:9q_4;pH2Mb?c$;@VeffOTpHhN%**@/[dT_Dc,AP>T%@qe.eE#jmiT-,@CT^%HZPWd`c8:\$HY/-ar&dd,D:BU/Z+gD28lUc%$>[NV$OL4ZNRK7_BRi6JZ=C[V,/tsOs75$#jbBq20-r=^6/L<ZD1?Njk,.ND/2kM%QR@,sQl"8b^K703/VVG0q7%Ttf9-?M$af>tNe9h$T(VUu/\#i`4\DQJQQ>8\1#&Zq-n,hu_C@_/q$_nuo/s7*.>?/2kAs^&_"%^,%q+;*7[<&HZTf<K`]("9riaPg4C=\ikdN4^?XJcrQr!=-B]Q9j5K&GY%h]R%cPX9L2EV@u;#$VouQlT/bL[BP^mY6%($epCi2<e9'%V31/Mq!bd*gqsa*UTTZ+=j$:1-7];OQ8n0H)nE8;_:HcIq]%LLYXsL21R<-!l%!V*HOlSlXq&Z>m^Z\uRDuC?3E8]/`E)#\m3B8f%mRQ0M2DE:<4A[BF["3K+?cn-!#.@9G8_>kK/DoZ:/-V@A)h-ET$&.96A:n&a0^%%50aOIqI%f5!!]H1WhFmf>@b/]$,Y8scY-sat%kP\a**F/PtOtep&<Km4CoQk[^;fJrQ8Nk80+tS<X<bp0B*",5,ca5S^hm;QC/Z#))p.?jD]?tn-iF%hQl+V^C`H?.9gmi6MI0qm3%Du7$<ZpG,E9l7f+h@BTj1mG(c;.0$]L$8^.Q=V#n0^ib6#U3Pq;5/X+Z;6UR4MBp=%W#tLGXqsPFDN;9n$S8)f*'Z4BUXZO#<!:)%'Z#K'KV5V"Q^P@M*cMER^m1LNd=k42]Fh5PM>WY&4,'e-@;-J!B,5MOEb5+T#uK;=[?M0CqHD#YOr.#^NZ$O4SK$jc7n3l#f;$/i%Tc&dmR>f73gf,V)l'?$<q;R&Qn%C7OTZ%+"DM;qCmt]SMbCBpHFJOkPbs*^%M7Kcc$F;lt2H!2s!js;1"7J(a!`]k-HE+Qte24L+%#6pGe=D?@cF+OU^ODH#fM4Ph!D!WkIm&+Q.Dk1b$Z_i:UL=dTka7/2^8)Ii!K=M1iUbD>a+FRWqXckpcI+>,M'P+(QRkP'S\<l>U%"<^e8h'bU-nA$9Xj"HGpD_(q/:>^D<(&:*sbgn2\45:"][7['e$\Gbn7QRp<SSJrP(Iao\DPEJ*>F?s::!#u/^/Nm3/0hBn80*hs%II@?ZW(n,N3"uqRbY#)^k[f.G`?h"qjJLa2n(J6;5IdR";<JT+dQiA"E`K#F[dGj5#sS'uOscG#?3@p53_(LeMGo,+^`"'cNj*?`%*Mp*0S-tp`Gn/IS$:H?9c"]9l,n3niAm3('^nSY=MPVt2__V+RL?/_Nn.IE6TYB=#oWa,BrALBgg*A<@Hu?`G>[mB]!:d:I_d`eS%_c$1Xm%oD*MgNKa)u.9B_]rNU;\eMsO;2pi%;(=U8cc&O8B8)fUbLC?.ZXRINiC!eY^%[J;pZd\F`7s_0Lb[iOE4o:B3;X_)>KjN%XPLmt9S<Gp],<uVa=M-%?BelcHR>dNbGV'+IRINQU[)/em8=h7\@H6t^qj92SKnKcqcI/hc0G>bm@3j_"0K=GGm`>V5"/ML^s&!^%b3jo(U4Zt1n:"nbXBg:QkEC*;puK\3:[Ph!L#?a7Sq^fQ&mr+n+/(I*Bn;eJLRmKC1),kaBO]L&d-_%/?=B:,E:,-\Ja,Bg9Od0L%c\tE"SN`!K-UeYkRPlYQ?O8"$/D<Uam!qoCH[DjXLj:@.6j3DM=,`q_j,S\YjGZmscNNGo$+YmQ,Rl7Q\.eb\JSF>djr_Vo>(S3j%H_CP-)^F,8h)!=q`>fkQ&4&qL""D^;enB(@-'%OJQtCD-a*9](o\%<oA8DRo7Kp'+[.%7Q"(u9WS3uGf.oB""1'\q[U^fb&X/1:-%aXPJ\FD]a="A:%q`$V5k#H4Ci/8R+>`$gBtckCfPMN8EE*5Ecl'r-$G"NXAdC'U6a&Y"T(11;$\n8oa0nL,D8a[tnOSX<OW&)>(/%1_)B!GD$q>!4I`3en1!GerF.;"A\-aW@Huh4br\mgPiI"P9"/&'%`^8V">p94n+$&4E8:/6$@#@aQ>A?e2nFSiu2MAG["Y8`o$%U%/A`MW1:#Cr:VQB#R_Z%sjZHiskD9Pbg(QbuB.?'l)*=N>qUsL-4[C7M*pj7fQ:.Ann436[4b6SL:YHI16hkAY,8SEtU<+!jZCV?A%:>?N!fSOsL+]p7WfjM:E:$/PD`()U/Je+KY;&%73/JM<3^#HsK_5I)dCF<8mA-op^6s.;c,j98DbCZYS]975KarRS=pH5u]PLr(B%1`gn66&mK*JE%k1`PcOiT]@8#:L]<TGX7ke"Dc=7XCjsL=Zf@KZB7501,_04pfI_>HAfOhJ]D#]d7P!kSA,S^neY@('Z-i-Q=-g_%i%r/pW9p0$@,m:($PR$MaN(Vcjs'mu%cR^:/=QTp;7)j4iW+]>PH<K+I=g#N-JSSCP_2a\bAl0c4mZQ<&a*ei,Z]AO4;b;qQ\0Nb%;mcaD,r,ur85#)MI)LO=3CG.n3XuK(AAQCM5n8T`o?KJh+gBV:)'=b&=?>KT2G4l%Kjg/'3O>N7Xd3qV/-j$lPi4m\/#J3E4\A\]%`IrirDR6$=j\sKhFO."8dE;[fkR\KK^o,>*ji49Q(h^VCU`'GI>K0JR5=ks\GSPpb"+=1&e9p)He?8VEArOIRW273E<@g$[$9j;_%N^*(`&kn`#ScGXENT>(+NnR.h?>MjS>c`@lVrcl(!B0f@>XZUP-?1d6^bILnmIPMg&GQ@VJFc>G9aS"jRRA6fD8eR,"s$IN20<TV%j.%$O+?5"78KnJf!/,=0iMMH%"j*4\7PRYq_N^Pq0cPu/=?[h6Uq@?t;g%qm]PfpU;,<#,!2O-lH=i9;MSG,_2m]Oc'"$;B("CZ.%=m"f[AXKM@`Aubj,$7>,4MK<nRtOJlBnZ,^AW8$h\`?iq.1X%U[ptVC>S]F[hj'_*.6"VcPZojX0q,="EBY_p"osk_BF;@TJVSoh%aLV\LNm@=-;T'/%fI]A&oW3?\:##f'j,en@HY/m-K6U!*fuQj!VjYR\NYN`NB2BrFN8\GLVNKmQThJp_<eauoE(A7aidr>`O>`4i%,TBsY*\9WY/NI#SYn)\%&L;O)<XY1UCIBP!n2Ta\PjG;&kW`Y!+=P6A:E2X519;l+'Q'8Ie+c`jorA@5<r)=?.EgChm'8tp2"Bd`%Td`qi$;WGf&.`fI0sIj>'Nr[M8Wt,^c=Ne]hVs`_I"[+]0Vb/\F7^5-0o6]7;/lRKO3ffpK$%!3#?cZR28D=L+e<@%#&#t^_3.qc%M_1S]E=Do\!%DQ[!PiAXD;ubQM/ZiSFaQ:V1HUlFR`I5ej@B^)d_T3TiWIPTOOqla";(?nl8/i+*TY",&q?I6$1LDB0S5g?&>[#_%aGG[Cl4$$goV>e)jN+C=_+?3IF;b;RB'+7nXC,?C"WT?=%0;p<[7QD6#!O4Oj_29$\,rC0(^Xk(An*)MV\kAT0WMb<0bQs!T8et`%LLN)0$A)TCOl3VPqHRI)+M^Jb$#$9,*@%953>a!GK:Q\7jN(?tBD/D<kO[\s02LTMNZfZE)*2UGT.r;u2&RLPfgq1n/2J^PQLLS!%#+.+=B/Qlg*(]R,ruePP,AKq:$U;]]6pBoOb#lZW3#nb-k=d+aa4*1[Km[bj3V''eW]9r,@5.'obH.@ff]h1n_8(qNbnXe++QuEm%n,S\Wh/)NaT5/+5*;nD6QdXi+XAfQtW#.rfcXdGN;*!</;F;r#/4([-b:8^?Q!C1?e8<:gFk:0kQ6gb"LG`j\9(nGc7dN*m4"UOH%=I;rMl1,213]p\BUNh)NT[SVJ.#;8?%omG.26r"2-j(A\LsZu7=<l*H)i,jf?k<[e.SYr>l843#Kd]-.YV>Bf@0YUP*A?Cl_((3A%MZBj:Zk@qP&1uVH&lRL-mShb8-9D?l8d(gj4+H6T#]L'm;fST?49Rbk+%&E>]]6npk[\*_F!Xq2"lC2m+]_p%bZkH^eX:j19p4'>%X?Al:"5H&TVMU!U]R45>'6qWjVEpHe^%lDn2oI]?g+l(iGF$1J*/sB3]1hi-JJY\4%3UKtfj(!`jfmL1NaP;=c#_`QQP"d)YS3oT%X(N9640]^Hd9C]-XM7<7bfB9:n=HBE";EI[QMHr(Be%=(/..^hbPWUmQRH,fq?J!l<,Tj[E.K(1A)%EF$RXr9l3D!cZm00`\?J:n%]X(!d?`@jD$!)?*ZT8MJ8L6'X!q.Og'Y*1mq+rV`P=VB`gb]B^M4&&n%m?%*5KimT(09^&\&Xk%<f<BlLe;%f#<r@s-E.#JM$No#%(e8sT=)&+$MB%n(7FTB#<JE102_T?ZUr?`s_E0]_iZ14`RTOZATf7!$-:L.nG71t`!p*9&(FEq#5gTVP;>SJCO(](m$QtqN.(W1Y%CIW1*JDA3k-jQbGdUfl0UqfTn.[*9ZUEXF7_5n7U$a<)E@B-LD.>ZDM,Z8$0AsGoe:f*"%M7uTXQJ<[H)"!QaRAda9'h4:m;J$Y^%i,r!WrGRcd<\elOOJn;.?U6MSd9o]\72K-p949!`qdhoLa\^K5dU&'d_S'WnP,o6YPq%Ju5U=fa%l/YKP;()Qc+F#rGk`Ui!"Lc1%P:Q]Vn8`XVeK*@F"rY")\;?H4g[ccK+GrNRI=hs`J_-lRNa#hf2H20PM_6/$RKg[S;1`Td_S4`GUi7_4^t0\IJU*Ba,r:KNnlrmm%+&bk=^[EuOD2E]43R'Im&gn3=K'X>rN]PtAYSE'i;S8K3^P*")o^!8hdg+QJ%'gBiJ:TlDSb&;J-LY5#(18pY8KUScYma(f\7V-K%($7c(/l&K',J7_e_[K[;"EpUZ<1>VKpD$@D'/)mC&uuJE?kP\--@"GQJ]0FhjAGEj^`Wp\JkE&p'b,OA%5KF==Ybr2b[:k6*5NAj%M<.ArR"C;%6(%RW6W<>nC+9LQK*J1%7RQZQdbicGj(.T_T5/+5*;nD6QdXi+</.!pYU5aF`AgLER>*9dQG'J-0D_qn$ldBBh,Gu.%.pN2fMt1J#=YueJBh1EuH%oMV;#0lK$l-ZMk"?$O(62j=ra"HjKER-)%Ya,jJd&gqDi-9>bE8:"ZMTO?:uG[E.YNN\[^-?L%7B_i%Y]C+!ZIZ8>DTSc;>fnUJ*U;a<f*@pb=Hki@%r/Q2bOeUo1=?_20sHF""F=CBM#UEL.1868Q>nQlq:Z:B@%>(THfVJjOu0]^;Cu#!%7Ou<3#G/#sFMLRMKL6I?/@&\lf031k^mAbt%)cO#(OGfP<lG+eK-D&KAY0;5fXa)2^ltOM"Em=J'#E%!R%T=haR12s3/C.aG#]Ql%)UMe?j!9oK,E1?G%*1;Sp>t@=IPT<OjnPN6M"u\%Km9JY;0SVT?p)bXPb)M,^7(GV@*_1XmaAWc$8lgBAV=6o-6B7I3lh=<B(e2B%MTQS99ebgdGn1i[Z)a]u4OSu**h7uAi!PCCR8k8p![m\)#E*4[S!iYlqm*]YZ/<-W\0u6pOYu8$2j"OT`kEiJ!'I2JhE8Ss5(*Um%U*[;NS1&:(e;=DNO-hQiGF=*YM]15l2dGjf::)tD_Kpi;r)Q`<%U9=iT6G>/qpee,H:JHh8[d`B1UEPc!$-(2ek7=A%[$-$12jkA%_c<-Bg9h&bfH@?UFSe_=HPupH+Do&TRh?'6_%;aRRX/t-aB?L&R['CZT*jLA>R^2h^<,(^9!/a7cSXt;PWZJsYUIamW\O!DLPC.i%Hmu*!oLg)<3]*=fW+FNe:`EL4IC?L21\hPr[`Om#8UhB-T'NlS^:q:/f=3!VMITEb"'iFAJ&$=@jU'0r]+'2pPUC_:+)qW`Y.<i9%9>;DClq[&lp+P')jg1pgL?RKM7Hm+p!F4%W2"C6^r^Rk*LcGuH>HhXA\H$GiJkrRp#EP[./1p)&'b1[74`WTfhj_F<ULCRXZ^:(/%%41dA[R@#19,':kg#!c;OW8V%ifGP'C"/F3d4H]ilD-]9Y\HWc@C]'JhXj22WWlgM0*FHnCafF4'5!kUU':9+]6_&0PfE(/APX8]%*`ds[qssJOb4UkBH'6>T-F;3ii>]Y.Y$D`d>]+O1)-<PI`kRWJ!*,@jS1nRr!X&ARZ=AP:._]J<MNMkG.a0p.5ul_s2ej%kBT[L-%B=%kZ:W,R%kJ(C0YAP7=@^)582IVF.!aTlO)J(P_C!_@WU-MZl`K.TgLXGIo>(;5,:tuJe&KBU!m:@!UJC$OK;#kFXV[Ho!1lJu$%'"I'(b]olWVm=5k;)QPS#3S?B4L+Q]K^f:OCFAhpM]36@UD[0uaK>N\rucNWN,dE#r%<)3*siqc6*$C6.[J_l"[hED&Y#BORT?.0%N>cpt%</L!7e+-$5"0;;@i'(sj/r[$b(-$u7[*32<'7ttjMIJLa9m'YDQk*rWcaEn]s"&GSiV*[8A\tXZ)f[>^T59:Sud";[iJ`2%^sundX_V;T"6[n^1VAb4IF#_-\Ep>;ccAOBY%.#VoS\`\o^Me\Q&k:gEPGoW1Y6Mqei*`h/*Bit8uFpsMnP4L2NR*cs4Y",nHg/d%#ri%qT;L$ECj3n.MJtL^;]5!f>sIu:;6b3GN/3\Qmh<W:G@Uri[3m4L\t7ghT5c8BJXrRSB2uJifU/ia>Yk!2rJZEX("c0H!M6)?%g.M='%M,UnP?lm"-G6Eu9R;uLWT't#NlnQR3@_gLn!F)r]jh,FFH6b_lQ-^Ieiuo[Pn$[uAj'ZKCf.elS@cO\IJ`/Edl7Y=7[]0"%Fkn.uNF]MR5X'b'@Ah]hIg>:[=qC9LRtJLDac9bbYg:pY3/#jIEqg"6CIC2C3f?)7*%(:H8"DYCZKp&.JNY+8LgZjHoE)e]n2Ipr%rqRL;;s\m5HUfu]r[,43>CMsKRss.-qJk3\H![j@9S2GQFIeC'2Mu@(p,9o3?TnTSENrF)0TT'D')u!rYVfpZC(b@(;j.0*_N+WS%iB&&qnk7PiE:UmGg"CdFghAOt[F7>L0&DfMdm`UmVS(oJV@m\GIrXMrZUh!3Q[1g1<DR^R^Gqr#s7jJ4f3>b7$HB*Ggutu]%Pr,&%G>mDA02Zt<p&`9I2*(\)6Ir`a>sD\Zc&'V*rk\)>e6"/Te(/HNP)CVGCjq:!'\SA(o4',2o^]'0-:'7je'%4:p([_;G=EXN5+tc$%)1`FK%s*%eP0un3GYoRUr+s[p"gaTLc`@kj"S2/LfF<#c'of-*jH0F?X,TZRG6;$?RQu>9ihc0MhFO&tV1/9+h:NB6=%bgTNa'V,%Y&nh?rl-68m@f:@8t1ZTJ(+t[%(3pRbN0ZUc_$NaKd9HgosogQ&#B8mT_,gE;o1kZk0\_4CJ'D0dOJ92PePc#O>l_ja\k>T`;\d]%MrB(;P+W;1rl&Nr"TMl1NJ!D*k::p2Vk=jo-;JVh(kdOiYJ"6+R5BhFY'P0O4e>W?:,8+JPuVViP#"u@?V8joZMa8`aAZQ5cSZu7%<_E%L9Psq2H"@H%eCA_=C8D'lH<9mBg)-"BrkE-V*''6j>;L$;83j50VR1f8^K94cr+WMD-fC*I@le@M3[ArRi?l-C:,9[]D.qp%%kbYOi!r;)JXV<4ldnZ"]iA1$a11+2Mg:&mal(kFe0?R)B4QaG]:6sJsedN1S`*@'%-T'F8kl*e^%Q\2[I*Kj1>Y4fgQ'fSuEG[j1%I/fg%9-,s1>;I$5s%?o!On6h]/N+L6DF-e+o_X;i:Y>DpI8AMiKRHYKpOmrjf_:&I:Y>F1&Gpp%o>:f1jm+QsguBm3bhda0)"ubS%f#p3Ke['Q8oBH#c%_mA&/a0o:(gYbQn'dKcU,:WtZCFE-iQ$;d?H'B5D)5^r;2-JhM*E2E]!bRj7eJVgqc'c(KAGK;Ot-tr?1c5u%B(BLbEa>$T7+k@9/W6C`j:b.chNt[ppmBUNA?PZH6Q3*hU*"E(N,J7RI/iH_EuAcW.F=`cG5It<R_q""q+,:6*>D+%=it'PpKU!A%D='-&L3C=V#:$D,qlD*CIT80!f[,#FUh"f#>[B%`R!kfM5+kPCV6Si<b4o'SeM_q(]O.`88nja8I<&Igdn$Y:mFGF^WJOmMMh8#R%/]I[_$+H*'?^bb6=$kAtj-D+a,:=QO9T.?&D&qV?m=+dhCe*fKcr^l3gO8X=X!R4Y$`-mGD9J5^q6SmMYI=WNGDrGHV,J0SXVH1Y%4"Z=^W;JhRNMicG1c:l%`m`F^RMu5':5rVoqY'(%[pQn^rUAeFL\DL>3H@2Z-HdOPAF/cV)nP0@(0ds*E`&HTY8rWGc?uj]7ja`X%B^iS;i=c]NYA8lX.*X"nKH('Ar:`(krjpNZU?q@AG$.86b_n+gb4Mm8Ilkdf[k(1eTG=iKpNu5o^/-Sf7+I7a$a'tQ6:V63a-GH.%*_"I<\5Hg6%1]PE<XA;B&%8n33m4iBF`^h<(Da$>(1(FW7;ZA?/LD+b[FLj`/mA,E2XfG)%L9'%>1?kB<*CmD]umJ*FA"Mo"C4o$%Wul&l'=/P&bOJkM46lp(MRI0W3QSW%OaEs716.Po!?OlahUemYSaSd?\/EikXsP`=[J]'"\NP`emKkCHFq5R.<6rZ\dkA:D>G/,*%UW#c1N/SKK[46k-Vsh+iAVIg!#/Pn=:N%79M\3C2XVKhrUtt?[/DMnu8_El))dK"%>at/\S!P?M14QpH?Z.<64Q*2FOch5HIf#o+%6>AseXA#<<e)7g!>+)0e,lL%T/K/taP$4#f^PW<JAt&*F>cH"U%Fp='@kIP1lk\Ds6?X_eG=$I#A9U@`-Y.EfFsghpUI02hI/gn4%Ga.+PTaYg'8+s@C_/2M"T8']daZ\#tkO,tV'!gt4ZVs7f8WD+;f1l67M!ue(k^5M]E,i:d!R><Kr=BsDIrMNUhG]$,(5V*'^4t=S%gJ4J-YG@?@`ZD!d?(T]r/q(8UQ]Tki;R4DRN'PS"+S\S,['?%\jD"_1c8]aB0t=c]n*h#0/ZA>E^4cfo34,J=[9:l+j+;q$NT<u`%W=qCZoR0;=jBDNdq,4,V;=;D;D-%YnmOW)M):95L.P9Mo3Si>Qk1K[k(.n"3$tiO+E@JS#$-mJ,<"fPFQG"SN.V,Y.AIY6_/BZ&O%*LcTT;VO9nZNO"Y`MK^8<i-NcK/"Cq29&*^W/"np4,YT<C&pumgH%om#@Aj:1(IQ!.T[pChf,Oj?.@b8-"a#.=d?(2(6.FUA5S%_%/RV.t4-j-:CbT"V0t>WD@!FW)8r=s,=Sq`R3ZD$f]bTc]BZ%ue$L(a4Z7=,7EqQc$APpJ77eMB1h=.]a2SQ8GPqR%fV^'EA[j#,V%ClFW)9"C7lW(>ZkDNn;u=]B*,*C\/;Fo>C)1bCG`NJ?PFZ2V'1AOX0bBDlI?Km#%W=dQ#c>Qq80/?1P';SR$Of7B7+3m`adq=GGF%g4;`,($R2]*E\IQkutru-ETfnbhtmH7G5>sY&jK:0QRo6-Eme[Z[7Y*1*s7cm_NF+L<#OP9R.Cq1<#uH=t<uPIERkX:<&M6<T[\c%H-%[fR^OIg19Fm;hd2IY9PNQlOfjGYPSRi;>7o&i1ed-`BM<,;AO]_cQgE]ZD,"J5Bgo+NHAagq8u(7#F;6X0/4kM:.q);=X/C#H%qUOu6Dr9HdqMoR-rSBs)a0C9o4hbTUg?kr*m=\BW=i6t\D5'3k4jd/I?Qq`YY^?>B8ZnD*Ned+5oFrLp*TG,\*al_B--=l1:NpVE%m54>"/\".G?7rt3`V8^G=`1YY\D*fI>XO[i5Ek6?/d_<i7klUS&o&98eE#h61nV:dCZU^aQP\^f6D6e#`t!./MRGEVkUlIMH!?23%IU^[)VFlkP\.F`+\[KpF7@O$uY1aZ$#-/-7=MDXhG#d!*[IRKjNQ=ubUF9:!Y;F`cc(XC/4nM+]I@t(je_?g?lRPYacf3)kI59c1%q`&-D-NUB/-U$K:]rr$%4Z$)K%iu.epOeB#rhruRO#4f58r2-JU.p!L_MLU;jLJTj<LBG6Q'.<(rBesj9ri6^NNQ9kq0Q2K1.n[D%FqD,L.a:2h#\B6hV>X"RNGfS,<h!ZY-^C&s9heFlhYND`_E!3@dBlSh,NUF>O>^]0TOc8!j@3A[(*1n6:WEXgn5jETLV&A2n$K`W%^N6Jp#m3,$G7<NN5kh&8]b6N7YCErngA;m1[EW]O06T%l(+YXohj4YIBpK>@\E7JlG@*D92Q1fY672JNYX3*K=8K>=XnN)??!KU.%(&&]SO/6S[Xb[mJp1ur</5aIE%Ul].7YM2k?\2)8<:$[?2g<f/T*oMsecc+Q1Z*#b*jtb;L`7RV?K2tGY^XKN%X\MbNFC*u2e*=E%446W(?t>ANO9)ND+A0nL@nqDq"n#Q_i$]Rh(!k6XYkME_BY9K<at=d=9?-p;\G2Hi0F)_mh.']r?h#sg`]3dQkTDi8`l5!kU)8ZB%%gEO5bfLZDj?=!@Qc#?j^/Aj5f\]MO_.XPtA,1)k8A_4"E8WduorD55hdqQY,r_q[VQ<4NO1B:C1_q^k,J;;(@,`+Yi@qY-9/5bW%k/tMgCCpW4YDqZp+_aXn(XR:+n%#+A<cmH]cCcS0Vf].<`ha:=a?'DI/dX&@ff&(;4b7t,pkFnKc8d+e1WMX;4ku<W[On(_,e^m<%oB3;@gq5^us5qW_RbAT5bS\X;&B=9b[khe<'g6r8_D1F;\T969Da&<C!0[pW@GSbV+U1][Ko,o%5@[!'-d,<:#\3!r@rpEnQY)kI%b8?"4ef>9uGnS0+&U3$cnM%fGb=/;B8VBb$Vo]_YlBDGM*Y&V=g1WtkXrJbsGc.?]aX>O5\Us<GI'MGX:dAhf.Z*puE`jKl%<_Du%q`sr">f/dn=Y_THN15ZkQXn4`SY$BDf+Y>$99^NI"h#epe+pLN.PX.GAClWunTBK?H?%-g%?t,I'DT&qS+oOEN-l:uBKKfS9mXNZ%jdPXmA6G)@+_M?@MDp*SmlUhG^t%dS;TS,PnE&,(L1"E"23bj".F9"dXC[F^4R-!fV-n4`>qZN7%FfdN2[B^913H;?3(i+l'K<<6%9))0GfmT9,/P\Jr$E^,^M?X^houjjX?uY(T$f#CHA@N[;\e])Ge1Fjt$n+k-'M;N#q!P1TR>[/9TIH$MQr8YQNj'-q](crDdY/&q%4B]2_?ketYc%cGm`Kj%<I";7ZOma52m0[piFi8L$-\]-agmf9PZ':)cM.M\1q4@G9Md</`B"kjI;tN[S8(4Ao^brJj^*6^!%oX6)%H<2N_I1*>gBIFV\Pr3?`.r3^:(=oQqA^/rob*o/pPqu'87o4&G*C6OX[D^ee3e1tW[o?ZMG<4<:kIk8=XYMMH&K,HQ8-rncN$Z\R%?;J_'e"h.BenJC]p#8p(Fou+*/qlmGNI9pb;U3ta65H>]<68fG\i/T4S;iBnGle?Oi-C&1nu^m/fI+18QeUhAV`+c0$TB&Ps!-[Y%Xg.!!5sBD:MmO`Gp$.<O\J;8`/g&LOW?9QE=rlq&6@J_Gha\>k1-[Q$=+/W@0!rBu6ChnaN1"U8^KqUrD<L'.31M<UhQDQGj4$u6%EG@5Pcr>oq"S7!2A8/5dVV1X"Ie_WeXgiZ;r^T&2Cs@1-Qh0nKO(Q*i$nP^<K^\l#7/.gn,$loMlh_dCA:5:l]G@b5<LFnue5j):%%nAGGKN.B?i:a^h#=\@M.(ug?\;]H"Ls5H]o#"KS=rl:5WRjqYo[![DqX_)l3%[?ibE(-Cj0\_D/O*"RO43[[[/;m85>KC_e+2P&%Zi#&lqrY;XJ?duNOu/Q.En@Q1M_)J"[/6:I]ABr^*AY1COfom+pKY<D4CTHhXDU,;=0;<n-ZV`VIEfB^m)?CLg?l"rCC6G>FC!.0%iL5?&74bW&:uCA&;kY`!_DR%XTB=`FE7E-LD@>&1fMX?*3T0+ig:CFsVAP)sDAKs8]%tuq^3apHqerrfAb3<h&-mNoF[+'QJ]8P^%8F>K8JbN<`/.q&7q$0!'Z@1@g#sN>j(7Xc%DgUpT!dUa'huGg`]hD7,&MA?BZF[j!LMLW'%r#P^:,1N0.8P4;NNi<Y-auB?Z$VJh%@m?rNam-STd58jdHQ?D`f^!)eK@XksHUtCB0=P^f!ut#.'^\^IC$bol%bqJ]9>.fER\nbU]q\fk^N:a.27)SSD14/%0s$&_``Qr[%UFT-(@#h0`jGrmt3jE,AHXmV`H]"[KodgQg:ABU7EbUEu(tU`OXnOb7*aB_D?snW336Jo@@5Xp!R[*Sn.S0.a[s*&*&"e>rGOt>'%qjVf=%j*JOXi-qYAsb3'J_3'rG%qohDXY."IUXI)/V'dcHJqYH\'a/VTBb9%W)n<698$=N85j91'qnd5QXr9oBSsc:i@J4O/MT.1%G:.X"id"3JFjDc+9/u5L75+a`9`]Z%dUIr3>qrX1/5-<'>$k.d;(U40=e\V5EAIf*Ua'p>;^Cj>q23bk4aXj&:IV(JAmQ?ad5JkQ%*-`![[BI)g;eFj6:LZN.F5.>/WWadb,(BfoB306em[U&Q7RU=CC;_0[8m+#bC"L\F)Gr%1[2K_lqG7PdM*pd?LpRpiK@PQ?W@tZP%2'pnie:Kl;$Pp)b6t;TW/TADrBU*fg2Lc;H,Zb;d(qin#(2iW%Wg-tHo9I,W\PrX)EO8>G\JCC0"HI3D<2Z#FiPTcA8q\(n%p'.?%'`1c9>_:DU>+DKZ*@RMV9ItV0XIAd1@[F&+pCq6aMgJir)rGYW0f<E!lT$V#Ht$Y-fKsMNg*_,ciqA6To!)X@U>B<5dRoNDTT-`b%P\Q'ZF_8fT3NJ7[TG#ON1EZ&.GWW_@!FGBbecb#A9o[J0]a9,Rq+H+A1)?;93P<>a[#rd+>iEn@WQd1M(2+.0BRCX!66./(*eZ_a%`%+k*j>9t3+?n*!&p_C8#c?;gp]=Vn>!`rTg(K8+,A+)16,1!V[['H)C[\VV3&8"@8/Q'S2$N>H7r&D<6r^h+"O<R_d9;,g-q]sQ%0hua`6"Jq:M`(b;).TjEOTR8i[4-n;/=lWN9ek'?YrA6kTiuCe@J9,j!>4iqX;Ss\3"\;6a8u96K^c9aKF'@c4Fb>nrOubFB$<pf%h"O]4&`dKX]L.+%=-=?]mkF%&N_-J9j`A*[>:stOOMQ>D0%$nmfR,]?X:\)l+>(]$:d;1VU017cdE"UXo9]5WA&N6>\GR^AMo>oN%TGuhl`]3SA0rL^<LrR7)]tct%AC3A>4']&;S,1PC"3*]B#I[fZ%7)).L=-Y&>!/()^_qsd)?Q5IEp=SQ0auiQg(IB#2#*B0f4-3\%6*Ks'1g5Jp5@r^b_h@?uXX,@u7CT_D!:f2UK$#!ed9:"0e\/?nCfs-RQ?^B3'8EUB&l<hLBIs6p=4\!jZ2H8uG"604H^9CgrCs$I%JnX4D06<^QEq8$d30Gc.YTN\(XcXq#,hE#^[G@P]Q,n?V;MP!!A9l$rgtp>NIZgnY=p+Q"@p<7l-1W!)+pPL/T=_2VF\UjS+Eh5!%*9>$k8X<[^H8(`TV$1KQ-kOfh'gWRg;ot,UK@XD,[+%lTJ"GOeX$<JrhGp327]S_M9t:iBIs>!7?1iKk[Hd@2>cQ-![BDcQp7\6L%3\Ek$:BG!qI.\`ZCU!(o>hh2?ooi-I;Z/+0iKCKGTCIS8T<UkeeRp.:eRstAWfP9OpHBfAX$4<p/CeBLjK$VRaf<[cW`5TVQ`iSA%nB-b)E\UIA.(s%;?L".+BhJ=qN'b@^od@kL6ZV#_O]n`;Ld1k7mDBb/hE611oC1#fT5-R,9E4/@frr.T-I3JeGIR2FT[@ZK`Rggr%`q.YDHu\cWrU%5oRs3cG55a`mkk4E%':rJtT0<('l>oN7HhK>hQ^`4!qm4P^gqNS/X]Bqk2hZ?p7TXNBkVedbi+n[GifL+`ckL]s%mCTk%#Kr3.9u^PQqdU\eLTg/aIQ3_NVele:%5"?h\c$?>#sR*K^U^s:=PS5*VVj,b^;$?E[s)2GA=J55Y%DF+rS<sPkfV40?bZI]%.1[3*P,5#Ip7'flYMXd2IJG&_C=8Co52:O4pW^;p3hiLQ"a$3tnlm_?\`@fUp[^%Vrqtp@mU3"E=`tQ6XXcPZD#%jl%X^NGrGc1H%A89eg;h38SP0Z%Q8+HS]N)KRL^Nb2(k&*PZl29ZK[,UJjcegiI(cPR%o)-=Pj'Ob&n&rCE\t01T>bQ>>ONY5JH1g"j&%?HuN\&2H%f+M,e0K>r&[HeC6]O/@#GYO<=N[q!&f%eTd^UnjanE(K$rT3QD^7B,;]F4+d`tqm!Y*Ad=52=G\jk1Z-`tVEh/sP3C*\rc@[-CkJ%F'l\1p\!q@]>q:#Rq5IBj'$[Xf:oWBZtu5N`l?gVF6Gh.c-e5XNE!V,rQ#!hBl+Qs]7';MaIJ^-oOpB;HsE;TK>ogDe_B&F"53St%9('[Wb+m*]*mp48jM9SK"m@*mc"DCRa(6j7gmn8\X7'pJabXdL/SD?7Gt^6A]i$Iq9f[Vq@B6ErFbpR>iZl']`S%ec5fXZ$Y).5[%jOi66[HEaKlVMDt\+04T+!(g*?&f(frBRQH_NHP9?Mm0I!&6Aog5eQKD%:D6]XZc[DMTk784h0cl3>[=eG26cQ&tOK'8$c$e!c:4%7UKEuqR=68oo%)AFdoG(nL&ecn*&(E?:t7WZ7a#:;X5\pU!QlM++F"AYJc=iJ^?4YXuF?@fI7tqMSB'.6hTd"#A1@/#IN%#fs;dq%J)06G-j#lj>f([i2S5hPNZcesR$Ps!PV+8F<O[!pHD:**39TroA;6frOYa+eB4q9G,AZ_@K<Z>:B5;M6+(3D'OYA,5dEm1bkFMm<%m&:N9'R)tAm*K>*+mk*XfqG"\@Fu.ulcOL9ls58dK6]s4[L0WLRq"LOiZ*,0,(#W^mNYT\6Naq9B3f\oerR,_p!<QNCWD+PAZPt.%aVQnnh#@$'c'pf!h)Fe@rp=lMoC28C_p*tkn*/BbRs2@15J2Dg]6XGDgV4j8R7`3l5JR0np.rH9]-@XYmY90gM8$4i3JjU02\/m+%k*t*9S(iG-I:Z"-InNG$LMnToZnL+_gUjr`IX+_]UQg%2b3qbTZKJj7pg8OI`B3oG9cA@-HhHh#p>PtD$G8\elq;;Q8[%#W%#t/A%]KCOa`oI*pgK-Vp'4GPRhcUO&G;l^Cc[PG_T3o8.nGLP3%r^;ggq<NFc2XH8T41;*s*hEP3=.BSa3@C50/$X/).0,Y.-]&9T2EIT%UApk1S"K[roD="tK/Df;-h_ohl%O!.aTU]#@%4U"3)BGMbuoW6DX-1C@[LSD`=\_<+[Rd%)u;dIq6S=1XqSq7-=Q\9Zd=]pD*\g+%W003+o^duJL@EsPJ,_e(h<*lRWMfakiQlGAXrP$`^]!93T5Xb#_ED)bmCWD&n3<K2/XoB4o3'Y!$BP'`pk2F_XaXqI(A<3Yg]!T5%n*u+5:i(j`oC914@K#1]rm\B>L>>okVYRB\]C1Zm3U7Y7#[g;s@fK,e&2K'"#'MI5-U-HCol2TMii?GTkH!Y?H!!n(&h2;us0&cT%;s6-WKYbVs;ji'YYl28T?(_)lm.^P#ffs>&IRS%!>4+S%o>St0Da/t2]?Q\')9*IZh<+mK1?>a`6=,Ya55XWlfTSpf1ReLA3bm1D%,/WL%HRU0$dDS<<H^_G&%Emb6CY\*jKL6X[)GdE<LiBmGp3`;U]]FOm:3T4QG'1)(_>XB9cE6od~>%AI9_PrivateDataEnd